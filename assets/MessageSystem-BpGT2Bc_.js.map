{"version":3,"file":"MessageSystem-BpGT2Bc_.js","sources":["../../assets/js/ui-modules/components/MessageSystem.js"],"sourcesContent":["/**\n * MessageSystem - Centralized toast/notification system\n * \n * Eliminates different message implementations found across games.\n * Provides consistent user feedback with animations and auto-dismiss.\n * \n * Features:\n * - Multiple message types (info, success, error, warning)\n * - Auto-dismiss with configurable duration\n * - Animation support\n * - Queue management for multiple messages\n * - Position configuration\n */\n\nexport class MessageSystem {\n    constructor(config = {}) {\n        this.config = this.mergeDefaultConfig(config);\n        this.messageQueue = [];\n        this.activeMessages = new Set();\n        this.container = null;\n        this.messageIdCounter = 0;\n        this.isInitialized = false;\n        \n        // Don't auto-initialize - let tests control initialization\n        // this.init();\n    }\n\n    /**\n     * Merge user config with defaults\n     */\n    mergeDefaultConfig(userConfig) {\n        const defaultConfig = {\n            position: 'top-right', // top-right, top-left, bottom-right, bottom-left, top-center, bottom-center\n            duration: 3000, // ms, 0 for no auto-dismiss\n            maxMessages: 5,\n            animation: true,\n            animationDuration: 300, // ms\n            spacing: 10, // px between messages\n            \n            types: {\n                info: { \n                    className: 'message-info',\n                    icon: '‚ÑπÔ∏è',\n                    duration: 3000\n                },\n                success: { \n                    className: 'message-success',\n                    icon: '‚úÖ',\n                    duration: 3000\n                },\n                error: { \n                    className: 'message-error',\n                    icon: '‚ùå',\n                    duration: 5000\n                },\n                warning: { \n                    className: 'message-warning',\n                    icon: '‚ö†Ô∏è',\n                    duration: 4000\n                },\n                win: {\n                    className: 'message-win',\n                    icon: 'üéâ',\n                    duration: 5000\n                }\n            }\n        };\n\n        const merged = this.deepMerge(defaultConfig, userConfig);\n        console.log('MessageSystem config merged:', merged);\n        return merged;\n    }\n\n    /**\n     * Deep merge utility\n     */\n    deepMerge(target, source) {\n        const result = { ...target };\n        \n        for (const key in source) {\n            if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n                result[key] = this.deepMerge(target[key] || {}, source[key]);\n            } else {\n                result[key] = source[key];\n            }\n        }\n        \n        return result;\n    }\n\n    /**\n     * Initialize the message system\n     */\n    async init() {\n        this.createContainer();\n        this.injectStyles();\n        this.isInitialized = true;\n        \n        console.log(`üì¢ MessageSystem initialized at ${this.config.position}`);\n        return Promise.resolve();\n    }\n\n    /**\n     * Create the message container\n     */\n    createContainer() {\n        // Support custom container configuration\n        if (this.config.container && typeof this.config.container === 'string') {\n            const customContainer = document.querySelector(this.config.container);\n            if (customContainer) {\n                this.container = customContainer;\n                this.container.className = `message-container message-${this.config.position}`;\n                return;\n            }\n        }\n        \n        // Check if default container already exists\n        let existingContainer = document.getElementById('message-container');\n        if (existingContainer) {\n            this.container = existingContainer;\n            return;\n        }\n\n        this.container = document.createElement('div');\n        this.container.id = 'message-container';\n        this.container.className = `message-container message-${this.config.position}`;\n        \n        document.body.appendChild(this.container);\n    }\n\n    /**\n     * Inject required CSS styles\n     */\n    injectStyles() {\n        // Check if styles already exist\n        if (document.getElementById('message-system-styles')) {\n            return;\n        }\n\n        const styles = document.createElement('style');\n        styles.id = 'message-system-styles';\n        styles.textContent = `\n            .message-container {\n                position: fixed;\n                z-index: 10000;\n                pointer-events: none;\n                max-width: 400px;\n            }\n\n            .message-container.message-top-right {\n                top: 20px;\n                right: 20px;\n            }\n\n            .message-container.message-top-left {\n                top: 20px;\n                left: 20px;\n            }\n\n            .message-container.message-bottom-right {\n                bottom: 20px;\n                right: 20px;\n            }\n\n            .message-container.message-bottom-left {\n                bottom: 20px;\n                left: 20px;\n            }\n\n            .message-container.message-top-center {\n                top: 20px;\n                left: 50%;\n                transform: translateX(-50%);\n            }\n\n            .message-container.message-bottom-center {\n                bottom: 20px;\n                left: 50%;\n                transform: translateX(-50%);\n            }\n\n            .message-toast {\n                background: rgba(255, 255, 255, 0.95);\n                backdrop-filter: blur(20px);\n                -webkit-backdrop-filter: blur(20px);\n                color: #1f2937;\n                padding: 16px 20px;\n                border-radius: 16px;\n                margin-bottom: ${this.config.spacing}px;\n                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15), 0 4px 8px rgba(0, 0, 0, 0.1);\n                border: 1px solid rgba(255, 255, 255, 0.2);\n                pointer-events: auto;\n                display: flex;\n                align-items: center;\n                gap: 12px;\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n                font-size: 14px;\n                line-height: 1.5;\n                font-weight: 500;\n                max-width: 100%;\n                word-wrap: break-word;\n                transition: all ${this.config.animationDuration}ms cubic-bezier(0.4, 0.0, 0.2, 1);\n                position: relative;\n                overflow: hidden;\n            }\n\n            .message-toast::before {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                height: 3px;\n                background: linear-gradient(90deg, #3b82f6, #8b5cf6, #ec4899);\n                opacity: 0.7;\n                transition: opacity 0.3s ease;\n            }\n\n            .message-toast.message-entering {\n                opacity: 0;\n                transform: translateX(120%) scale(0.9);\n            }\n\n            .message-toast.message-entered {\n                opacity: 1;\n                transform: translateX(0) scale(1);\n            }\n\n            .message-toast.message-exiting {\n                opacity: 0;\n                transform: translateX(120%) scale(0.9);\n                margin-bottom: 0;\n                padding-top: 0;\n                padding-bottom: 0;\n                max-height: 0;\n            }\n\n            .message-toast:hover {\n                transform: translateY(-2px) scale(1.02);\n                box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2), 0 6px 12px rgba(0, 0, 0, 0.15);\n            }\n\n            .message-toast.message-info {\n                background: rgba(59, 130, 246, 0.95);\n                color: white;\n                border: 1px solid rgba(59, 130, 246, 0.3);\n            }\n\n            .message-toast.message-info::before {\n                background: linear-gradient(90deg, #93c5fd, #3b82f6, #1d4ed8);\n            }\n\n            .message-toast.message-success {\n                background: rgba(34, 197, 94, 0.95);\n                color: white;\n                border: 1px solid rgba(34, 197, 94, 0.3);\n            }\n\n            .message-toast.message-success::before {\n                background: linear-gradient(90deg, #86efac, #22c55e, #15803d);\n            }\n\n            .message-toast.message-error {\n                background: rgba(239, 68, 68, 0.95);\n                color: white;\n                border: 1px solid rgba(239, 68, 68, 0.3);\n            }\n\n            .message-toast.message-error::before {\n                background: linear-gradient(90deg, #fca5a5, #ef4444, #dc2626);\n            }\n\n            .message-toast.message-warning {\n                background: rgba(245, 158, 11, 0.95);\n                color: white;\n                border: 1px solid rgba(245, 158, 11, 0.3);\n            }\n\n            .message-toast.message-warning::before {\n                background: linear-gradient(90deg, #fcd34d, #f59e0b, #d97706);\n            }\n\n            .message-toast.message-win {\n                background: linear-gradient(135deg, rgba(34, 197, 94, 0.95), rgba(59, 130, 246, 0.95));\n                color: white;\n                border: 1px solid rgba(255, 255, 255, 0.3);\n                animation: winPulse 2s ease-in-out infinite;\n            }\n\n            .message-toast.message-win::before {\n                background: linear-gradient(90deg, #fbbf24, #f59e0b, #d97706, #fbbf24);\n                background-size: 200% 100%;\n                animation: gradientShift 3s ease-in-out infinite;\n            }\n\n            @keyframes winPulse {\n                0%, 100% { \n                    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15), 0 4px 8px rgba(0, 0, 0, 0.1);\n                }\n                50% { \n                    box-shadow: 0 15px 35px rgba(34, 197, 94, 0.4), 0 8px 16px rgba(59, 130, 246, 0.3);\n                }\n            }\n\n            @keyframes gradientShift {\n                0%, 100% { background-position: 0% 50%; }\n                50% { background-position: 100% 50%; }\n            }\n\n            .message-icon {\n                flex-shrink: 0;\n                font-size: 18px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 32px;\n                height: 32px;\n                background: rgba(255, 255, 255, 0.2);\n                border-radius: 50%;\n                transition: all 0.3s ease;\n            }\n\n            .message-content {\n                flex: 1;\n                font-weight: 500;\n                letter-spacing: 0.01em;\n            }\n\n            .message-close {\n                background: rgba(255, 255, 255, 0.2);\n                border: none;\n                color: inherit;\n                cursor: pointer;\n                padding: 6px;\n                margin-left: 8px;\n                opacity: 0.8;\n                font-size: 16px;\n                line-height: 1;\n                flex-shrink: 0;\n                border-radius: 50%;\n                width: 28px;\n                height: 28px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                transition: all 0.3s ease;\n            }\n\n            .message-close:hover {\n                opacity: 1;\n                background: rgba(255, 255, 255, 0.3);\n                transform: scale(1.1);\n            }\n\n            .message-close:active {\n                transform: scale(0.95);\n            }\n\n            /* Dark mode support */\n            @media (prefers-color-scheme: dark) {\n                .message-toast {\n                    background: rgba(31, 41, 55, 0.95);\n                    color: white;\n                    border: 1px solid rgba(75, 85, 99, 0.3);\n                }\n                \n                .message-icon {\n                    background: rgba(255, 255, 255, 0.15);\n                }\n                \n                .message-close {\n                    background: rgba(255, 255, 255, 0.15);\n                }\n                \n                .message-close:hover {\n                    background: rgba(255, 255, 255, 0.25);\n                }\n            }\n\n            /* Mobile responsiveness */\n            @media (max-width: 640px) {\n                .message-container {\n                    left: 10px !important;\n                    right: 10px !important;\n                    top: 10px !important;\n                    max-width: none;\n                    transform: none !important;\n                }\n                \n                .message-toast {\n                    padding: 14px 16px;\n                    border-radius: 12px;\n                    font-size: 13px;\n                    margin-bottom: 8px;\n                }\n                \n                .message-icon {\n                    width: 28px;\n                    height: 28px;\n                    font-size: 16px;\n                }\n                \n                .message-close {\n                    width: 24px;\n                    height: 24px;\n                    font-size: 14px;\n                }\n            }\n        `;\n        \n        document.head.appendChild(styles);\n    }\n\n    /**\n     * Show a message\n     * @param {string} content - Message content\n     * @param {string} type - Message type (info, success, error, warning, win)\n     * @param {Object} options - Additional options\n     * @returns {string} Message ID for manual dismissal\n     */\n    show(content, type = 'info', options = {}) {\n        // Auto-initialize if not already done\n        if (!this.isInitialized) {\n            this.init();\n        }\n        \n        const messageId = this.generateMessageId();\n        const typeConfig = (this.config.types && this.config.types[type]) || \n                          (this.config.types && this.config.types.info) || \n                          { duration: 3000, className: 'message-info', icon: '‚ÑπÔ∏è' };\n        \n        const message = {\n            id: messageId,\n            content,\n            type,\n            typeConfig,\n            options: {\n                duration: options.duration !== undefined ? options.duration : typeConfig.duration,\n                dismissible: options.dismissible !== false,\n                persistent: options.persistent || false,\n                ...options\n            },\n            timestamp: Date.now()\n        };\n\n        // Add to queue\n        this.messageQueue.push(message);\n        \n        // Process queue\n        this.processQueue();\n        \n        return messageId;\n    }\n\n    /**\n     * Convenience methods for different message types\n     */\n    info(content, options = {}) {\n        return this.show(content, 'info', options);\n    }\n\n    success(content, options = {}) {\n        return this.show(content, 'success', options);\n    }\n\n    error(content, options = {}) {\n        return this.show(content, 'error', options);\n    }\n\n    warning(content, options = {}) {\n        return this.show(content, 'warning', options);\n    }\n\n    win(content, options = {}) {\n        return this.show(content, 'win', options);\n    }\n\n    /**\n     * Process the message queue\n     */\n    processQueue() {\n        // Don't process if not initialized\n        if (!this.container) {\n            return;\n        }\n        \n        // Remove excess messages if we have too many active\n        while (this.activeMessages.size >= this.config.maxMessages && this.activeMessages.size > 0) {\n            const oldestMessage = Array.from(this.activeMessages)[0];\n            this.hide(oldestMessage);\n        }\n\n        // Show queued messages\n        while (this.messageQueue.length > 0 && this.activeMessages.size < this.config.maxMessages) {\n            const message = this.messageQueue.shift();\n            this.displayMessage(message);\n        }\n    }\n\n    /**\n     * Display a message in the UI\n     * @param {Object} message - Message object\n     */\n    displayMessage(message) {\n        // Don't display if not initialized\n        if (!this.container) {\n            return;\n        }\n        \n        const element = this.createMessageElement(message);\n        \n        // Add to container\n        this.container.appendChild(element);\n        this.activeMessages.add(message.id);\n\n        // Trigger animation\n        if (this.config.animation) {\n            this.animateIn(element);\n        }\n\n        // Set up auto-dismiss\n        if (message.options.duration > 0 && !message.options.persistent) {\n            setTimeout(() => {\n                this.hide(message.id);\n            }, message.options.duration);\n        }\n\n        // Store element reference\n        message.element = element;\n    }\n\n    /**\n     * Create a message DOM element\n     * @param {Object} message - Message object\n     * @returns {HTMLElement} Message element\n     */\n    createMessageElement(message) {\n        const element = document.createElement('div');\n        element.className = `message message-toast ${message.typeConfig.className}`;\n        element.dataset.messageId = message.id;\n\n        // Create icon\n        const icon = document.createElement('span');\n        icon.className = 'message-icon';\n        icon.textContent = message.typeConfig.icon || '';\n\n        // Create content\n        const content = document.createElement('div');\n        content.className = 'message-content';\n        content.textContent = message.content;\n\n        // Create close button (if dismissible)\n        let closeButton = null;\n        if (message.options.dismissible) {\n            closeButton = document.createElement('button');\n            closeButton.className = 'message-close';\n            closeButton.innerHTML = '√ó';\n            closeButton.addEventListener('click', () => this.hide(message.id));\n        }\n\n        // Assemble element\n        element.appendChild(icon);\n        element.appendChild(content);\n        if (closeButton) {\n            element.appendChild(closeButton);\n        }\n\n        return element;\n    }\n\n    /**\n     * Animate message in\n     * @param {HTMLElement} element - Message element\n     */\n    animateIn(element) {\n        element.classList.add('message-entering');\n        \n        // Force reflow\n        element.offsetHeight;\n        \n        // Trigger animation\n        requestAnimationFrame(() => {\n            element.classList.remove('message-entering');\n            element.classList.add('message-entered');\n        });\n    }\n\n    /**\n     * Animate message out\n     * @param {HTMLElement} element - Message element\n     * @returns {Promise} Promise that resolves when animation completes\n     */\n    animateOut(element) {\n        return new Promise(resolve => {\n            if (!this.config.animation) {\n                resolve();\n                return;\n            }\n\n            element.classList.remove('message-entered');\n            element.classList.add('message-exiting');\n\n            setTimeout(() => {\n                resolve();\n            }, this.config.animationDuration);\n        });\n    }\n\n    /**\n     * Hide a specific message\n     * @param {string} messageId - Message ID to hide\n     * @returns {boolean} True if message was found and hidden\n     */\n    async hide(messageId) {\n        if (!this.container) {\n            return false;\n        }\n        \n        const element = this.container.querySelector(`[data-message-id=\"${messageId}\"]`);\n        \n        if (!element) {\n            return false;\n        }\n\n        // Remove from active set\n        this.activeMessages.delete(messageId);\n\n        // Animate out and remove\n        await this.animateOut(element);\n        \n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n\n        // Process queue in case there are waiting messages\n        this.processQueue();\n\n        return true;\n    }\n\n    /**\n     * Hide all messages\n     * @returns {number} Number of messages hidden\n     */\n    async hideAll() {\n        const messageIds = Array.from(this.activeMessages);\n        let hiddenCount = 0;\n\n        for (const messageId of messageIds) {\n            if (await this.hide(messageId)) {\n                hiddenCount++;\n            }\n        }\n\n        return hiddenCount;\n    }\n\n    /**\n     * Clear all messages immediately (no animation)\n     */\n    clear() {\n        if (this.container) {\n            this.container.innerHTML = '';\n        }\n        this.activeMessages.clear();\n        this.messageQueue.length = 0;\n    }\n\n    /**\n     * Get active message count\n     * @returns {number} Number of active messages\n     */\n    getActiveCount() {\n        return this.activeMessages.size;\n    }\n\n    /**\n     * Get queued message count\n     * @returns {number} Number of queued messages\n     */\n    getQueuedCount() {\n        return this.messageQueue.length;\n    }\n\n    /**\n     * Check if a specific message is active\n     * @param {string} messageId - Message ID to check\n     * @returns {boolean} True if message is active\n     */\n    isActive(messageId) {\n        return this.activeMessages.has(messageId);\n    }\n\n    /**\n     * Generate unique message ID\n     * @returns {string} Unique message ID\n     */\n    generateMessageId() {\n        return `msg_${Date.now()}_${++this.messageIdCounter}`;\n    }\n\n    /**\n     * Update message position\n     * @param {string} position - New position\n     */\n    setPosition(position) {\n        this.container.className = `message-container message-${position}`;\n        this.config.position = position;\n    }\n\n    /**\n     * Update configuration\n     * @param {Object} newConfig - Configuration updates\n     */\n    updateConfig(newConfig) {\n        this.config = this.deepMerge(this.config, newConfig);\n        \n        // Re-inject styles if animation settings changed\n        if (newConfig.animationDuration || newConfig.spacing) {\n            const existingStyles = document.getElementById('message-system-styles');\n            if (existingStyles) {\n                existingStyles.remove();\n            }\n            this.injectStyles();\n        }\n    }\n\n    /**\n     * Get debug information\n     * @returns {Object} Debug information\n     */\n    getDebugInfo() {\n        return {\n            activeMessages: this.activeMessages.size,\n            queuedMessages: this.messageQueue.length,\n            position: this.config.position,\n            maxMessages: this.config.maxMessages,\n            config: { ...this.config }\n        };\n    }\n\n    // === TEST-COMPATIBLE API EXTENSIONS ===\n    \n    /**\n     * Alias for show() to match test expectations\n     */\n    showMessage(content, type = 'info', options = {}) {\n        return this.show(content, type, options);\n    }\n    \n    /**\n     * Remove a message by ID (alias for hide) - synchronous for test compatibility\n     */\n    removeMessage(messageId) {\n        if (!this.container) {\n            return false;\n        }\n        \n        const element = this.container.querySelector(`[data-message-id=\"${messageId}\"]`);\n        \n        if (!element) {\n            return false;\n        }\n\n        // Remove immediately without animation for test compatibility\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n        this.activeMessages.delete(messageId);\n        \n        return true;\n    }\n    \n    /**\n     * Clear all messages (alias for hideAll)\n     */\n    clearAllMessages() {\n        return this.hideAll();\n    }\n    \n    /**\n     * Clear messages by type\n     */\n    clearMessagesByType(type) {\n        if (!this.container) {\n            return 0;\n        }\n        \n        const elements = this.container.querySelectorAll(`.message-${type}`);\n        let clearedCount = 0;\n        \n        // Convert to array to avoid live NodeList issues\n        Array.from(elements).forEach(element => {\n            const messageId = element.dataset.messageId;\n            if (messageId) {\n                // Remove from DOM and activeMessages immediately\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                this.activeMessages.delete(messageId);\n                clearedCount++;\n            }\n        });\n        \n        return clearedCount;\n    }\n    \n    /**\n     * Get message count by type or total\n     */\n    getMessageCount(type = null) {\n        if (!this.container) {\n            return 0;\n        }\n        \n        if (type) {\n            return this.container.querySelectorAll(`.message-${type}`).length;\n        }\n        return this.activeMessages.size;\n    }\n    \n    /**\n     * Show progress message with progress bar\n     */\n    showProgress(content, initialProgress = 0, options = {}) {\n        // Auto-initialize if needed\n        if (!this.isInitialized) {\n            this.init();\n        }\n        \n        const messageId = this.generateMessageId();\n        const progressOptions = {\n            ...options,\n            persistent: true,\n            dismissible: false\n        };\n        \n        const element = this.createProgressElement(content, initialProgress, messageId);\n        \n        // Add to container\n        if (this.container) {\n            this.container.appendChild(element);\n            this.activeMessages.add(messageId);\n        }\n        \n        // Store progress data\n        const progressData = {\n            id: messageId,\n            element: element,\n            progress: initialProgress,\n            content: content\n        };\n        \n        this.progressMessages = this.progressMessages || new Map();\n        this.progressMessages.set(messageId, progressData);\n        \n        return messageId;\n    }\n    \n    /**\n     * Update progress for a progress message\n     */\n    updateProgress(messageId, progress) {\n        const progressData = this.progressMessages && this.progressMessages.get(messageId);\n        if (!progressData) return false;\n        \n        const progressBar = progressData.element.querySelector('.progress-bar');\n        if (progressBar) {\n            progressBar.style.width = `${Math.max(0, Math.min(100, progress))}%`;\n            progressData.progress = progress;\n            return true;\n        }\n        \n        return false;\n    }\n    \n    /**\n     * Complete progress message\n     */\n    completeProgress(messageId, finalMessage = 'Completed!') {\n        const progressData = this.progressMessages && this.progressMessages.get(messageId);\n        if (!progressData) return false;\n        \n        // Update content\n        const contentElement = progressData.element.querySelector('.message-content');\n        if (contentElement) {\n            contentElement.textContent = finalMessage;\n        }\n        \n        // Remove progress bar\n        const progressBar = progressData.element.querySelector('.progress-bar');\n        if (progressBar) {\n            progressBar.remove();\n        }\n        \n        // Auto-remove after delay\n        setTimeout(() => {\n            this.hide(messageId);\n            if (this.progressMessages) {\n                this.progressMessages.delete(messageId);\n            }\n        }, 2000);\n        \n        return true;\n    }\n    \n    /**\n     * Show loading message with spinner\n     */\n    showLoading(content, options = {}) {\n        // Auto-initialize if needed\n        if (!this.isInitialized) {\n            this.init();\n        }\n        \n        const messageId = this.generateMessageId();\n        const loadingOptions = {\n            ...options,\n            persistent: true,\n            dismissible: false\n        };\n        \n        const element = this.createLoadingElement(content, messageId);\n        \n        // Add to container\n        if (this.container) {\n            this.container.appendChild(element);\n            this.activeMessages.add(messageId);\n        }\n        \n        return messageId;\n    }\n    \n    /**\n     * Create progress element\n     */\n    createProgressElement(content, progress, messageId) {\n        const element = document.createElement('div');\n        element.className = 'message message-toast message-info';\n        element.dataset.messageId = messageId;\n        \n        element.innerHTML = `\n            <span class=\"message-icon\">üìä</span>\n            <div class=\"message-content\">${content}</div>\n            <div class=\"progress-bar\" style=\"position: absolute; bottom: 0; left: 0; height: 3px; background: #3498db; width: ${progress}%; transition: width 0.3s ease; border-radius: 0 0 8px 8px;\"></div>\n        `;\n        \n        return element;\n    }\n    \n    /**\n     * Create loading element\n     */\n    createLoadingElement(content, messageId) {\n        const element = document.createElement('div');\n        element.className = 'message message-toast message-info';\n        element.dataset.messageId = messageId;\n        \n        element.innerHTML = `\n            <div class=\"loading-spinner\" style=\"width: 16px; height: 16px; border: 2px solid #e3e3e3; border-top: 2px solid #3498db; border-radius: 50%; animation: spin 1s linear infinite;\"></div>\n            <div class=\"message-content\">${content}</div>\n        `;\n        \n        // Add spinner animation to styles if not present\n        if (!document.getElementById('spinner-animation')) {\n            const style = document.createElement('style');\n            style.id = 'spinner-animation';\n            style.textContent = `\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n            `;\n            document.head.appendChild(style);\n        }\n        \n        return element;\n    }\n    \n    /**\n     * Set modal content (compatibility method)\n     */\n    setModalContent(modalType, content) {\n        // This is for test compatibility - messages don't have modal content\n        console.debug('üí¨ setModalContent called on MessageSystem - noop for compatibility');\n        return false;\n    }\n    \n    /**\n     * Get modal content (compatibility method)\n     */\n    getModalContent(modalType) {\n        // This is for test compatibility - messages don't have modal content\n        console.debug('üí¨ getModalContent called on MessageSystem - noop for compatibility');\n        return '';\n    }\n    \n    /**\n     * Set modal title (compatibility method)\n     */\n    setModalTitle(modalType, title) {\n        // This is for test compatibility - messages don't have modal titles\n        console.debug('üí¨ setModalTitle called on MessageSystem - noop for compatibility');\n        return false;\n    }\n    \n    // === ENHANCED DEBUG AND DEVELOPMENT SUPPORT ===\n    \n    /**\n     * Enhanced debug information\n     */\n    getDebugInfo() {\n        let messageTypes = [];\n        \n        if (this.container) {\n            messageTypes = Array.from(new Set(Array.from(this.container.querySelectorAll('.message-toast')).map(el => {\n                const classes = el.className.split(' ');\n                return classes.find(cls => cls.startsWith('message-') && cls !== 'message-toast');\n            }))).filter(Boolean);\n        }\n        \n        return {\n            isInitialized: this.isInitialized,\n            messageCount: this.activeMessages.size,\n            messageTypes,\n            config: { ...this.config },\n            container: this.container ? 'found' : 'missing',\n            position: this.config.position,\n            activeMessages: this.activeMessages.size,\n            queuedMessages: this.messageQueue.length,\n            maxMessages: this.config.maxMessages\n        };\n    }\n    \n    /**\n     * Get message statistics\n     */\n    getStatistics() {\n        const messagesByType = {};\n        \n        if (this.container) {\n            const messageElements = this.container.querySelectorAll('.message-toast');\n            \n            messageElements.forEach(element => {\n                const classes = element.className.split(' ');\n                const typeClass = classes.find(cls => cls.startsWith('message-') && cls !== 'message-toast');\n                \n                if (typeClass) {\n                    const type = typeClass.replace('message-', '');\n                    messagesByType[type] = (messagesByType[type] || 0) + 1;\n                }\n            });\n        }\n        \n        return {\n            totalMessages: this.activeMessages.size,\n            messagesByType,\n            averageDisplayTime: this.config.duration,\n            currentMessages: this.activeMessages.size,\n            messagesByCurrentType: messagesByType\n        };\n    }\n    \n    /**\n     * Validate configuration\n     */\n    validateConfiguration() {\n        const errors = [];\n        const warnings = [];\n        \n        // Check position\n        const validPositions = ['top-left', 'top-right', 'top-center', 'bottom-left', 'bottom-right', 'bottom-center'];\n        if (!validPositions.includes(this.config.position)) {\n            warnings.push(`Invalid position \"${this.config.position}\"`);\n        }\n        \n        // Check duration\n        if (typeof this.config.duration !== 'number' || this.config.duration < 0) {\n            errors.push('Duration must be a non-negative number');\n        }\n        \n        // Check maxMessages\n        if (typeof this.config.maxMessages !== 'number' || this.config.maxMessages < 1) {\n            errors.push('maxMessages must be a positive number');\n        }\n        \n        // Check types configuration\n        if (!this.config.types || typeof this.config.types !== 'object') {\n            errors.push('Message types configuration is missing or invalid');\n        }\n        \n        return {\n            valid: errors.length === 0,\n            errors,\n            warnings\n        };\n    }\n    \n    /**\n     * Handle different message types (convenience)\n     */\n    hasVisibleModal() {\n        // Compatibility method for tests\n        return this.activeMessages.size > 0;\n    }\n    \n    /**\n     * Get visible modals (compatibility)\n     */\n    getVisibleModals() {\n        // Compatibility method for tests\n        return Array.from(this.activeMessages);\n    }\n\n    /**\n     * Cleanup and destroy the message system\n     */\n    destroy() {\n        this.clear();\n        \n        if (this.container && this.container.parentNode) {\n            this.container.parentNode.removeChild(this.container);\n        }\n\n        const styles = document.getElementById('message-system-styles');\n        if (styles) {\n            styles.remove();\n        }\n        \n        const spinnerStyles = document.getElementById('spinner-animation');\n        if (spinnerStyles) {\n            spinnerStyles.remove();\n        }\n        \n        // Clear progress messages\n        if (this.progressMessages) {\n            this.progressMessages.clear();\n        }\n\n        console.log('üóëÔ∏è MessageSystem destroyed');\n    }\n}"],"names":["MessageSystem","config","userConfig","defaultConfig","target","source","result","key","customContainer","existingContainer","styles","content","type","options","messageId","typeConfig","message","oldestMessage","element","icon","closeButton","resolve","messageIds","hiddenCount","position","newConfig","existingStyles","elements","clearedCount","initialProgress","progressData","progress","progressBar","finalMessage","contentElement","style","modalType","title","messageTypes","el","cls","messagesByType","typeClass","errors","warnings","spinnerStyles"],"mappings":"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"}