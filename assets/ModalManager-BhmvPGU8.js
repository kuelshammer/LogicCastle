class r{constructor(e={}){this.config=this.mergeDefaultConfig(e),this.modals=new Map,this.activeModals=new Set,this.isInitialized=!1,this.init()}mergeDefaultConfig(e){const o={...e&&Object.keys(e).length>0?{help:{id:"helpModal",closeKey:"F1",closeOnEscape:!0,closeOnOutsideClick:!0},error:{id:"errorModal",closeKey:null,closeOnEscape:!0,closeOnOutsideClick:!1}}:{}};for(const[i,n]of Object.entries(e))o[i]?o[i]={...o[i],...n}:o[i]={closeOnEscape:!0,closeOnOutsideClick:!0,...n};return o}async init(){return this.isInitialized||(await new Promise(e=>setTimeout(e,0)),this.registerModals(),this.setupKeyboardHandling(),this.isInitialized=!0),Promise.resolve()}registerModals(){for(const[e,t]of Object.entries(this.config))this.registerModal(e,t)}registerModal(e,t){const s=document.getElementById(t.id);if(!s)return!1;const o={element:s,config:t,isActive:!1};return this.modals.set(e,o),this.setupModalEventListeners(e,o),!0}setupModalEventListeners(e,t){const{element:s,config:o}=t;s.addEventListener("click",l=>{if(l.target===s){const a=this.modals.get(e);a&&a.config.closeOnOutsideClick!==!1&&this.hide(e)}}),s.querySelectorAll("[data-modal-close]").forEach(l=>{l.addEventListener("click",()=>this.hide(e))}),s.querySelectorAll(".close").forEach(l=>{l.addEventListener("click",()=>this.hide(e))}),[`close${e.charAt(0).toUpperCase()+e.slice(1)}Btn`,`${e}CloseBtn`,"closeBtn"].forEach(l=>{const a=s.querySelector(`#${l}`);a&&a.addEventListener("click",()=>this.hide(e))})}setupKeyboardHandling(){this._keydownHandler&&document.removeEventListener("keydown",this._keydownHandler),this._keydownHandler=e=>{if(e.key==="Escape"){this.handleEscapeKey(e);return}this.handleModalShortcuts(e)},document.addEventListener("keydown",this._keydownHandler)}handleEscapeKey(e){const t=[...this.activeModals];let s=!1;for(const o of t){const i=this.modals.get(o);i&&i.config.closeOnEscape!==!1&&(this.hide(o),s=!0)}s&&(e.preventDefault(),e.stopPropagation())}handleModalShortcuts(e){for(const[t,s]of this.modals)if(s.config.closeKey&&e.key===s.config.closeKey){e.preventDefault(),e.stopPropagation(),this.toggle(t);return}}show(e,t={}){const s=this.modals.get(e);return s?(s.isActive||(t.content&&this.setModalContent(s,t.content),s.element.classList.add("active"),s.element.classList.remove("hidden"),s.isActive=!0,this.activeModals.add(e),this.updateModalZIndex(s),this.manageFocus(s,"show"),this.emitModalEvent("show",e,s)),!0):!1}hide(e){const t=this.modals.get(e);return t?(t.isActive&&(t.element.classList.remove("active"),t.element.classList.add("hidden"),t.isActive=!1,this.activeModals.delete(e),this.manageFocus(t,"hide"),this.emitModalEvent("hide",e,t)),!0):!1}toggle(e,t={}){const s=this.modals.get(e);return s?s.isActive?this.hide(e):this.show(e,t):!1}hideAll(){const e=[...this.activeModals];let t=0;return e.forEach(s=>{this.hide(s)&&t++}),t}isActive(e){const t=this.modals.get(e);return t?t.isActive:!1}getActiveModals(){return[...this.activeModals]}getTopmostModal(){if(this.activeModals.size===0)return null;const e=[...this.activeModals],t=e[e.length-1];return this.modals.get(t)}setModalContent(e,t){if(t.title){const s=e.element.querySelector(".modal-title, h1, h2");s&&(s.textContent=t.title)}if(t.body){const s=e.element.querySelector(".modal-body, .modal-content");s&&(typeof t.body=="string"?s.innerHTML=t.body:(s.innerHTML="",s.appendChild(t.body)))}}updateModalZIndex(e){const s=1e3+this.activeModals.size;e.element.style.zIndex=s}manageFocus(e,t){if(t==="show"){e.previousFocus=document.activeElement;const s=e.element.querySelector('button, input, select, textarea, [tabindex]:not([tabindex="-1"]), .close');s&&(s.classList.contains("close")&&!s.hasAttribute("tabindex")&&s.setAttribute("tabindex","0"),setTimeout(()=>s.focus(),100))}else t==="hide"&&e.previousFocus&&typeof e.previousFocus.focus=="function"&&e.previousFocus.focus()}getModalType(e){for(const[t,s]of this.modals)if(s===e)return t;return null}emitModalEvent(e,t,s){const o=new CustomEvent(`modal:${e}`,{detail:{modalType:t,element:s.element,config:s.config}});document.dispatchEvent(o)}showError(e,t,s={}){const o={title:e,body:`<p>${t}</p>`};return this.show("error",{content:o,...s})}showConfirmation(e,t,s,o){const i={title:e,body:`
                <p>${t}</p>
                <div class="modal-actions">
                    <button class="btn btn-primary" data-action="confirm">Best√§tigen</button>
                    <button class="btn btn-secondary" data-action="cancel">Abbrechen</button>
                </div>
            `},n=this.show("confirmation",{content:i});if(n){const d=this.modals.get("confirmation"),l=d.element.querySelector('[data-action="confirm"]'),a=d.element.querySelector('[data-action="cancel"]');l&&l.addEventListener("click",()=>{this.hide("confirmation"),s&&s()},{once:!0}),a&&a.addEventListener("click",()=>{this.hide("confirmation"),o&&o()},{once:!0})}return n}getDebugInfo(){const e={};for(const[t,s]of this.modals)e[t]={isActive:s.isActive,elementId:s.config.id,closeKey:s.config.closeKey,closeOnEscape:s.config.closeOnEscape,closeOnOutsideClick:s.config.closeOnOutsideClick};return{totalModals:this.modals.size,activeModals:[...this.activeModals],modalInfo:e,isInitialized:this.isInitialized}}showModal(e,t={}){return this.show(e,t)}hideModal(e){return this.hide(e)}toggleModal(e,t={}){return this.toggle(e,t)}isModalVisible(e){return this.isActive(e)}closeAllModals(){return this.hideAll()}getRegisteredModals(){return Array.from(this.modals.keys())}getVisibleModals(){return this.getActiveModals()}hasVisibleModal(){return this.activeModals.size>0}getModalConfig(e){const t=this.modals.get(e);return t?{...t.config}:null}hasModal(e){return this.modals.has(e)}unregisterModal(e){this.isActive(e)&&this.hide(e);const t=this.modals.delete(e);return t}updateModalConfig(e,t){const s=this.modals.get(e);if(s){const o={...t};return o.closeOnBackdrop!==void 0&&(o.closeOnOutsideClick=o.closeOnBackdrop,delete o.closeOnBackdrop),s.config={...s.config,...o},!0}return!1}setModalContent(e,t){const s=this.modals.get(e);if(s){if(typeof t=="string"){const o=s.element.querySelector(".modal-body, .modal-content");o&&(o.innerHTML=t)}else if(t&&typeof t=="object"){if(t.title){const o=s.element.querySelector(".modal-title, h1, h2");o&&(o.textContent=t.title)}if(t.body){const o=s.element.querySelector(".modal-body, .modal-content");o&&(typeof t.body=="string"?o.innerHTML=t.body:(o.innerHTML="",o.appendChild(t.body)))}}return!0}return!1}getModalContent(e){const t=this.modals.get(e);if(t){const s=t.element.querySelector(".modal-content, .modal-body");return s?s.innerHTML:""}return""}setModalTitle(e,t){const s=this.modals.get(e);if(s){const o=s.element.querySelector(".modal-title, h1, h2");if(o)return o.textContent=t,!0}return!1}removeMessage(e){return!1}validateConfiguration(){const e=[],t=[];for(const[s,o]of this.modals)if(o.element||e.push(`Modal ${s}: DOM element not found`),o.config.id||e.push(`Modal ${s}: Missing id in configuration`),o.config.closeKey){const i=Array.from(this.modals.entries()).filter(([n,d])=>n!==s&&d.config.closeKey===o.config.closeKey);i.length>0&&t.push(`Modal ${s}: Conflicting close key '${o.config.closeKey}' with ${i.map(([n])=>n).join(", ")}`)}return{valid:e.length===0,errors:e,warnings:t}}getStatistics(){const e=this.modals.size,t=this.activeModals.size,s=e-t,o={};for(const[i]of this.modals)o[i]=this.isActive(i)?"visible":"hidden";return{totalModals:e,visibleModals:t,hiddenModals:s,modalsByType:o,hasVisibleModals:t>0}}getDebugInfo(){const e={totalModals:this.modals.size,activeModals:[...this.activeModals],isInitialized:this.isInitialized},t={};for(const[s,o]of this.modals)t[s]={isActive:o.isActive,elementId:o.config.id,closeKey:o.config.closeKey,closeOnEscape:o.config.closeOnEscape,closeOnOutsideClick:o.config.closeOnOutsideClick,element:o.element?"found":"missing",zIndex:o.element?.style.zIndex||"auto"};return{...e,registeredModals:this.getRegisteredModals(),visibleModals:this.getVisibleModals(),modalInfo:t}}destroy(){this.hideAll(),this._keydownHandler&&(document.removeEventListener("keydown",this._keydownHandler),this._keydownHandler=null),this.modals.clear(),this.activeModals.clear(),this.isInitialized=!1}}export{r as ModalManager};
//# sourceMappingURL=ModalManager-BhmvPGU8.js.map
