import{_ as a,C as l}from"./game_engine-DD1aZRKp.js";class m{constructor(){this.board=null,this.initialized=!1,this.rows=6,this.cols=7,this.gameHistory=[],this.currentMoveIndex=-1,this.eventListeners=new Map,this.moveStartTime=null,this.totalMoves=0,this.averageMoveTime=0}async init(){try{await a(),this.board=new l,this.initialized=!0;const e=this.board.memory_usage(),t=84;if(e<=t){const i=((t-e)/t*100).toFixed(1)}else{const i=((e-t)/t*100).toFixed(1)}return this.emit("initialized",{memoryUsage:this.board.memory_usage()}),!0}catch(e){throw e}}makeMove(e){if(!this.initialized)throw new Error("Game not initialized");this.moveStartTime=performance.now();try{if(e<0||e>=this.cols)throw new Error(`Invalid column: ${e}. Must be 0-${this.cols-1}`);if(!this.isValidMove(e))throw new Error(`Column ${e} is full`);const t=this.board.get_current_player(),i=this.board.make_move(e),r=performance.now()-this.moveStartTime;this.totalMoves++,this.averageMoveTime=(this.averageMoveTime*(this.totalMoves-1)+r)/this.totalMoves;const n={col:e,player:t,moveNumber:this.board.get_move_count(),timestamp:Date.now(),executionTime:r};this.gameHistory.push(n),this.currentMoveIndex++;const o={col:e,player:t,board:this.getBoard(),winner:i.winner,isGameOver:i.is_game_over,moveNumber:this.board.get_move_count(),winningLine:i.winning_line,executionTime:r};if(this.emit("move",o),this.emit("moveMade",o),o.isGameOver){const s={winner:o.winner,winningLine:o.winningLine,totalMoves:this.totalMoves,averageMoveTime:this.averageMoveTime};this.emit("gameOver",s)}return o}catch(t){throw t}}isValidMove(e){if(!this.initialized||e<0||e>=this.cols)return!1;try{return this.board.is_valid_move(e)}catch{return!1}}getGameState(){return this.initialized?{board:this.board.get_board(),currentPlayer:this.board.get_current_player(),moveCount:this.board.get_move_count(),isGameOver:this.board.is_game_over(),winner:this.board.get_winner(),validMoves:this.getValidMoves(),memoryUsage:this.board.memory_usage(),performanceStats:{totalMoves:this.totalMoves,averageMoveTime:this.averageMoveTime}}:null}getBoard(){if(!this.initialized)return null;const e=this.board.get_board(),t=[];for(let i=0;i<this.rows;i++){t[i]=[];for(let r=0;r<this.cols;r++)t[i][r]=e[i*this.cols+r]}return t}getCell(e,t){if(!this.initialized||e<0||e>=this.rows||t<0||t>=this.cols)return 0;try{return this.board.get_cell(e,t)}catch{return 0}}getCurrentPlayer(){return this.initialized?this.board.get_current_player():1}getMoveCount(){return this.initialized?this.board.get_move_count():0}isGameOver(){return this.initialized?this.board.is_game_over():!1}getWinner(){return this.initialized?this.board.get_winner():null}getValidMoves(){if(!this.initialized)return[];const e=[];for(let t=0;t<this.cols;t++)this.isValidMove(t)&&e.push(t);return e}newGame(){if(!this.initialized)throw new Error("Game not initialized");try{this.board.reset(),this.gameHistory=[],this.currentMoveIndex=-1,this.totalMoves=0,this.averageMoveTime=0,this.emit("newGame",this.getGameState())}catch(e){throw e}}canUndo(){return this.initialized&&this.board.can_undo()}undoMove(){if(!this.initialized)throw new Error("Game not initialized");if(!this.canUndo())throw new Error("Cannot undo: no moves to undo");try{const e=this.getGameState();this.board.undo_move(),this.gameHistory.length>0&&(this.gameHistory.pop(),this.currentMoveIndex--);const t={previousState:e,currentState:this.getGameState()};return this.emit("undo",t),t}catch(e){throw e}}getAIBoard(){return this.initialized?this.board.get_ai_board():null}evaluatePosition(e){if(!this.initialized)return 0;try{return this.board.evaluate_position_for_player(e)}catch{return 0}}getThreateningMoves(e){if(!this.initialized)return[];try{return this.board.get_threatening_moves(e)}catch{return[]}}getWinningMoves(e){if(!this.initialized)return[];try{return this.board.get_winning_moves(e)}catch{return[]}}getBlockingMoves(e){if(!this.initialized)return[];try{return this.board.get_blocking_moves(e)}catch{return[]}}getAIMove(){if(!this.initialized)return null;try{return this.board.get_ai_move()}catch{return null}}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}off(e,t){if(this.eventListeners.has(e)){const i=this.eventListeners.get(e),r=i.indexOf(t);r>-1&&i.splice(r,1)}}emit(e,t){if(this.eventListeners.has(e)){const i=this.eventListeners.get(e);for(const r of i)try{r(t)}catch{}}}getPerformanceStats(){const e=this.initialized?this.board.memory_usage():0,t=84;let i="0%";return this.initialized&&(e<=t?i=`${((t-e)/t*100).toFixed(1)}% savings`:i=`${((e-t)/t*100).toFixed(1)}% overhead`),{totalMoves:this.totalMoves,averageMoveTime:this.averageMoveTime,memoryUsage:e,memoryEfficiency:i}}getHistory(){return[...this.gameHistory]}exportGame(){return{history:this.getHistory(),finalState:this.getGameState(),performance:this.getPerformanceStats(),timestamp:Date.now()}}debugBoard(){if(!this.initialized)return;const e=this.getBoard();for(let t=0;t<this.rows;t++){let i=`${t+1}: `;for(let r=0;r<this.cols;r++){const n=e[t][r];i+=(n===0?".":n===1?"Y":"R")+" "}}}destroy(){this.eventListeners.clear(),this.gameHistory=[],this.initialized=!1,this.board=null}}export{m as Connect4GameBitPacked};
//# sourceMappingURL=game-CEJv9Ek5.js.map
