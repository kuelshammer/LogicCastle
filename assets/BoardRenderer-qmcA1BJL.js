class a{constructor(e,t,o){this.gameBoard=e,this.topCoords=t,this.bottomCoords=o,this.rows=6,this.cols=7,this.cells=[],this.discs=[],this.initialized=!1}initializeBoard(){return this.gameBoard?(this.gameBoard.innerHTML="",this.cells=[],this.discs=[],this._applyBoardStyles(),this._createBoardCells(),this.cells.length>0,this.initialized=!0,!0):!1}_applyBoardStyles(){this.gameBoard.className="grid grid-cols-7 grid-rows-6 gap-2 p-6 rounded-2xl bg-gradient-to-br from-blue-600 via-blue-700 to-blue-800 shadow-2xl max-w-2xl mx-auto aspect-[7/6]",this.gameBoard.style.backdropFilter="blur(10px)",this.gameBoard.style.background="linear-gradient(135deg, rgba(59, 130, 246, 0.8), rgba(29, 78, 216, 0.9))",this.gameBoard.style.boxShadow="0 25px 50px -12px rgba(0, 0, 0, 0.25), inset 0 1px 0 rgba(255, 255, 255, 0.1)"}_createBoardCells(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.cols;t++){const{cell:o,disc:s}=this._createCell(e,t);this.cells.push(o),this.discs.push(s),this.gameBoard.appendChild(o)}}_createCell(e,t){const o=document.createElement("div");o.className="cell game-slot flex items-center justify-center relative cursor-pointer aspect-square rounded-full bg-blue-500 border-4 border-blue-800 hover:bg-blue-400 transition-all duration-200",o.dataset.row=e,o.dataset.col=t,o.dataset.index=e*this.cols+t,o.style.background="radial-gradient(circle, rgba(59, 130, 246, 0.9), rgba(29, 78, 216, 0.8))",o.style.boxShadow="inset 0 2px 8px rgba(0, 0, 0, 0.2), 0 4px 12px rgba(0, 0, 0, 0.15)";const s=document.createElement("div");return s.className="disc empty w-[85%] h-[85%] rounded-full transition-all duration-300 relative",s.style.background="radial-gradient(circle, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0.05))",s.style.border="1px solid rgba(255, 255, 255, 0.2)",s.style.backdropFilter="blur(8px)",s.style.boxShadow="inset 0 1px 2px rgba(255, 255, 255, 0.1)",o.appendChild(s),this.cells.push(o),this.discs.push(s),o}createCoordinateLabels(){this._ensureCoordinateContainers(),this._createTopCoordinates(),this._createBottomCoordinates()}_ensureCoordinateContainers(){this.topCoords||(this.topCoords=document.getElementById("topCoords"),!this.topCoords&&this.gameBoard?.parentElement&&(this.topCoords=this._createCoordinateContainer("topCoords",!0))),this.bottomCoords||(this.bottomCoords=document.getElementById("bottomCoords"),!this.bottomCoords&&this.gameBoard?.parentElement&&(this.bottomCoords=this._createCoordinateContainer("bottomCoords",!1)))}_createCoordinateContainer(e,t){const o=this.gameBoard.parentElement;if(!o)return null;const s=document.createElement("div");return s.id=e,s.className=`board-coords ${t?"top":"bottom"}`,t?o.insertBefore(s,this.gameBoard):o.appendChild(s),s}_createTopCoordinates(){if(this.topCoords){this._applyCoordinateGridStyles(this.topCoords),this.topCoords.innerHTML="";for(let e=1;e<=this.cols;e++){const t=this._createCoordinateLabel(e);this.topCoords.appendChild(t)}}}_createBottomCoordinates(){if(this.bottomCoords){this._applyCoordinateGridStyles(this.bottomCoords),this.bottomCoords.innerHTML="";for(let e=1;e<=this.cols;e++){const t=this._createCoordinateLabel(e);this.bottomCoords.appendChild(t)}}}_applyCoordinateGridStyles(e){Object.assign(e.style,{display:"grid",gridTemplateColumns:"repeat(7, 1fr)",gap:"8px",width:"100%",maxWidth:"min(80vw, calc(70vh * 7 / 6))",maxHeight:"min(70vh, calc(80vw * 6 / 7))",padding:"20px",margin:"0.25rem auto",boxSizing:"border-box"})}_createCoordinateLabel(e){const t=document.createElement("div");return t.className="coord text-center font-bold text-sm",t.dataset.col=e-1,Object.assign(t.style,{color:"#666",transition:"all 0.3s ease",padding:"0.25rem",cursor:"pointer"}),t.textContent=e,t}updateBoard(e){if(!(!this.initialized||!e)&&!(!e.initialized||typeof e.getCell!="function"))for(let t=0;t<this.rows;t++)for(let o=0;o<this.cols;o++){const s=e.getCell(t,o),r=this.getDiscAt(t,o);r&&this._updateDiscVisual(r,s)}}updateBoardVisual(e,t,o){const s=this.getCellAt(e,t);if(s){const r=s.querySelector(".disc");r&&(r.classList.remove("empty","preview"),r.classList.add(o===1?"yellow":"red"),o===1?Object.assign(r.style,{background:"#FFD700",border:"3px solid #FFA000",boxShadow:"0 2px 8px rgba(255, 215, 0, 0.6)"}):Object.assign(r.style,{background:"#F44336",border:"3px solid #D32F2F",boxShadow:"0 2px 8px rgba(244, 67, 54, 0.6)"}))}}_updateDiscVisual(e,t){t===0?(e.className="disc empty",e.style.background="transparent",e.style.border="none",e.style.boxShadow="none"):t===1?(e.className="disc yellow",Object.assign(e.style,{background:"#FFD700",border:"3px solid #FFA000",boxShadow:"0 2px 8px rgba(255, 215, 0, 0.6)"})):t===2&&(e.className="disc red",Object.assign(e.style,{background:"#F44336",border:"3px solid #D32F2F",boxShadow:"0 2px 8px rgba(244, 67, 54, 0.6)"}))}getCellAt(e,t){return this.gameBoard?.querySelector(`.game-slot[data-row="${e}"][data-col="${t}"]`)}getDiscAt(e,t){return this.getCellAt(e,t)?.querySelector(".disc")}clearBoard(){for(const e of this.discs)e.className="disc empty",e.style.background="transparent",e.style.border="none",e.style.boxShadow="none"}destroy(){this.cells=[],this.discs=[],this.initialized=!1,this.gameBoard&&(this.gameBoard.innerHTML="")}getDimensions(){return{rows:this.rows,cols:this.cols}}isInitialized(){return this.initialized}}export{a as BoardRenderer};
//# sourceMappingURL=BoardRenderer-qmcA1BJL.js.map
