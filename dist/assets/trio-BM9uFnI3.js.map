{"version":3,"file":"trio-BM9uFnI3.js","sources":["../../games/trio/js/trio-config.js","../../games/trio/js/TrioGameBitPacked.js","../../games/trio/js/TrioUIBitPacked.js","../../games/trio/index.html?html-proxy&index=1.js"],"sourcesContent":["export const TRIO_UI_CONFIG = {\n  selectors: {\n    board: '#game-board',\n    targetNumber: '#target-number',\n    solutionsFound: '#solutions-found',\n    difficultySelector: '#difficulty-selector',\n    newGameBtn: '#new-game-btn',\n  },\n  classes: {\n    cell: 'trio-cell',\n    selected: 'selected',\n    solution: 'solution',\n  },\n};\n\nexport function createTrioConfig(mode) {\n  return TRIO_UI_CONFIG;\n}\n","/**\n * TrioGameBitPacked - JavaScript Wrapper for WASM Trio Engine\n * \n * Follows Connect4's 3-layer architecture pattern:\n * - Layer 3: UI/Frontend -> TrioUI\n * - Layer 2: Game Logic -> TrioGameBitPacked (this file)\n * - Layer 1: WASM/Rust -> TrioGame + BitPackedBoard<7,7,4>\n * \n * Features:\n * - BitPackedBoard<7,7,4> for 49% memory efficiency\n * - Trio calculation: a√ób+c or a√ób-c = target\n * - 7√ó7 board with numbers 1-9\n * - No AI needed - pure puzzle game\n * - Difficulty levels: kinderfreundlich, vollspektrum, strategisch, analytisch\n */\n\nimport init, { TrioGame, difficulty_to_number, difficulty_to_string } from '../../../game_engine/pkg/game_engine.js';\n\nexport class TrioGameBitPacked {\n    constructor(difficulty = 'kinderfreundlich') {\n        this.engine = null;\n        this.initialized = false;\n        \n        // Game state\n        this.difficulty = difficulty;\n        this.difficultyNumber = this.mapDifficultyToNumber(difficulty);\n        this.currentTarget = 0;\n        this.selectedPositions = [];\n        this.solutionHistory = [];\n        this.gameActive = false;\n        \n        // Statistics\n        this.solutionsFound = 0;\n        this.totalMoves = 0;\n        \n        // Event callbacks\n        this.onGameStateChange = null;\n        this.onSolutionFound = null;\n        this.onBoardGenerated = null;\n        this.onError = null;\n    }\n    \n    /**\n     * Initialize the WASM Trio engine\n     */\n    async init() {\n        try {\n            console.log('üöÄ Initializing TrioGame BitPacked Engine...');\n            \n            // Initialize WASM module\n            await init();\n            \n            // Create TrioGame instance\n            this.engine = new TrioGame(this.difficultyNumber);\n            this.currentTarget = this.engine.get_target_number();\n            this.initialized = true;\n            this.gameActive = true;\n            \n            console.log('‚úÖ TrioGame BitPacked initialized successfully');\n            console.log(`üìä Memory usage: ${this.engine.memory_usage()} bytes`);\n            console.log(`üéØ Memory efficiency: ${this.engine.memory_efficiency().toFixed(1)}% savings`);\n            console.log(`üéØ Target number: ${this.currentTarget}`);\n            console.log(`üéÆ Difficulty: ${this.difficulty} (${this.difficultyNumber})`);\n            \n            // Notify listeners\n            this.triggerCallback('onBoardGenerated', {\n                target: this.currentTarget,\n                difficulty: this.difficulty,\n                board: this.getBoard()\n            });\n            \n            return true;\n        } catch (error) {\n            console.error('‚ùå Failed to initialize TrioGame:', error);\n            this.triggerCallback('onError', { error: error.message });\n            return false;\n        }\n    }\n    \n    /**\n     * Get number at specific board position\n     */\n    getNumber(row, col) {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return 0;\n        }\n        \n        if (row < 0 || row >= 7 || col < 0 || col >= 7) {\n            console.warn(`‚ö†Ô∏è Invalid position: (${row}, ${col})`);\n            return 0;\n        }\n        \n        return this.engine.get_number(row, col);\n    }\n    \n    /**\n     * Get entire board as 7√ó7 array\n     */\n    getBoard() {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return Array(7).fill().map(() => Array(7).fill(0));\n        }\n        \n        const board = [];\n        for (let row = 0; row < 7; row++) {\n            board[row] = [];\n            for (let col = 0; col < 7; col++) {\n                board[row][col] = this.engine.get_number(row, col);\n            }\n        }\n        return board;\n    }\n    \n    /**\n     * Get board as flat array (for UI convenience)\n     */\n    getBoardFlat() {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return Array(49).fill(0);\n        }\n        \n        return this.engine.get_board_array();\n    }\n    \n    /**\n     * Get current target number\n     */\n    getTargetNumber() {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return 0;\n        }\n        \n        return this.currentTarget;\n    }\n    \n    /**\n     * Validate a trio combination\n     * @param {Array} positions - Array of {row, col} objects\n     * @returns {Object} - {valid: boolean, result: number, calculation: string}\n     */\n    validateTrio(positions) {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return { valid: false, result: -1, calculation: '' };\n        }\n        \n        if (!positions || positions.length !== 3) {\n            console.warn('‚ö†Ô∏è Invalid trio: need exactly 3 positions');\n            return { valid: false, result: -1, calculation: '' };\n        }\n        \n        const [pos1, pos2, pos3] = positions;\n        \n        // Validate positions\n        for (let i = 0; i < 3; i++) {\n            const pos = positions[i];\n            if (!pos || pos.row < 0 || pos.row >= 7 || pos.col < 0 || pos.col >= 7) {\n                console.warn(`‚ö†Ô∏è Invalid position ${i}: (${pos?.row}, ${pos?.col})`);\n                return { valid: false, result: -1, calculation: '' };\n            }\n        }\n        \n        // Check for duplicate positions\n        for (let i = 0; i < 3; i++) {\n            for (let j = i + 1; j < 3; j++) {\n                if (positions[i].row === positions[j].row && positions[i].col === positions[j].col) {\n                    console.warn(`‚ö†Ô∏è Duplicate positions: ${i} and ${j}`);\n                    return { valid: false, result: -1, calculation: '' };\n                }\n            }\n        }\n        \n        // Validate with WASM engine\n        const result = this.engine.validate_trio(\n            pos1.row, pos1.col,\n            pos2.row, pos2.col,\n            pos3.row, pos3.col\n        );\n        \n        const isValid = result !== -1;\n        \n        // Build calculation string for display\n        let calculation = '';\n        if (isValid) {\n            const a = this.engine.get_number(pos1.row, pos1.col);\n            const b = this.engine.get_number(pos2.row, pos2.col);\n            const c = this.engine.get_number(pos3.row, pos3.col);\n            \n            // Try both operations to see which one worked\n            const addResult = a * b + c;\n            const subResult = a * b - c;\n            \n            if (addResult === this.currentTarget) {\n                calculation = `${a} √ó ${b} + ${c} = ${addResult}`;\n            } else if (subResult === this.currentTarget) {\n                calculation = `${a} √ó ${b} - ${c} = ${subResult}`;\n            } else {\n                calculation = `${a} √ó ${b} ¬± ${c} = ${result}`;\n            }\n        }\n        \n        return {\n            valid: isValid,\n            result: result,\n            calculation: calculation\n        };\n    }\n    \n    /**\n     * Submit a trio solution\n     */\n    submitTrio(positions) {\n        const validation = this.validateTrio(positions);\n        \n        if (validation.valid) {\n            // Record solution\n            this.solutionHistory.push({\n                positions: positions.map(p => ({...p})),\n                result: validation.result,\n                calculation: validation.calculation,\n                timestamp: Date.now(),\n                moveNumber: this.totalMoves + 1\n            });\n            \n            this.solutionsFound++;\n            this.totalMoves++;\n            \n            console.log(`‚úÖ Solution found: ${validation.calculation}`);\n            \n            // Notify listeners\n            this.triggerCallback('onSolutionFound', {\n                validation: validation,\n                solutionsFound: this.solutionsFound,\n                totalMoves: this.totalMoves\n            });\n            \n            this.triggerCallback('onGameStateChange', {\n                type: 'solution_found',\n                data: validation\n            });\n            \n            return true;\n        } else {\n            console.log(`‚ùå Invalid trio attempt`);\n            this.totalMoves++;\n            \n            this.triggerCallback('onGameStateChange', {\n                type: 'invalid_attempt',\n                data: validation\n            });\n            \n            return false;\n        }\n    }\n    \n    /**\n     * Generate new board with specified difficulty\n     */\n    generateNewBoard(difficulty) {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return false;\n        }\n        \n        try {\n            this.difficulty = difficulty || this.difficulty;\n            this.difficultyNumber = this.mapDifficultyToNumber(this.difficulty);\n            \n            // Generate new board\n            this.currentTarget = this.engine.generate_new_board(this.difficultyNumber);\n            \n            // Reset game state\n            this.selectedPositions = [];\n            this.solutionHistory = [];\n            this.solutionsFound = 0;\n            this.totalMoves = 0;\n            this.gameActive = true;\n            \n            console.log(`üé≤ New board generated: Target ${this.currentTarget}, Difficulty ${this.difficulty}`);\n            \n            // Notify listeners\n            this.triggerCallback('onBoardGenerated', {\n                target: this.currentTarget,\n                difficulty: this.difficulty,\n                board: this.getBoard()\n            });\n            \n            this.triggerCallback('onGameStateChange', {\n                type: 'new_board',\n                data: {\n                    target: this.currentTarget,\n                    difficulty: this.difficulty\n                }\n            });\n            \n            return true;\n        } catch (error) {\n            console.error('‚ùå Failed to generate new board:', error);\n            this.triggerCallback('onError', { error: error.message });\n            return false;\n        }\n    }\n    \n    /**\n     * Find all possible solutions on current board\n     */\n    findAllSolutions() {\n        if (!this.initialized) {\n            console.warn('‚ö†Ô∏è TrioGame not initialized');\n            return [];\n        }\n        \n        try {\n            console.log('üîç Finding all solutions...');\n            const solutionArray = this.engine.find_all_solutions();\n            \n            // Convert flat array to solution objects\n            const solutions = [];\n            for (let i = 0; i < solutionArray.length; i += 7) {\n                const solution = {\n                    positions: [\n                        { row: solutionArray[i], col: solutionArray[i + 1] },\n                        { row: solutionArray[i + 2], col: solutionArray[i + 3] },\n                        { row: solutionArray[i + 4], col: solutionArray[i + 5] }\n                    ],\n                    result: solutionArray[i + 6]\n                };\n                \n                // Add calculation string\n                const validation = this.validateTrio(solution.positions);\n                solution.calculation = validation.calculation;\n                \n                solutions.push(solution);\n            }\n            \n            console.log(`‚úÖ Found ${solutions.length} solutions`);\n            return solutions;\n        } catch (error) {\n            console.error('‚ùå Failed to find solutions:', error);\n            this.triggerCallback('onError', { error: error.message });\n            return [];\n        }\n    }\n    \n    /**\n     * Get game statistics\n     */\n    getGameStats() {\n        return {\n            difficulty: this.difficulty,\n            difficultyNumber: this.difficultyNumber,\n            target: this.currentTarget,\n            solutionsFound: this.solutionsFound,\n            totalMoves: this.totalMoves,\n            gameActive: this.gameActive,\n            memoryUsage: this.initialized ? this.engine.memory_usage() : 0,\n            memoryEfficiency: this.initialized ? this.engine.memory_efficiency() : 0\n        };\n    }\n    \n    /**\n     * Reset game state\n     */\n    resetGame() {\n        this.selectedPositions = [];\n        this.solutionHistory = [];\n        this.solutionsFound = 0;\n        this.totalMoves = 0;\n        this.gameActive = true;\n        \n        this.triggerCallback('onGameStateChange', {\n            type: 'reset',\n            data: this.getGameStats()\n        });\n    }\n    \n    /**\n     * Map difficulty string to number\n     */\n    mapDifficultyToNumber(difficulty) {\n        switch (difficulty.toLowerCase()) {\n            case 'kinderfreundlich':\n                return 1;\n            case 'vollspektrum':\n                return 2;\n            case 'strategisch':\n                return 3;\n            case 'analytisch':\n                return 4;\n            default:\n                console.warn(`‚ö†Ô∏è Unknown difficulty: ${difficulty}, defaulting to vollspektrum`);\n                return 2;\n        }\n    }\n    \n    /**\n     * Map difficulty number to string\n     */\n    mapDifficultyToString(difficultyNumber) {\n        switch (difficultyNumber) {\n            case 1:\n                return 'kinderfreundlich';\n            case 2:\n                return 'vollspektrum';\n            case 3:\n                return 'strategisch';\n            case 4:\n                return 'analytisch';\n            default:\n                console.warn(`‚ö†Ô∏è Unknown difficulty number: ${difficultyNumber}, defaulting to vollspektrum`);\n                return 'vollspektrum';\n        }\n    }\n    \n    /**\n     * Trigger event callback if defined\n     */\n    triggerCallback(callbackName, data) {\n        if (this[callbackName] && typeof this[callbackName] === 'function') {\n            try {\n                this[callbackName](data);\n            } catch (error) {\n                console.error(`‚ùå Error in ${callbackName} callback:`, error);\n            }\n        }\n    }\n    \n    /**\n     * Set event callback\n     */\n    setCallback(callbackName, callback) {\n        if (typeof callback === 'function') {\n            this[callbackName] = callback;\n        } else {\n            console.warn(`‚ö†Ô∏è Invalid callback for ${callbackName}`);\n        }\n    }\n    \n    /**\n     * Get current difficulty\n     */\n    getCurrentDifficulty() {\n        return this.difficulty;\n    }\n    \n    /**\n     * Check if game is initialized\n     */\n    isInitialized() {\n        return this.initialized;\n    }\n    \n    /**\n     * Check if game is active\n     */\n    isGameActive() {\n        return this.gameActive;\n    }\n    \n    /**\n     * Get solution history\n     */\n    getSolutionHistory() {\n        return [...this.solutionHistory];\n    }\n    \n    /**\n     * Get memory usage information\n     */\n    getMemoryInfo() {\n        if (!this.initialized) {\n            return { usage: 0, efficiency: 0 };\n        }\n        \n        return {\n            usage: this.engine.memory_usage(),\n            efficiency: this.engine.memory_efficiency()\n        };\n    }\n}","/**\n * TrioUIBitPacked - Modern Trio UI using 3-Layer Architecture\n * \n * Following Connect4's successful pattern:\n * - Layer 3: UI/Frontend -> TrioUIBitPacked (this file)\n * - Layer 2: Game Logic -> TrioGameBitPacked  \n * - Layer 1: WASM/Rust -> TrioGame + BitPackedBoard<7,7,4>\n * \n * Features:\n * - Modern UI Module System integration\n * - BitPacked game logic for 49% memory efficiency\n * - Trio puzzle game: find a√ób+c or a√ób-c = target\n * - No AI needed - pure puzzle game\n * - Responsive glassmorphism design\n * - Keyboard shortcuts and accessibility\n */\n\nimport { BaseGameUI } from '../../../assets/js/ui-modules/index.js';\nimport { TRIO_UI_CONFIG } from './trio-config.js';\nimport { TrioGameBitPacked } from './TrioGameBitPacked.js';\n\nexport class TrioUIBitPacked extends BaseGameUI {\n    constructor() {\n        // Initialize with BitPacked game logic\n        const game = new TrioGameBitPacked();\n        super(game, TRIO_UI_CONFIG);\n        \n        // Trio-specific UI state\n        this.selectedCells = [];\n        this.currentTarget = 0;\n        this.gameActive = false;\n        this.solutionsFound = 0;\n        this.totalMoves = 0;\n        this.currentDifficulty = 'vollspektrum';\n        \n        // Animation and visual feedback\n        this.animationEnabled = true;\n        this.lastSelectedCell = null;\n        this.highlightedCells = new Set();\n        \n        // Game mode (single player only for Trio)\n        this.gameMode = 'puzzle';\n        \n        console.log('üéÆ TrioUIBitPacked initialized with 3-layer architecture');\n    }\n    \n    /**\n     * Initialize the UI and game\n     */\n    async init() {\n        try {\n            console.log('üöÄ Initializing TrioUIBitPacked...');\n            \n            // Initialize the game logic first\n            await this.game.init();\n            \n            // Initialize the base UI system\n            await super.init();\n            \n            // Setup Trio-specific UI\n            this.setupTrioUI();\n            this.setupGameCallbacks();\n            \n            // Initial render\n            this.updateGameDisplay();\n            \n            console.log('‚úÖ TrioUIBitPacked initialized successfully');\n            return true;\n        } catch (error) {\n            console.error('‚ùå Failed to initialize TrioUIBitPacked:', error);\n            this.showMessage('Fehler beim Initialisieren des Spiels', 'error');\n            return false;\n        }\n    }\n    \n    /**\n     * Setup Trio-specific UI elements\n     */\n    setupTrioUI() {\n        this.createNumberGrid();\n        this.setupCellClickHandlers();\n        this.setupDifficultySelector();\n        this.updateTargetDisplay();\n        this.updateGameStats();\n    }\n    \n    /**\n     * Create the 7x7 number grid\n     */\n    createNumberGrid() {\n        const gridElement = this.elements.numberGrid;\n        if (!gridElement) {\n            console.error('‚ùå numberGrid element not found');\n            return;\n        }\n        \n        // Clear existing grid\n        gridElement.innerHTML = '';\n        \n        // Add CSS classes for styling\n        gridElement.className = 'trio-number-grid';\n        \n        // Create 7x7 grid\n        const board = this.game.getBoard();\n        for (let row = 0; row < 7; row++) {\n            for (let col = 0; col < 7; col++) {\n                const cell = this.createNumberCell(row, col, board[row][col]);\n                gridElement.appendChild(cell);\n            }\n        }\n        \n        console.log('‚úÖ 7x7 number grid created');\n    }\n    \n    /**\n     * Create individual number cell\n     */\n    createNumberCell(row, col, number) {\n        const cell = document.createElement('div');\n        cell.className = 'trio-cell';\n        cell.dataset.row = row;\n        cell.dataset.col = col;\n        cell.textContent = number;\n        \n        // Add visual styling\n        cell.style.cssText = `\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            border: 2px solid rgba(255, 255, 255, 0.2);\n            border-radius: 8px;\n            background: rgba(255, 255, 255, 0.1);\n            color: white;\n            font-size: 18px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            backdrop-filter: blur(10px);\n        `;\n        \n        // Add hover effects\n        cell.addEventListener('mouseenter', () => {\n            if (!this.isSelected(row, col)) {\n                cell.style.background = 'rgba(255, 255, 255, 0.2)';\n                cell.style.transform = 'scale(1.05)';\n            }\n        });\n        \n        cell.addEventListener('mouseleave', () => {\n            if (!this.isSelected(row, col)) {\n                cell.style.background = 'rgba(255, 255, 255, 0.1)';\n                cell.style.transform = 'scale(1)';\n            }\n        });\n        \n        return cell;\n    }\n    \n    /**\n     * Setup click handlers for grid cells\n     */\n    setupCellClickHandlers() {\n        const gridElement = this.elements.numberGrid;\n        if (!gridElement) return;\n        \n        gridElement.addEventListener('click', (event) => {\n            const cell = event.target.closest('.trio-cell');\n            if (!cell) return;\n            \n            const row = parseInt(cell.dataset.row);\n            const col = parseInt(cell.dataset.col);\n            \n            this.handleCellClick(row, col);\n        });\n    }\n    \n    /**\n     * Handle cell click\n     */\n    handleCellClick(row, col) {\n        if (!this.gameActive) {\n            this.showMessage('Spiel nicht aktiv', 'info');\n            return;\n        }\n        \n        // Check if cell is already selected\n        const selectedIndex = this.selectedCells.findIndex(pos => pos.row === row && pos.col === col);\n        \n        if (selectedIndex >= 0) {\n            // Deselect cell\n            this.selectedCells.splice(selectedIndex, 1);\n            this.updateCellSelection(row, col, false);\n            console.log(`üîÑ Cell (${row}, ${col}) deselected`);\n        } else {\n            // Select cell (max 3 selections)\n            if (this.selectedCells.length >= 3) {\n                this.showMessage('Maximal 3 Zellen ausw√§hlen', 'warning');\n                return;\n            }\n            \n            this.selectedCells.push({ row, col });\n            this.updateCellSelection(row, col, true);\n            console.log(`‚úÖ Cell (${row}, ${col}) selected`);\n        }\n        \n        // Update UI\n        this.updateSelectedDisplay();\n        this.updateSubmitButton();\n        \n        // Auto-submit if 3 cells selected\n        if (this.selectedCells.length === 3) {\n            setTimeout(() => this.submitSolution(), 300);\n        }\n    }\n    \n    /**\n     * Update cell selection visual feedback\n     */\n    updateCellSelection(row, col, selected) {\n        const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n        if (!cell) return;\n        \n        if (selected) {\n            cell.style.background = 'rgba(34, 197, 94, 0.6)';\n            cell.style.borderColor = 'rgba(34, 197, 94, 1)';\n            cell.style.transform = 'scale(1.1)';\n            cell.style.boxShadow = '0 4px 20px rgba(34, 197, 94, 0.4)';\n        } else {\n            cell.style.background = 'rgba(255, 255, 255, 0.1)';\n            cell.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n            cell.style.transform = 'scale(1)';\n            cell.style.boxShadow = 'none';\n        }\n    }\n    \n    /**\n     * Check if cell is selected\n     */\n    isSelected(row, col) {\n        return this.selectedCells.some(pos => pos.row === row && pos.col === col);\n    }\n    \n    /**\n     * Update selected display\n     */\n    updateSelectedDisplay() {\n        const selectedDisplay = this.elements.selectedDisplay;\n        if (!selectedDisplay) return;\n        \n        if (this.selectedCells.length === 0) {\n            selectedDisplay.innerHTML = '<span class=\"text-gray-400\">Keine Auswahl</span>';\n            return;\n        }\n        \n        const numbers = this.selectedCells.map(pos => this.game.getNumber(pos.row, pos.col));\n        const positions = this.selectedCells.map(pos => `(${pos.row + 1}, ${pos.col + 1})`);\n        \n        selectedDisplay.innerHTML = `\n            <div class=\"flex items-center space-x-2\">\n                <span class=\"text-white font-semibold\">${numbers.join(' √ó ')}</span>\n                <span class=\"text-gray-400\">${positions.join(', ')}</span>\n            </div>\n        `;\n        \n        // Update individual number displays\n        for (let i = 0; i < 3; i++) {\n            const element = this.elements[`selected${i + 1}`];\n            if (element) {\n                element.textContent = i < numbers.length ? numbers[i] : '?';\n            }\n        }\n        \n        // Update calculated result if 3 selected\n        if (this.selectedCells.length === 3) {\n            this.updateCalculatedResult();\n        }\n    }\n    \n    /**\n     * Update calculated result display\n     */\n    updateCalculatedResult() {\n        const resultElement = this.elements.calculatedResult;\n        if (!resultElement) return;\n        \n        if (this.selectedCells.length !== 3) {\n            resultElement.textContent = '?';\n            return;\n        }\n        \n        const numbers = this.selectedCells.map(pos => this.game.getNumber(pos.row, pos.col));\n        const [a, b, c] = numbers;\n        \n        const addResult = a * b + c;\n        const subResult = a * b - c;\n        const target = this.game.getTargetNumber();\n        \n        if (addResult === target) {\n            resultElement.innerHTML = `<span class=\"text-green-400 font-bold\">${addResult}</span>`;\n        } else if (subResult === target) {\n            resultElement.innerHTML = `<span class=\"text-green-400 font-bold\">${subResult}</span>`;\n        } else {\n            resultElement.innerHTML = `<span class=\"text-red-400\">${addResult}/${subResult}</span>`;\n        }\n    }\n    \n    /**\n     * Update submit button state\n     */\n    updateSubmitButton() {\n        const submitBtn = this.elements.submitSolutionBtn;\n        if (!submitBtn) return;\n        \n        const canSubmit = this.selectedCells.length === 3;\n        submitBtn.disabled = !canSubmit;\n        submitBtn.classList.toggle('opacity-50', !canSubmit);\n    }\n    \n    /**\n     * Submit solution\n     */\n    submitSolution() {\n        if (this.selectedCells.length !== 3) {\n            this.showMessage('Bitte w√§hlen Sie 3 Zellen aus', 'warning');\n            return;\n        }\n        \n        const success = this.game.submitTrio(this.selectedCells);\n        \n        if (success) {\n            this.showMessage('L√∂sung gefunden! üéâ', 'success');\n            this.highlightCorrectSolution();\n            this.updateGameStats();\n            \n            // Clear selection after success\n            setTimeout(() => {\n                this.clearSelection();\n            }, 2000);\n        } else {\n            this.showMessage('Nicht korrekt. Versuchen Sie es erneut.', 'error');\n            this.animateIncorrectSolution();\n        }\n    }\n    \n    /**\n     * Highlight correct solution\n     */\n    highlightCorrectSolution() {\n        this.selectedCells.forEach(pos => {\n            const cell = document.querySelector(`[data-row=\"${pos.row}\"][data-col=\"${pos.col}\"]`);\n            if (cell) {\n                cell.style.background = 'rgba(34, 197, 94, 0.8)';\n                cell.style.animation = 'pulse 0.5s ease-in-out 3';\n            }\n        });\n    }\n    \n    /**\n     * Animate incorrect solution\n     */\n    animateIncorrectSolution() {\n        this.selectedCells.forEach(pos => {\n            const cell = document.querySelector(`[data-row=\"${pos.row}\"][data-col=\"${pos.col}\"]`);\n            if (cell) {\n                cell.style.background = 'rgba(239, 68, 68, 0.6)';\n                cell.style.animation = 'shake 0.5s ease-in-out';\n            }\n        });\n        \n        // Reset colors after animation\n        setTimeout(() => {\n            this.selectedCells.forEach(pos => {\n                this.updateCellSelection(pos.row, pos.col, true);\n            });\n        }, 500);\n    }\n    \n    /**\n     * Clear selection\n     */\n    clearSelection() {\n        this.selectedCells.forEach(pos => {\n            this.updateCellSelection(pos.row, pos.col, false);\n        });\n        \n        this.selectedCells = [];\n        this.updateSelectedDisplay();\n        this.updateSubmitButton();\n    }\n    \n    /**\n     * Setup game callbacks\n     */\n    setupGameCallbacks() {\n        this.game.setCallback('onGameStateChange', (data) => {\n            this.handleGameStateChange(data);\n        });\n        \n        this.game.setCallback('onSolutionFound', (data) => {\n            this.handleSolutionFound(data);\n        });\n        \n        this.game.setCallback('onBoardGenerated', (data) => {\n            this.handleBoardGenerated(data);\n        });\n        \n        this.game.setCallback('onError', (data) => {\n            this.handleGameError(data);\n        });\n    }\n    \n    /**\n     * Handle game state changes\n     */\n    handleGameStateChange(data) {\n        console.log('üéÆ Game state changed:', data.type);\n        \n        switch (data.type) {\n            case 'new_board':\n                this.currentTarget = data.data.target;\n                this.currentDifficulty = data.data.difficulty;\n                this.clearSelection();\n                this.createNumberGrid();\n                this.updateTargetDisplay();\n                this.updateGameStats();\n                break;\n                \n            case 'solution_found':\n                this.solutionsFound = this.game.getGameStats().solutionsFound;\n                this.totalMoves = this.game.getGameStats().totalMoves;\n                this.updateGameStats();\n                break;\n                \n            case 'reset':\n                this.clearSelection();\n                this.updateGameStats();\n                break;\n        }\n    }\n    \n    /**\n     * Handle solution found\n     */\n    handleSolutionFound(data) {\n        console.log('‚úÖ Solution found:', data.validation.calculation);\n        \n        // Update solution history\n        this.updateSolutionHistory();\n        \n        // Update statistics\n        this.updateGameStats();\n    }\n    \n    /**\n     * Handle board generated\n     */\n    handleBoardGenerated(data) {\n        console.log('üé≤ Board generated:', data);\n        \n        this.currentTarget = data.target;\n        this.currentDifficulty = data.difficulty;\n        this.gameActive = true;\n        \n        this.createNumberGrid();\n        this.updateTargetDisplay();\n        this.updateGameStats();\n        \n        this.showMessage(`Neues Spiel: Ziel ${data.target}`, 'info');\n    }\n    \n    /**\n     * Handle game error\n     */\n    handleGameError(data) {\n        console.error('‚ùå Game error:', data.error);\n        this.showMessage(`Fehler: ${data.error}`, 'error');\n    }\n    \n    /**\n     * Update target display\n     */\n    updateTargetDisplay() {\n        const targetElement = this.elements.targetNumber;\n        if (targetElement) {\n            targetElement.textContent = this.game.getTargetNumber();\n        }\n        \n        const targetDisplay = this.elements.targetDisplay;\n        if (targetDisplay) {\n            targetDisplay.innerHTML = `\n                <div class=\"text-center\">\n                    <div class=\"text-4xl font-bold text-white\">${this.game.getTargetNumber()}</div>\n                    <div class=\"text-sm text-gray-300\">Ziel</div>\n                </div>\n            `;\n        }\n    }\n    \n    /**\n     * Update game statistics\n     */\n    updateGameStats() {\n        const stats = this.game.getGameStats();\n        \n        // Update counters\n        if (this.elements.realizedCount) {\n            this.elements.realizedCount.textContent = stats.solutionsFound;\n        }\n        \n        if (this.elements.moveCounter) {\n            this.elements.moveCounter.textContent = stats.totalMoves;\n        }\n        \n        // Update game status\n        this.updateGameStatus();\n    }\n    \n    /**\n     * Update game status\n     */\n    updateGameStatus() {\n        const statusElement = this.elements.gameStatus;\n        if (!statusElement) return;\n        \n        const stats = this.game.getGameStats();\n        \n        if (stats.solutionsFound > 0) {\n            statusElement.textContent = `${stats.solutionsFound} L√∂sung${stats.solutionsFound === 1 ? '' : 'en'} gefunden`;\n            statusElement.className = 'text-green-400 font-semibold';\n        } else if (stats.totalMoves > 0) {\n            statusElement.textContent = `${stats.totalMoves} Versuch${stats.totalMoves === 1 ? '' : 'e'}`;\n            statusElement.className = 'text-yellow-400 font-semibold';\n        } else {\n            statusElement.textContent = 'Bereit zum Spielen';\n            statusElement.className = 'text-white font-semibold';\n        }\n    }\n    \n    /**\n     * Update solution history\n     */\n    updateSolutionHistory() {\n        const historyElement = this.elements.solutionHistory;\n        if (!historyElement) return;\n        \n        const history = this.game.getSolutionHistory();\n        \n        historyElement.innerHTML = '';\n        \n        history.forEach((solution, index) => {\n            const item = document.createElement('div');\n            item.className = 'solution-history-item p-2 border-b border-gray-600';\n            item.innerHTML = `\n                <div class=\"text-sm text-gray-300\">#${index + 1}</div>\n                <div class=\"text-white font-mono\">${solution.calculation}</div>\n                <div class=\"text-xs text-gray-400\">Zug ${solution.moveNumber}</div>\n            `;\n            historyElement.appendChild(item);\n        });\n    }\n    \n    /**\n     * Setup difficulty selector\n     */\n    setupDifficultySelector() {\n        const selector = this.elements.gameMode;\n        if (!selector) return;\n        \n        selector.innerHTML = `\n            <option value=\"kinderfreundlich\">Kinderfreundlich</option>\n            <option value=\"vollspektrum\" selected>Vollspektrum</option>\n            <option value=\"strategisch\">Strategisch</option>\n            <option value=\"analytisch\">Analytisch</option>\n        `;\n        \n        selector.addEventListener('change', (e) => {\n            this.changeDifficulty(e.target.value);\n        });\n    }\n    \n    /**\n     * Change difficulty\n     */\n    changeDifficulty(difficulty) {\n        this.currentDifficulty = difficulty;\n        this.game.generateNewBoard(difficulty);\n        this.showMessage(`Schwierigkeit: ${difficulty}`, 'info');\n    }\n    \n    /**\n     * Start new game\n     */\n    newGame() {\n        this.game.generateNewBoard(this.currentDifficulty);\n        this.showMessage('Neues Spiel gestartet', 'success');\n    }\n    \n    /**\n     * Show all solutions\n     */\n    showSolution() {\n        const solutions = this.game.findAllSolutions();\n        \n        if (solutions.length === 0) {\n            this.showMessage('Keine L√∂sungen gefunden', 'warning');\n            return;\n        }\n        \n        this.showMessage(`${solutions.length} L√∂sung${solutions.length === 1 ? '' : 'en'} gefunden`, 'info');\n        \n        // Highlight first solution\n        const firstSolution = solutions[0];\n        this.selectedCells = firstSolution.positions;\n        this.updateSelectedDisplay();\n        \n        firstSolution.positions.forEach(pos => {\n            this.updateCellSelection(pos.row, pos.col, true);\n        });\n    }\n    \n    /**\n     * Update game display\n     */\n    updateGameDisplay() {\n        this.updateTargetDisplay();\n        this.updateGameStats();\n        this.updateSelectedDisplay();\n        this.updateSubmitButton();\n    }\n    \n    /**\n     * Show message to user\n     */\n    showMessage(text, type = 'info') {\n        // Create toast notification\n        const toast = document.createElement('div');\n        toast.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-xl shadow-lg text-white font-semibold transition-all duration-300 transform translate-x-full`;\n        \n        // Set color based on type\n        switch(type) {\n            case 'success':\n                toast.classList.add('bg-green-500');\n                break;\n            case 'error':\n                toast.classList.add('bg-red-500');\n                break;\n            case 'warning':\n                toast.classList.add('bg-yellow-500');\n                break;\n            default:\n                toast.classList.add('bg-blue-500');\n        }\n        \n        toast.textContent = text;\n        document.body.appendChild(toast);\n        \n        // Animate in\n        setTimeout(() => {\n            toast.classList.remove('translate-x-full');\n        }, 100);\n        \n        // Animate out and remove\n        setTimeout(() => {\n            toast.classList.add('translate-x-full');\n            setTimeout(() => {\n                if (document.body.contains(toast)) {\n                    document.body.removeChild(toast);\n                }\n            }, 300);\n        }, 3000);\n    }\n    \n    /**\n     * Handle keyboard shortcuts\n     */\n    handleKeyboardShortcut(action) {\n        switch(action) {\n            case 'newGame':\n                this.newGame();\n                break;\n            case 'clearSelection':\n                this.clearSelection();\n                break;\n            case 'submitSolution':\n                this.submitSolution();\n                break;\n            case 'showSolution':\n                this.showSolution();\n                break;\n            case 'startGame':\n                this.newGame();\n                break;\n            case 'toggleHelp':\n                this.toggleHelp();\n                break;\n            default:\n                console.log(`üéπ Keyboard shortcut: ${action}`);\n        }\n    }\n}","\n        import { TrioUIBitPacked } from './js/TrioUIBitPacked.js';\n\n        // Initialize the game\n        document.addEventListener('DOMContentLoaded', async () => {\n            try {\n                console.log('üöÄ Initializing Trio BitPacked...');\n                \n                const trioUI = new TrioUIBitPacked();\n                const success = await trioUI.init();\n                \n                if (success) {\n                    console.log('‚úÖ Trio BitPacked initialized successfully');\n                    \n                    // Hide loading screen\n                    const loadingScreen = document.getElementById('loadingScreen');\n                    if (loadingScreen) {\n                        loadingScreen.style.display = 'none';\n                    }\n                    \n                    // Setup additional button handlers\n                    document.getElementById('newGameBtn').addEventListener('click', () => {\n                        trioUI.newGame();\n                    });\n                    \n                    document.getElementById('clearSelectionBtn').addEventListener('click', () => {\n                        trioUI.clearSelection();\n                    });\n                    \n                    document.getElementById('submitSolutionBtn').addEventListener('click', () => {\n                        trioUI.submitSolution();\n                    });\n                    \n                    document.getElementById('showSolutionBtn').addEventListener('click', () => {\n                        trioUI.showSolution();\n                    });\n                    \n                    // Help modal\n                    document.getElementById('helpBtn')?.addEventListener('click', () => {\n                        document.getElementById('helpModal').classList.remove('hidden');\n                    });\n                    \n                    document.getElementById('closeHelpBtn').addEventListener('click', () => {\n                        document.getElementById('helpModal').classList.add('hidden');\n                    });\n                    \n                    // Keyboard shortcuts\n                    document.addEventListener('keydown', (e) => {\n                        if (e.key === 'F1') {\n                            e.preventDefault();\n                            document.getElementById('helpModal').classList.toggle('hidden');\n                        }\n                    });\n                    \n                    // Store reference for debugging\n                    window.trioUI = trioUI;\n                    \n                } else {\n                    console.error('‚ùå Failed to initialize Trio BitPacked');\n                    document.getElementById('loadingScreen').innerHTML = `\n                        <div class=\"glass rounded-2xl p-8 text-center\">\n                            <div class=\"text-red-500 text-6xl mb-4\">‚ùå</div>\n                            <h2 class=\"text-2xl font-bold text-white mb-2\">Fehler beim Laden</h2>\n                            <p class=\"text-white opacity-75\">Trio konnte nicht initialisiert werden</p>\n                        </div>\n                    `;\n                }\n            } catch (error) {\n                console.error('‚ùå Error initializing Trio:', error);\n                document.getElementById('loadingScreen').innerHTML = `\n                    <div class=\"glass rounded-2xl p-8 text-center\">\n                        <div class=\"text-red-500 text-6xl mb-4\">‚ùå</div>\n                        <h2 class=\"text-2xl font-bold text-white mb-2\">Initialisierungsfehler</h2>\n                        <p class=\"text-white opacity-75\">${error.message}</p>\n                    </div>\n                `;\n            }\n        });\n    "],"names":["TRIO_UI_CONFIG","TrioGameBitPacked","difficulty","init","TrioGame","error","row","col","board","positions","pos1","pos2","pos3","i","pos","j","result","isValid","calculation","a","b","c","addResult","subResult","validation","p","solutionArray","solutions","solution","difficultyNumber","callbackName","data","callback","TrioUIBitPacked","BaseGameUI","game","gridElement","cell","number","event","selectedIndex","selected","selectedDisplay","numbers","element","resultElement","target","submitBtn","canSubmit","targetElement","targetDisplay","stats","statusElement","historyElement","history","index","item","selector","e","firstSolution","text","type","toast","action","trioUI","loadingScreen"],"mappings":"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"}