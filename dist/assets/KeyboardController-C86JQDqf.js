class c{constructor(t={},e={}){this.config=this.mergeDefaultConfig(t),this._directCallbacks=e,this.shortcuts=new Map,this.enabled=!1,this.context="default",this.keySequence=[],this.sequenceTimeout=null,this.isInitialized=!1,this.boundHandler=this.handleKeyDown.bind(this),this._internalInit()}mergeDefaultConfig(t){const e={globalShortcuts:!0,sequenceTimeout:1e3,preventDefaults:!0,enableLogging:!1,contexts:{default:t,modal:{Escape:"closeModal",F1:"toggleHelp"},game:t}};return Object.keys(t).some(o=>typeof t[o]=="string"&&!["globalShortcuts","sequenceTimeout","preventDefaults","enableLogging","contexts"].includes(o))&&(e.F1="toggleHelp",e.Escape="closeModal"),{...e,...t}}_internalInit(){this.registerDefaultShortcuts(),this.enable()}registerDefaultShortcuts(){for(const[t,e]of Object.entries(this.config))typeof e=="string"&&this.register(t,e)}register(t,e,s={}){const o=this.normalizeKeyCombo(t);if(this.shortcuts.has(o))return!1;const i={keyCombo:o,action:e,options:{context:s.context||"default",preventDefault:s.preventDefault!==!1,stopPropagation:s.stopPropagation!==!1,enabled:s.enabled!==!1,description:s.description||""}};this.shortcuts.set(o,i),this.config.enableLogging}unregister(t){const e=this.normalizeKeyCombo(t),s=this.shortcuts.delete(e);return s&&this.config.enableLogging,s}enable(){this.enabled||(document.addEventListener("keydown",this.boundHandler),this.enabled=!0,this.config.enableLogging)}disable(){this.enabled&&(document.removeEventListener("keydown",this.boundHandler),this.enabled=!1,this.config.enableLogging)}setContext(t){this.context=t,this.config.enableLogging}handleKeyDown(t){if(!this.enabled||this.shouldIgnoreEvent(t))return;const e=this.eventToKeyCombo(t),s=this.shortcuts.get(e);s&&this.isShortcutActive(s)&&(this.config.enableLogging,this._trackKeyPress(e),s.options.preventDefault&&t.preventDefault(),s.options.stopPropagation&&(t.stopPropagation(),t.stopImmediatePropagation()),this.executeAction(s.action,t))}shouldIgnoreEvent(t){const e=t.target;if(!e||!e.tagName)return!1;const s=e.tagName.toLowerCase();return["input","textarea","select"].includes(s)?!["F1","F2","Escape"].includes(t.key):e.contentEditable==="true"}eventToKeyCombo(t){const e=[];return t.ctrlKey&&e.push("Ctrl"),t.altKey&&e.push("Alt"),t.shiftKey&&e.push("Shift"),t.metaKey&&e.push("Meta"),e.push(t.key),e.join("+")}normalizeKeyCombo(t){const e=t.split("+").map(i=>i.trim()),s=[];let o="";for(const i of e){const n=this.normalizeKeyName(i);["Ctrl","Alt","Shift","Meta"].includes(n)?s.includes(n)||s.push(n):o=n}return s.sort(),[...s,o].join("+")}normalizeKeyName(t){const e={control:"Ctrl",ctrl:"Ctrl",alt:"Alt",shift:"Shift",meta:"Meta",cmd:"Meta",command:"Meta",esc:"Escape",escape:"Escape",space:" ",spacebar:" ",enter:"Enter",return:"Enter",tab:"Tab",backspace:"Backspace",delete:"Delete",del:"Delete"};if(!t||t.trim()==="")return" ";const s=t.toLowerCase();return e[s]||t}isShortcutActive(t){if(!t.options.enabled)return!1;const e=t.options.context;return e==="default"||e===this.context}executeAction(t,e){if(typeof t=="function")t(e);else if(typeof t=="string"){const s=this._directCallbacks&&this._directCallbacks[t];s&&typeof s=="function"?s(e):this.emitActionEvent(t,e)}}emitActionEvent(t,e){const s=new CustomEvent("keyboard:action",{detail:{action:t,originalEvent:e,controller:this}});document.dispatchEvent(s)}registerMultiple(t,e={}){let s=0;for(const[o,i]of Object.entries(t))this.register(o,i,e),s++;return s}setShortcutEnabled(t,e){const s=this.normalizeKeyCombo(t),o=this.shortcuts.get(s);return o?(o.options.enabled=e,this.config.enableLogging,!0):!1}getShortcuts(t=null){const e=[];for(const[s,o]of this.shortcuts)(!t||o.options.context===t)&&e.push({keyCombo:s,action:o.action,context:o.options.context,enabled:o.options.enabled,description:o.options.description});return e}checkConflicts(){const t=[],e={};for(const[s,o]of this.shortcuts){const i=o.options.context;e[i]||(e[i]=new Map),e[i].has(s)?t.push({keyCombo:s,context:i,actions:[e[i].get(s),o.action]}):e[i].set(s,o.action)}return t}getDebugInfo(){return{isEnabled:this.isEnabled,context:this.context,shortcutCount:this.shortcuts.size,shortcuts:this.getShortcuts(),conflicts:this.checkConflicts(),config:{...this.config}}}generateHelpText(t=null){const e=this.getShortcuts(t);if(e.length===0)return"No keyboard shortcuts available.";let s=`Keyboard Shortcuts:

`;return e.forEach(o=>{const i=o.description||o.action;s+=`${o.keyCombo}: ${i}
`}),s}async init(){return this.isInitialized=!0,Promise.resolve()}get callbacks(){return this._callbacks||this._directCallbacks||{}}set callbacks(t){this._callbacks=t}registerShortcut(t,e,s){return typeof s=="function"?(this.callbacks=this.callbacks||{},this.callbacks[e]=s,this.register(t,e)):this.register(t,e)}getRegisteredShortcuts(){return Array.from(this.shortcuts.keys()).map(e=>{let s=e.replace(/Ctrl\+/g,"ctrl+").replace(/Alt\+/g,"alt+").replace(/Shift\+/g,"shift+").replace(/Meta\+/g,"meta+");return s===" "&&(s="Space"),s===""&&(s="Space"),s})}unregisterShortcut(t){const e=this.normalizeKeyCombo(t),s=this.shortcuts.delete(e);return s&&this.config.enableLogging,s}updateShortcut(t,e,s){return this.unregisterShortcut(t),this.registerShortcut(t,e,s)}isEnabled(){return this.enabled}pause(){this.wasPaused=!this.enabled,this.disable()}resume(){this.wasPaused||this.enable()}clearAllShortcuts(){const t=this.shortcuts.size;this.shortcuts.clear(),this.config.enableLogging}setAllowInInputs(t){this.allowInInputs=t||[]}setPreventDefault(t){this.config.preventDefaults=t;for(const[e,s]of this.shortcuts)s.options.preventDefault=t}getDebugInfo(){return{isEnabled:this.isEnabled(),isInitialized:this.isInitialized||!0,context:this.context,shortcutCount:this.shortcuts.size,registeredShortcuts:this.getRegisteredShortcuts(),keyPressCount:this.keyPressCount||0,shortcuts:this.getShortcuts(),conflicts:this.checkConflicts(),config:{...this.config}}}validateConfiguration(){const t=[],e=[],s=this.checkConflicts();s.length>0&&s.forEach(o=>{e.push(`Conflicting shortcut: ${o.keyCombo} in context ${o.context}`)});for(const[o]of this.shortcuts)(!o||o.trim()==="")&&t.push("Empty key combination found"),o.includes("++")&&t.push(`Invalid key combination: ${o}`);return{valid:t.length===0,errors:t,warnings:e}}getStatistics(){const t=this.getShortcuts(),e=t.filter(i=>i.enabled);this.keyPressCount=this.keyPressCount||0,this.shortcutUsage=this.shortcutUsage||{};let s=null,o=0;for(const[i,n]of Object.entries(this.shortcutUsage))n>o&&(o=n,s=i);return{totalShortcuts:this.shortcuts.size,enabledShortcuts:e.length,disabledShortcuts:t.length-e.length,totalKeyPresses:this.keyPressCount,mostUsedShortcut:s,shortcutUsage:{...this.shortcutUsage}}}exportConfiguration(){const t={};for(const[e,s]of this.shortcuts)t[e]={action:s.action,options:{...s.options}};return{shortcuts:t,settings:{context:this.context,isEnabled:this.isEnabled(),config:{...this.config}}}}importConfiguration(t){if(!t||!t.shortcuts)return!1;this.clearAllShortcuts();for(const[e,s]of Object.entries(t.shortcuts))this.register(e,s.action,s.options);return t.settings&&(t.settings.context&&(this.context=t.settings.context),typeof t.settings.isEnabled=="boolean"&&(t.settings.isEnabled?this.enable():this.disable())),!0}_trackKeyPress(t){this.keyPressCount=(this.keyPressCount||0)+1,this.shortcutUsage=this.shortcutUsage||{},this.shortcutUsage[t]=(this.shortcutUsage[t]||0)+1}destroy(){this.disable(),this.shortcuts.clear(),this.sequenceTimeout&&clearTimeout(this.sequenceTimeout)}}export{c as KeyboardController};
//# sourceMappingURL=KeyboardController-C86JQDqf.js.map
