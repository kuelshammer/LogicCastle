{"version":3,"mappings":"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","names":["ModularConnect4Game","BaseGameUI","config","createConnect4Config","wasmGame","Connect4GameBitPacked","gameBoard","topCoords","bottomCoords","BoardRenderer","row","col","cell","disc","e","coord","index","moveResult","targetRow","board","player","directions","dr","dc","count","line","i","r","winnerName","c","gameStatus","undoResult","lastMove","indicator","name","moveCounter","undoBtn","modalId","modal","game","error","errorDiv","__vitePreload","CONNECT4_UI_CONFIG","initializeMinimalConnect4","gameState","makeMove","checkWin","statusEl","updatePlayerIndicator","newGameBtn","initializeConnect4System"],"ignoreList":[],"sources":["../../games/connect4/js/main.js","../../games/connect4/index.html?html-proxy&index=3.js"],"sourcesContent":["import { BaseGameUI } from './modules/core/BaseGameUI.js';\nimport { BoardRenderer } from './components/BoardRenderer.js';\nimport { Connect4GameBitPacked } from './game.js';\nimport { createConnect4Config } from './connect4-config.js';\n\nclass ModularConnect4Game extends BaseGameUI {\n  constructor() {\n    const config = createConnect4Config('two-player');\n    const wasmGame = new Connect4GameBitPacked();\n    super(wasmGame, config);\n\n    this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n    this.currentPlayer = 1;\n    this.gameOver = false;\n    this.winner = null;\n    this.moveCount = 0;\n    this.gameHistory = [];\n    this.scores = { yellow: 0, red: 0 };\n    this.boardRenderer = null;\n\n    console.log('🎮 ModularConnect4Game created with BaseGameUI + BoardRenderer + WASM');\n  }\n\n  async init() {\n    console.log('🔄 Initializing modular Connect4...');\n\n    try {\n      await this.wasmGame.init();\n      console.log('✅ WASM Backend initialized successfully');\n    } catch (error) {\n      console.error('❌ WASM Backend initialization failed:', error);\n      console.log('🔄 Continuing with legacy game logic...');\n    }\n\n    await super.init();\n    this.initializeBoardRenderer();\n    this.createBoard();\n    this.setupEventListeners();\n    this.updateUI();\n\n    console.log('✅ Modular Connect4 initialized successfully');\n    return true;\n  }\n\n  initializeBoardRenderer() {\n    const gameBoard = document.getElementById('gameBoard');\n    const topCoords = document.getElementById('topCoords');\n    const bottomCoords = document.getElementById('bottomCoords');\n\n    if (gameBoard) {\n      this.boardRenderer = new BoardRenderer(gameBoard, topCoords, bottomCoords);\n      console.log('🎯 BoardRenderer initialized');\n    } else {\n      console.error('❌ GameBoard element not found for BoardRenderer');\n    }\n  }\n\n  createBoard() {\n    if (this.boardRenderer) {\n      const success = this.boardRenderer.initializeBoard();\n      if (success) {\n        this.boardRenderer.createCoordinateLabels();\n        console.log('🎯 Board created using BoardRenderer');\n      } else {\n        console.error('❌ BoardRenderer initialization failed');\n        this.fallbackCreateBoard();\n      }\n    } else {\n      console.warn('⚠️ BoardRenderer not available, using fallback');\n      this.fallbackCreateBoard();\n    }\n  }\n\n  fallbackCreateBoard() {\n    const gameBoard = document.getElementById('gameBoard');\n    if (!gameBoard) {\n      console.error('❌ Game board element not found');\n      return;\n    }\n\n    gameBoard.innerHTML = '';\n\n    for (let row = 0; row < 6; row++) {\n      for (let col = 0; col < 7; col++) {\n        const cell = document.createElement('div');\n        cell.className = 'game-slot relative bg-blue-500 rounded-full border-2 border-blue-700 cursor-pointer aspect-square flex items-center justify-center';\n        cell.dataset.row = row;\n        cell.dataset.col = col;\n\n        const disc = document.createElement('div');\n        disc.className = 'disc empty w-[85%] h-[85%] rounded-full';\n\n        cell.appendChild(disc);\n        gameBoard.appendChild(cell);\n      }\n    }\n\n    console.log('🎯 Fallback board created with 42 cells');\n  }\n\n  setupEventListeners() {\n    document.getElementById('gameBoard').addEventListener('click', (e) => {\n      const cell = e.target.closest('.game-slot');\n      if (cell && !this.gameOver) {\n        const col = parseInt(cell.dataset.col);\n        this.makeMove(col);\n      }\n    });\n\n    document.querySelectorAll('.coord').forEach((coord, index) => {\n      coord.addEventListener('click', () => {\n        if (!this.gameOver) {\n          this.makeMove(index);\n        }\n      });\n    });\n\n    document.getElementById('newGameBtn').addEventListener('click', () => {\n      this.resetGame();\n    });\n\n    document.getElementById('undoBtn').addEventListener('click', () => {\n      this.undoMove();\n    });\n\n    document.getElementById('resetScoreBtn').addEventListener('click', () => {\n      this.resetScore();\n    });\n\n    document.getElementById('helpBtn').addEventListener('click', () => {\n      this.showModal('helpModal');\n    });\n\n    document.getElementById('assistanceBtn').addEventListener('click', () => {\n      this.showModal('assistanceModal');\n    });\n\n    document.getElementById('closeHelpModal').addEventListener('click', () => {\n      this.hideModal('helpModal');\n    });\n\n    document.getElementById('closeAssistanceModal').addEventListener('click', () => {\n      this.hideModal('assistanceModal');\n    });\n\n    document.addEventListener('keydown', (e) => {\n      if (e.key >= '1' && e.key <= '7' && !this.gameOver) {\n        const col = parseInt(e.key) - 1;\n        this.makeMove(col);\n      } else if (e.key === 'n' || e.key === 'N') {\n        this.resetGame();\n      } else if (e.key === 'u' || e.key === 'U') {\n        this.undoMove();\n      } else if (e.key === 'F1') {\n        e.preventDefault();\n        this.toggleModal('helpModal');\n      } else if (e.key === 'F2') {\n        e.preventDefault();\n        this.toggleModal('assistanceModal');\n      } else if (e.key === 'F3') {\n        e.preventDefault();\n        this.resetScore();\n      } else if (e.key === 'Escape') {\n        this.hideModal('helpModal');\n        this.hideModal('assistanceModal');\n      }\n    });\n\n    document.getElementById('helpModal').addEventListener('click', (e) => {\n      if (e.target.id === 'helpModal') {\n        this.hideModal('helpModal');\n      }\n    });\n\n    document.getElementById('assistanceModal').addEventListener('click', (e) => {\n      if (e.target.id === 'assistanceModal') {\n        this.hideModal('assistanceModal');\n      }\n    });\n\n    console.log('🎮 Event listeners set up');\n  }\n\n  makeMove(col) {\n    if (this.gameOver || col < 0 || col >= 7) return false;\n\n    if (this.wasmGame && this.wasmGame.initialized) {\n      try {\n        const moveResult = this.wasmGame.makeMove(col);\n\n        this.board = moveResult.board;\n        this.currentPlayer = moveResult.player === 1 ? 2 : 1;\n        this.moveCount = moveResult.moveNumber;\n        this.gameOver = moveResult.isGameOver;\n        this.winner = moveResult.winner;\n\n        const targetRow = this.findMoveRow(col, moveResult.board);\n        if (targetRow !== -1) {\n          this.updateCell(targetRow, col, moveResult.player);\n        }\n\n        if (moveResult.isGameOver) {\n          if (moveResult.winner) {\n            this.showWin(targetRow, col);\n            this.updateScore();\n          } else {\n            this.showDraw();\n          }\n        }\n\n        this.updateUI();\n        return true;\n\n      } catch (error) {\n        console.error('❌ WASM move failed:', error);\n        console.log('🔄 Falling back to legacy move logic...');\n      }\n    }\n\n    return this.legacyMakeMove(col);\n  }\n\n  findMoveRow(col, board) {\n    for (let row = 5; row >= 0; row--) {\n      if (board[row][col] !== 0) {\n        return row;\n      }\n    }\n    return -1;\n  }\n\n  legacyMakeMove(col) {\n    let targetRow = -1;\n    for (let row = 5; row >= 0; row--) {\n      if (this.board[row][col] === 0) {\n        targetRow = row;\n        break;\n      }\n    }\n\n    if (targetRow === -1) return false;\n\n    this.gameHistory.push({\n      row: targetRow,\n      col: col,\n      player: this.currentPlayer,\n      board: this.board.map(row => [...row])\n    });\n\n    this.board[targetRow][col] = this.currentPlayer;\n    this.moveCount++;\n\n    this.updateCell(targetRow, col, this.currentPlayer);\n\n    if (this.checkWin(targetRow, col)) {\n      this.gameOver = true;\n      this.winner = this.currentPlayer;\n      this.showWin(targetRow, col);\n      this.updateScore();\n    } else if (this.moveCount === 42) {\n      this.gameOver = true;\n      this.winner = 0;\n      this.showDraw();\n    } else {\n      this.currentPlayer = this.currentPlayer === 1 ? 2 : 1;\n    }\n\n    this.updateUI();\n    return true;\n  }\n\n  checkWin(row, col) {\n    const player = this.board[row][col];\n    const directions = [\n      [0, 1],\n      [1, 0],\n      [1, 1],\n      [1, -1]\n    ];\n\n    for (const [dr, dc] of directions) {\n      let count = 1;\n      const line = [[row, col]];\n\n      for (let i = 1; i < 4; i++) {\n        const r = row + i * dr;\n        const c = col + i * dc;\n        if (r >= 0 && r < 6 && c >= 0 && c < 7 && this.board[r][c] === player) {\n          count++;\n          line.push([r, c]);\n        } else {\n          break;\n        }\n      }\n\n      for (let i = 1; i < 4; i++) {\n        const r = row - i * dr;\n        const c = col - i * dc;\n        if (r >= 0 && r < 6 && c >= 0 && c < 7 && this.board[r][c] === player) {\n          count++;\n          line.push([r, c]);\n        } else {\n          break;\n        }\n      }\n\n      if (count >= 4) {\n        this.winningLine = line;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  updateCell(row, col, player) {\n    if (this.boardRenderer) {\n      this.boardRenderer.updateBoardVisual(row, col, player);\n    } else {\n      const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n      if (cell) {\n        const disc = cell.querySelector('.disc');\n        if (disc) {\n          disc.classList.remove('empty', 'yellow', 'red');\n          disc.classList.add(player === 1 ? 'yellow' : 'red');\n        }\n      }\n    }\n  }\n\n  showWin(row, col) {\n    const winnerName = this.currentPlayer === 1 ? 'Spieler 1 (Gelb)' : 'Spieler 2 (Rot)';\n\n    if (this.winningLine) {\n      this.winningLine.forEach(([r, c]) => {\n        const cell = document.querySelector(`[data-row=\"${r}\"][data-col=\"${c}\"]`);\n        if (cell) {\n          const disc = cell.querySelector('.disc');\n          if (disc) {\n            disc.classList.add('winning-disc');\n          }\n        }\n      });\n    }\n\n    const gameStatus = document.getElementById('gameStatus');\n    if (gameStatus) {\n      gameStatus.textContent = `${winnerName} gewinnt!`;\n      gameStatus.className = 'font-semibold text-yellow-400';\n    }\n\n    console.log(`🏆 ${winnerName} gewinnt!`);\n  }\n\n  showDraw() {\n    const gameStatus = document.getElementById('gameStatus');\n    if (gameStatus) {\n      gameStatus.textContent = 'Unentschieden!';\n      gameStatus.className = 'font-semibold text-gray-400';\n    }\n\n    console.log('🤝 Unentschieden!');\n  }\n\n  updateScore() {\n    if (this.winner === 1) {\n      this.scores.yellow++;\n    } else if (this.winner === 2) {\n      this.scores.red++;\n    }\n\n    document.getElementById('yellowScore').textContent = this.scores.yellow;\n    document.getElementById('redScore').textContent = this.scores.red;\n  }\n\n  resetScore() {\n    this.scores = { yellow: 0, red: 0 };\n    document.getElementById('yellowScore').textContent = '0';\n    document.getElementById('redScore').textContent = '0';\n    console.log('🔄 Score reset');\n  }\n\n  undoMove() {\n    if (this.wasmGame && this.wasmGame.initialized && this.wasmGame.canUndo()) {\n      try {\n        const undoResult = this.wasmGame.undoMove();\n\n        this.board = undoResult.currentState.board;\n        this.currentPlayer = undoResult.currentState.currentPlayer;\n        this.moveCount = undoResult.currentState.moveCount;\n        this.gameOver = undoResult.currentState.isGameOver;\n        this.winner = undoResult.currentState.winner;\n\n        this.updateBoardFromState();\n        this.updateUI();\n        return true;\n\n      } catch (error) {\n        console.error('❌ WASM undo failed:', error);\n        console.log('🔄 Falling back to legacy undo logic...');\n      }\n    }\n\n    return this.legacyUndoMove();\n  }\n\n  legacyUndoMove() {\n    if (this.gameHistory.length === 0) return false;\n\n    const lastMove = this.gameHistory.pop();\n    this.board = lastMove.board;\n    this.currentPlayer = lastMove.player;\n    this.moveCount--;\n    this.gameOver = false;\n    this.winner = null;\n\n    this.updateBoardFromState();\n    this.updateUI();\n    return true;\n  }\n\n  updateBoardFromState() {\n    for (let row = 0; row < 6; row++) {\n      for (let col = 0; col < 7; col++) {\n        const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n        if (cell) {\n          const disc = cell.querySelector('.disc');\n          if (disc) {\n            disc.classList.remove('empty', 'yellow', 'red', 'winning-disc');\n            if (this.board[row][col] === 0) {\n              disc.classList.add('empty');\n            } else if (this.board[row][col] === 1) {\n              disc.classList.add('yellow');\n            } else if (this.board[row][col] === 2) {\n              disc.classList.add('red');\n            }\n          }\n        }\n      }\n    }\n  }\n\n  resetGame() {\n    if (this.wasmGame && this.wasmGame.initialized) {\n      try {\n        this.wasmGame.newGame();\n\n        this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n        this.currentPlayer = 1;\n        this.gameOver = false;\n        this.winner = null;\n        this.moveCount = 0;\n        this.gameHistory = [];\n        this.winningLine = null;\n\n        console.log('🔄 New game started using WASM backend');\n\n      } catch (error) {\n        console.error('❌ WASM reset failed:', error);\n        console.log('🔄 Falling back to legacy reset logic...');\n      }\n    } else {\n      this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n      this.currentPlayer = 1;\n      this.gameOver = false;\n      this.winner = null;\n      this.moveCount = 0;\n      this.gameHistory = [];\n      this.winningLine = null;\n\n      console.log('🔄 New game started using legacy logic');\n    }\n\n    if (this.boardRenderer) {\n      this.boardRenderer.clearBoard();\n    } else {\n      const cells = document.querySelectorAll('.game-slot');\n      cells.forEach(cell => {\n        const disc = cell.querySelector('.disc');\n        if (disc) {\n          disc.classList.remove('yellow', 'red', 'winning-disc');\n          disc.classList.add('empty');\n        }\n      });\n    }\n\n    this.updateUI();\n  }\n\n  updateUI() {\n    const indicator = document.getElementById('currentPlayerIndicator');\n    if (indicator) {\n      const disc = indicator.querySelector('.player-disc');\n      const name = indicator.querySelector('.player-name');\n      if (disc && name) {\n        if (this.currentPlayer === 1) {\n          disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-yellow-400 to-yellow-600 shadow-lg';\n          name.textContent = 'Spieler 1';\n        } else {\n          disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-red-500 to-red-700 shadow-lg';\n          name.textContent = 'Spieler 2';\n        }\n      }\n    }\n\n    const moveCounter = document.getElementById('moveCounter');\n    if (moveCounter) {\n      moveCounter.textContent = this.moveCount;\n    }\n\n    if (!this.gameOver) {\n      const gameStatus = document.getElementById('gameStatus');\n      if (gameStatus) {\n        gameStatus.textContent = 'Spiel läuft';\n        gameStatus.className = 'font-semibold text-green-400';\n      }\n    }\n\n    const undoBtn = document.getElementById('undoBtn');\n    if (undoBtn) {\n      undoBtn.disabled = this.gameHistory.length === 0;\n    }\n  }\n\n  showModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.remove('hidden');\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  hideModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.add('hidden');\n      document.body.style.overflow = '';\n    }\n  }\n\n  toggleModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      if (modal.classList.contains('hidden')) {\n        this.showModal(modalId);\n      } else {\n        this.hideModal(modalId);\n      }\n    }\n  }\n}\n\n(async () => {\n  try {\n    const game = new ModularConnect4Game();\n    await game.init();\n\n    window.game = game;\n\n    console.log('🎮 STEP 3 Complete: BaseGameUI + BoardRenderer + WASM Backend activated!');\n  } catch (error) {\n    console.error('❌ STEP 3 Failed:', error);\n\n    const errorDiv = document.createElement('div');\n    errorDiv.style.cssText = 'position: fixed; top: 20px; left: 20px; right: 20px; background: #f44336; color: white; padding: 15px; border-radius: 8px; z-index: 1000; max-width: 500px; box-shadow: 0 4px 12px rgba(0,0,0,0.3);';\n    errorDiv.textContent = `STEP 3 Error: ${error.message}`;\n    document.body.appendChild(errorDiv);\n  }\n})();","\n      console.log('🚀 STEP 3: Activating WASM Backend Integration...');\n      \n      // Import BaseGameUI from local modules\n      try {\n        const { BaseGameUI } = await import('./js/modules/core/BaseGameUI.js');\n        console.log('✅ BaseGameUI imported successfully');\n        \n        // Import Connect4 Config\n        const { CONNECT4_UI_CONFIG, createConnect4Config } = await import('./js/connect4-config.js');\n        console.log('✅ Connect4 Config imported successfully');\n        \n        // Import BoardRenderer Component\n        const { BoardRenderer } = await import('./js/components/BoardRenderer.js');\n        console.log('✅ BoardRenderer imported successfully');\n        \n        // Import WASM Backend\n        const { Connect4GameBitPacked } = await import('./js/game.js');\n        console.log('✅ WASM Backend imported successfully');\n        \n        // Create a hybrid game that extends BaseGameUI with BoardRenderer + WASM\n        class ModularConnect4Game extends BaseGameUI {\n          constructor() {\n            const config = createConnect4Config('two-player');\n            \n            // Initialize WASM Backend first\n            this.wasmGame = new Connect4GameBitPacked();\n            super(this.wasmGame, config); // Pass WASM backend to BaseGameUI\n            \n            // Legacy game state for compatibility\n            this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n            this.currentPlayer = 1;\n            this.gameOver = false;\n            this.winner = null;\n            this.moveCount = 0;\n            this.gameHistory = [];\n            this.scores = { yellow: 0, red: 0 };\n            \n            // Initialize BoardRenderer\n            this.boardRenderer = null;\n            \n            console.log('🎮 ModularConnect4Game created with BaseGameUI + BoardRenderer + WASM');\n          }\n          \n          async init() {\n            console.log('🔄 Initializing modular Connect4...');\n            \n            // Initialize WASM Backend first\n            try {\n              await this.wasmGame.init();\n              console.log('✅ WASM Backend initialized successfully');\n            } catch (error) {\n              console.error('❌ WASM Backend initialization failed:', error);\n              console.log('🔄 Continuing with legacy game logic...');\n            }\n            \n            // Call parent init\n            await super.init();\n            \n            // Initialize BoardRenderer\n            this.initializeBoardRenderer();\n            \n            // Initialize our game\n            this.createBoard();\n            this.setupEventListeners();\n            this.updateUI();\n            \n            console.log('✅ Modular Connect4 initialized successfully');\n            return true;\n          }\n          \n          initializeBoardRenderer() {\n            const gameBoard = document.getElementById('gameBoard');\n            const topCoords = document.getElementById('topCoords');\n            const bottomCoords = document.getElementById('bottomCoords');\n            \n            if (gameBoard) {\n              this.boardRenderer = new BoardRenderer(gameBoard, topCoords, bottomCoords);\n              console.log('🎯 BoardRenderer initialized');\n            } else {\n              console.error('❌ GameBoard element not found for BoardRenderer');\n            }\n          }\n          \n          createBoard() {\n            // Use BoardRenderer to create board\n            if (this.boardRenderer) {\n              const success = this.boardRenderer.initializeBoard();\n              if (success) {\n                this.boardRenderer.createCoordinateLabels();\n                console.log('🎯 Board created using BoardRenderer');\n              } else {\n                console.error('❌ BoardRenderer initialization failed');\n                this.fallbackCreateBoard();\n              }\n            } else {\n              console.warn('⚠️ BoardRenderer not available, using fallback');\n              this.fallbackCreateBoard();\n            }\n          }\n          \n          fallbackCreateBoard() {\n            const gameBoard = document.getElementById('gameBoard');\n            if (!gameBoard) {\n              console.error('❌ Game board element not found');\n              return;\n            }\n            \n            gameBoard.innerHTML = '';\n            \n            // Create 42 cells (6 rows x 7 cols)\n            for (let row = 0; row < 6; row++) {\n              for (let col = 0; col < 7; col++) {\n                const cell = document.createElement('div');\n                cell.className = 'game-slot relative bg-blue-500 rounded-full border-2 border-blue-700 cursor-pointer aspect-square flex items-center justify-center';\n                cell.dataset.row = row;\n                cell.dataset.col = col;\n                \n                const disc = document.createElement('div');\n                disc.className = 'disc empty w-[85%] h-[85%] rounded-full';\n                \n                cell.appendChild(disc);\n                gameBoard.appendChild(cell);\n              }\n            }\n            \n            console.log('🎯 Fallback board created with 42 cells');\n          }\n          \n          setupEventListeners() {\n            // Board click handler\n            document.getElementById('gameBoard').addEventListener('click', (e) => {\n              const cell = e.target.closest('.game-slot');\n              if (cell && !this.gameOver) {\n                const col = parseInt(cell.dataset.col);\n                this.makeMove(col);\n              }\n            });\n            \n            // Column coordinates click handler\n            document.querySelectorAll('.coord').forEach((coord, index) => {\n              coord.addEventListener('click', () => {\n                if (!this.gameOver) {\n                  this.makeMove(index);\n                }\n              });\n            });\n            \n            // Button handlers\n            document.getElementById('newGameBtn').addEventListener('click', () => {\n              this.resetGame();\n            });\n            \n            document.getElementById('undoBtn').addEventListener('click', () => {\n              this.undoMove();\n            });\n            \n            document.getElementById('resetScoreBtn').addEventListener('click', () => {\n              this.resetScore();\n            });\n            \n            // Modal handlers\n            document.getElementById('helpBtn').addEventListener('click', () => {\n              this.showModal('helpModal');\n            });\n            \n            document.getElementById('assistanceBtn').addEventListener('click', () => {\n              this.showModal('assistanceModal');\n            });\n            \n            document.getElementById('closeHelpModal').addEventListener('click', () => {\n              this.hideModal('helpModal');\n            });\n            \n            document.getElementById('closeAssistanceModal').addEventListener('click', () => {\n              this.hideModal('assistanceModal');\n            });\n            \n            // Keyboard controls\n            document.addEventListener('keydown', (e) => {\n              if (e.key >= '1' && e.key <= '7' && !this.gameOver) {\n                const col = parseInt(e.key) - 1;\n                this.makeMove(col);\n              } else if (e.key === 'n' || e.key === 'N') {\n                this.resetGame();\n              } else if (e.key === 'u' || e.key === 'U') {\n                this.undoMove();\n              } else if (e.key === 'F1') {\n                e.preventDefault();\n                this.toggleModal('helpModal');\n              } else if (e.key === 'F2') {\n                e.preventDefault();\n                this.toggleModal('assistanceModal');\n              } else if (e.key === 'F3') {\n                e.preventDefault();\n                this.resetScore();\n              } else if (e.key === 'Escape') {\n                this.hideModal('helpModal');\n                this.hideModal('assistanceModal');\n              }\n            });\n            \n            // Modal click outside to close\n            document.getElementById('helpModal').addEventListener('click', (e) => {\n              if (e.target.id === 'helpModal') {\n                this.hideModal('helpModal');\n              }\n            });\n            \n            document.getElementById('assistanceModal').addEventListener('click', (e) => {\n              if (e.target.id === 'assistanceModal') {\n                this.hideModal('assistanceModal');\n              }\n            });\n            \n            console.log('🎮 Event listeners set up');\n          }\n          \n          makeMove(col) {\n            if (this.gameOver || col < 0 || col >= 7) return false;\n            \n            // Try WASM move first\n            if (this.wasmGame && this.wasmGame.initialized) {\n              try {\n                const moveResult = this.wasmGame.makeMove(col);\n                \n                // Update legacy state for UI compatibility\n                this.board = moveResult.board;\n                this.currentPlayer = moveResult.player === 1 ? 2 : 1; // Next player\n                this.moveCount = moveResult.moveNumber;\n                this.gameOver = moveResult.isGameOver;\n                this.winner = moveResult.winner;\n                \n                // Update visual\n                const targetRow = this.findMoveRow(col, moveResult.board);\n                if (targetRow !== -1) {\n                  this.updateCell(targetRow, col, moveResult.player);\n                }\n                \n                // Check for win\n                if (moveResult.isGameOver) {\n                  if (moveResult.winner) {\n                    this.showWin(targetRow, col);\n                    this.updateScore();\n                  } else {\n                    this.showDraw();\n                  }\n                }\n                \n                this.updateUI();\n                return true;\n                \n              } catch (error) {\n                console.error('❌ WASM move failed:', error);\n                console.log('🔄 Falling back to legacy move logic...');\n              }\n            }\n            \n            // Legacy move logic as fallback\n            return this.legacyMakeMove(col);\n          }\n          \n          findMoveRow(col, board) {\n            for (let row = 5; row >= 0; row--) {\n              if (board[row][col] !== 0) {\n                return row;\n              }\n            }\n            return -1;\n          }\n          \n          legacyMakeMove(col) {\n            // Find lowest empty row in column\n            let targetRow = -1;\n            for (let row = 5; row >= 0; row--) {\n              if (this.board[row][col] === 0) {\n                targetRow = row;\n                break;\n              }\n            }\n            \n            if (targetRow === -1) return false; // Column full\n            \n            // Save move for undo\n            this.gameHistory.push({\n              row: targetRow,\n              col: col,\n              player: this.currentPlayer,\n              board: this.board.map(row => [...row])\n            });\n            \n            // Make the move\n            this.board[targetRow][col] = this.currentPlayer;\n            this.moveCount++;\n            \n            // Update visual\n            this.updateCell(targetRow, col, this.currentPlayer);\n            \n            // Check for win\n            if (this.checkWin(targetRow, col)) {\n              this.gameOver = true;\n              this.winner = this.currentPlayer;\n              this.showWin(targetRow, col);\n              this.updateScore();\n            } else if (this.moveCount === 42) {\n              this.gameOver = true;\n              this.winner = 0; // Draw\n              this.showDraw();\n            } else {\n              // Switch player\n              this.currentPlayer = this.currentPlayer === 1 ? 2 : 1;\n            }\n            \n            this.updateUI();\n            return true;\n          }\n          \n          checkWin(row, col) {\n            const player = this.board[row][col];\n            const directions = [\n              [0, 1],  // horizontal\n              [1, 0],  // vertical\n              [1, 1],  // diagonal /\n              [1, -1]  // diagonal \\\n            ];\n            \n            for (const [dr, dc] of directions) {\n              let count = 1;\n              const line = [[row, col]];\n              \n              // Check positive direction\n              for (let i = 1; i < 4; i++) {\n                const r = row + i * dr;\n                const c = col + i * dc;\n                if (r >= 0 && r < 6 && c >= 0 && c < 7 && this.board[r][c] === player) {\n                  count++;\n                  line.push([r, c]);\n                } else {\n                  break;\n                }\n              }\n              \n              // Check negative direction\n              for (let i = 1; i < 4; i++) {\n                const r = row - i * dr;\n                const c = col - i * dc;\n                if (r >= 0 && r < 6 && c >= 0 && c < 7 && this.board[r][c] === player) {\n                  count++;\n                  line.push([r, c]);\n                } else {\n                  break;\n                }\n              }\n              \n              if (count >= 4) {\n                this.winningLine = line;\n                return true;\n              }\n            }\n            \n            return false;\n          }\n          \n          updateCell(row, col, player) {\n            // Use BoardRenderer if available\n            if (this.boardRenderer) {\n              this.boardRenderer.updateBoardVisual(row, col, player);\n            } else {\n              // Fallback to direct DOM manipulation\n              const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n              if (cell) {\n                const disc = cell.querySelector('.disc');\n                if (disc) {\n                  disc.classList.remove('empty', 'yellow', 'red');\n                  disc.classList.add(player === 1 ? 'yellow' : 'red');\n                }\n              }\n            }\n          }\n          \n          showWin(row, col) {\n            const winnerName = this.currentPlayer === 1 ? 'Spieler 1 (Gelb)' : 'Spieler 2 (Rot)';\n            \n            // Highlight winning pieces\n            if (this.winningLine) {\n              this.winningLine.forEach(([r, c]) => {\n                const cell = document.querySelector(`[data-row=\"${r}\"][data-col=\"${c}\"]`);\n                if (cell) {\n                  const disc = cell.querySelector('.disc');\n                  if (disc) {\n                    disc.classList.add('winning-disc');\n                  }\n                }\n              });\n            }\n            \n            // Update status\n            const gameStatus = document.getElementById('gameStatus');\n            if (gameStatus) {\n              gameStatus.textContent = `${winnerName} gewinnt!`;\n              gameStatus.className = 'font-semibold text-yellow-400';\n            }\n            \n            console.log(`🏆 ${winnerName} gewinnt!`);\n          }\n          \n          showDraw() {\n            const gameStatus = document.getElementById('gameStatus');\n            if (gameStatus) {\n              gameStatus.textContent = 'Unentschieden!';\n              gameStatus.className = 'font-semibold text-gray-400';\n            }\n            \n            console.log('🤝 Unentschieden!');\n          }\n          \n          updateScore() {\n            if (this.winner === 1) {\n              this.scores.yellow++;\n            } else if (this.winner === 2) {\n              this.scores.red++;\n            }\n            \n            document.getElementById('yellowScore').textContent = this.scores.yellow;\n            document.getElementById('redScore').textContent = this.scores.red;\n          }\n          \n          resetScore() {\n            this.scores = { yellow: 0, red: 0 };\n            document.getElementById('yellowScore').textContent = '0';\n            document.getElementById('redScore').textContent = '0';\n            console.log('🔄 Score reset');\n          }\n          \n          undoMove() {\n            // Try WASM undo first\n            if (this.wasmGame && this.wasmGame.initialized && this.wasmGame.canUndo()) {\n              try {\n                const undoResult = this.wasmGame.undoMove();\n                \n                // Update legacy state for UI compatibility\n                this.board = undoResult.currentState.board;\n                this.currentPlayer = undoResult.currentState.currentPlayer;\n                this.moveCount = undoResult.currentState.moveCount;\n                this.gameOver = undoResult.currentState.isGameOver;\n                this.winner = undoResult.currentState.winner;\n                \n                // Update all cells\n                this.updateBoardFromState();\n                this.updateUI();\n                return true;\n                \n              } catch (error) {\n                console.error('❌ WASM undo failed:', error);\n                console.log('🔄 Falling back to legacy undo logic...');\n              }\n            }\n            \n            // Legacy undo logic as fallback\n            return this.legacyUndoMove();\n          }\n          \n          legacyUndoMove() {\n            if (this.gameHistory.length === 0) return false;\n            \n            const lastMove = this.gameHistory.pop();\n            this.board = lastMove.board;\n            this.currentPlayer = lastMove.player;\n            this.moveCount--;\n            this.gameOver = false;\n            this.winner = null;\n            \n            // Update all cells\n            this.updateBoardFromState();\n            this.updateUI();\n            return true;\n          }\n          \n          updateBoardFromState() {\n            for (let row = 0; row < 6; row++) {\n              for (let col = 0; col < 7; col++) {\n                const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n                if (cell) {\n                  const disc = cell.querySelector('.disc');\n                  if (disc) {\n                    disc.classList.remove('empty', 'yellow', 'red', 'winning-disc');\n                    if (this.board[row][col] === 0) {\n                      disc.classList.add('empty');\n                    } else if (this.board[row][col] === 1) {\n                      disc.classList.add('yellow');\n                    } else if (this.board[row][col] === 2) {\n                      disc.classList.add('red');\n                    }\n                  }\n                }\n              }\n            }\n          }\n          \n          resetGame() {\n            // Try WASM reset first\n            if (this.wasmGame && this.wasmGame.initialized) {\n              try {\n                this.wasmGame.newGame();\n                \n                // Update legacy state for UI compatibility\n                this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n                this.currentPlayer = 1;\n                this.gameOver = false;\n                this.winner = null;\n                this.moveCount = 0;\n                this.gameHistory = [];\n                this.winningLine = null;\n                \n                console.log('🔄 New game started using WASM backend');\n                \n              } catch (error) {\n                console.error('❌ WASM reset failed:', error);\n                console.log('🔄 Falling back to legacy reset logic...');\n              }\n            } else {\n              // Legacy reset logic\n              this.board = Array(6).fill(null).map(() => Array(7).fill(0));\n              this.currentPlayer = 1;\n              this.gameOver = false;\n              this.winner = null;\n              this.moveCount = 0;\n              this.gameHistory = [];\n              this.winningLine = null;\n              \n              console.log('🔄 New game started using legacy logic');\n            }\n            \n            // Use BoardRenderer if available\n            if (this.boardRenderer) {\n              this.boardRenderer.clearBoard();\n            } else {\n              // Fallback to direct DOM manipulation\n              const cells = document.querySelectorAll('.game-slot');\n              cells.forEach(cell => {\n                const disc = cell.querySelector('.disc');\n                if (disc) {\n                  disc.classList.remove('yellow', 'red', 'winning-disc');\n                  disc.classList.add('empty');\n                }\n              });\n            }\n            \n            this.updateUI();\n          }\n          \n          updateUI() {\n            // Update current player indicator\n            const indicator = document.getElementById('currentPlayerIndicator');\n            if (indicator) {\n              const disc = indicator.querySelector('.player-disc');\n              const name = indicator.querySelector('.player-name');\n              if (disc && name) {\n                if (this.currentPlayer === 1) {\n                  disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-yellow-400 to-yellow-600 shadow-lg';\n                  name.textContent = 'Spieler 1';\n                } else {\n                  disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-red-500 to-red-700 shadow-lg';\n                  name.textContent = 'Spieler 2';\n                }\n              }\n            }\n            \n            // Update move counter\n            const moveCounter = document.getElementById('moveCounter');\n            if (moveCounter) {\n              moveCounter.textContent = this.moveCount;\n            }\n            \n            // Update game status if not game over\n            if (!this.gameOver) {\n              const gameStatus = document.getElementById('gameStatus');\n              if (gameStatus) {\n                gameStatus.textContent = 'Spiel läuft';\n                gameStatus.className = 'font-semibold text-green-400';\n              }\n            }\n            \n            // Update undo button\n            const undoBtn = document.getElementById('undoBtn');\n            if (undoBtn) {\n              undoBtn.disabled = this.gameHistory.length === 0;\n            }\n          }\n          \n          showModal(modalId) {\n            const modal = document.getElementById(modalId);\n            if (modal) {\n              modal.classList.remove('hidden');\n              document.body.style.overflow = 'hidden';\n            }\n          }\n          \n          hideModal(modalId) {\n            const modal = document.getElementById(modalId);\n            if (modal) {\n              modal.classList.add('hidden');\n              document.body.style.overflow = '';\n            }\n          }\n          \n          toggleModal(modalId) {\n            const modal = document.getElementById(modalId);\n            if (modal) {\n              if (modal.classList.contains('hidden')) {\n                this.showModal(modalId);\n              } else {\n                this.hideModal(modalId);\n              }\n            }\n          }\n        }\n        \n        // Initialize game when DOM is ready\n        document.addEventListener('DOMContentLoaded', async () => {\n          try {\n            const game = new ModularConnect4Game();\n            await game.init();\n            \n            window.game = game; // For debugging\n            \n            console.log('🎮 STEP 3 Complete: BaseGameUI + BoardRenderer + WASM Backend activated!');\n          } catch (error) {\n            console.error('❌ STEP 3 Failed:', error);\n            \n            // Show error message\n            const errorDiv = document.createElement('div');\n            errorDiv.style.cssText = 'position: fixed; top: 20px; left: 20px; right: 20px; background: #f44336; color: white; padding: 15px; border-radius: 8px; z-index: 1000; max-width: 500px; box-shadow: 0 4px 12px rgba(0,0,0,0.3);';\n            errorDiv.textContent = `STEP 3 Error: ${error.message}`;\n            document.body.appendChild(errorDiv);\n            \n            // FORCE EMERGENCY FALLBACK ON ANY ERROR\n            console.log('🚨 ACTIVATING EMERGENCY FALLBACK DUE TO INIT ERROR...');\n            initializeMinimalConnect4();\n          }\n        });\n        \n      } catch (error) {\n        console.error('❌ Failed to import modules:', error);\n        \n        // Fallback to minimal implementation\n        console.log('🔄 Falling back to minimal implementation...');\n        \n        // Show error message\n        const errorDiv = document.createElement('div');\n        errorDiv.style.cssText = 'position: fixed; top: 20px; left: 20px; right: 20px; background: #f44336; color: white; padding: 15px; border-radius: 8px; z-index: 1000; max-width: 500px; box-shadow: 0 4px 12px rgba(0,0,0,0.3);';\n        errorDiv.innerHTML = `\n          <h3 style=\"margin: 0 0 10px 0;\">⚠️ Modular Import Failed</h3>\n          <p style=\"margin: 0 0 10px 0;\"><strong>Error:</strong> ${error.message}</p>\n          <p style=\"margin: 0; font-size: 12px; opacity: 0.9;\">Using minimal implementation for now.</p>\n        `;\n        document.body.appendChild(errorDiv);\n        \n        // FORCE MINIMAL IMPLEMENTATION - CRITICAL FIX\n        console.log('🚨 ACTIVATING EMERGENCY FALLBACK SYSTEM...');\n        initializeMinimalConnect4();\n      }\n      \n      // Emergency Minimal Connect4 Implementation\n      function initializeMinimalConnect4() {\n        console.log('🔧 Emergency minimal Connect4 initialization...');\n        \n        // Simple game state\n        const gameState = {\n          board: Array(6).fill(null).map(() => Array(7).fill(0)),\n          currentPlayer: 1,\n          gameOver: false,\n          winner: null,\n          moveCount: 0\n        };\n        \n        // Create board\n        const gameBoard = document.getElementById('gameBoard');\n        if (gameBoard) {\n          gameBoard.innerHTML = '';\n          \n          // Create 42 cells\n          for (let row = 0; row < 6; row++) {\n            for (let col = 0; col < 7; col++) {\n              const cell = document.createElement('div');\n              cell.className = 'game-slot relative bg-blue-500 rounded-full border-2 border-blue-700 cursor-pointer aspect-square flex items-center justify-center';\n              cell.dataset.row = row;\n              cell.dataset.col = col;\n              \n              const disc = document.createElement('div');\n              disc.className = 'disc empty w-[85%] h-[85%] rounded-full';\n              disc.style.background = 'rgba(255, 255, 255, 0.1)';\n              disc.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n              \n              cell.appendChild(disc);\n              gameBoard.appendChild(cell);\n              \n              // Add click handler\n              cell.addEventListener('click', () => makeMove(col));\n            }\n          }\n          \n          console.log('✅ Emergency board created with 42 cells');\n        }\n        \n        // Make move function\n        function makeMove(col) {\n          if (gameState.gameOver || col < 0 || col >= 7) return;\n          \n          // Find lowest empty row\n          let targetRow = -1;\n          for (let row = 5; row >= 0; row--) {\n            if (gameState.board[row][col] === 0) {\n              targetRow = row;\n              break;\n            }\n          }\n          \n          if (targetRow === -1) return; // Column full\n          \n          // Make move\n          gameState.board[targetRow][col] = gameState.currentPlayer;\n          gameState.moveCount++;\n          \n          // Update visual\n          const cell = document.querySelector(`[data-row=\"${targetRow}\"][data-col=\"${col}\"]`);\n          if (cell) {\n            const disc = cell.querySelector('.disc');\n            if (disc) {\n              disc.classList.remove('empty');\n              disc.classList.add(gameState.currentPlayer === 1 ? 'yellow' : 'red');\n              \n              if (gameState.currentPlayer === 1) {\n                disc.style.background = 'linear-gradient(135deg, #FFD700, #FFA000)';\n                disc.style.border = '3px solid #FF8F00';\n                disc.style.boxShadow = '0 4px 12px rgba(255, 215, 0, 0.6)';\n              } else {\n                disc.style.background = 'linear-gradient(135deg, #F44336, #D32F2F)';\n                disc.style.border = '3px solid #C62828';\n                disc.style.boxShadow = '0 4px 12px rgba(244, 67, 54, 0.6)';\n              }\n            }\n          }\n          \n          // Check win\n          if (checkWin(targetRow, col)) {\n            gameState.gameOver = true;\n            gameState.winner = gameState.currentPlayer;\n            const winnerName = gameState.currentPlayer === 1 ? 'Spieler 1 (Gelb)' : 'Spieler 2 (Rot)';\n            \n            const statusEl = document.getElementById('gameStatus');\n            if (statusEl) {\n              statusEl.textContent = `${winnerName} gewinnt!`;\n              statusEl.className = 'font-semibold text-yellow-400';\n            }\n            \n            console.log(`🏆 ${winnerName} gewinnt!`);\n          } else if (gameState.moveCount === 42) {\n            gameState.gameOver = true;\n            gameState.winner = 0;\n            \n            const statusEl = document.getElementById('gameStatus');\n            if (statusEl) {\n              statusEl.textContent = 'Unentschieden!';\n              statusEl.className = 'font-semibold text-gray-400';\n            }\n            \n            console.log('🤝 Unentschieden!');\n          } else {\n            // Switch player\n            gameState.currentPlayer = gameState.currentPlayer === 1 ? 2 : 1;\n            updatePlayerIndicator();\n          }\n        }\n        \n        // Check win function\n        function checkWin(row, col) {\n          const player = gameState.board[row][col];\n          const directions = [\n            [0, 1], [1, 0], [1, 1], [1, -1]\n          ];\n          \n          for (const [dr, dc] of directions) {\n            let count = 1;\n            \n            // Check positive direction\n            for (let i = 1; i < 4; i++) {\n              const r = row + i * dr;\n              const c = col + i * dc;\n              if (r >= 0 && r < 6 && c >= 0 && c < 7 && gameState.board[r][c] === player) {\n                count++;\n              } else {\n                break;\n              }\n            }\n            \n            // Check negative direction\n            for (let i = 1; i < 4; i++) {\n              const r = row - i * dr;\n              const c = col - i * dc;\n              if (r >= 0 && r < 6 && c >= 0 && c < 7 && gameState.board[r][c] === player) {\n                count++;\n              } else {\n                break;\n              }\n            }\n            \n            if (count >= 4) return true;\n          }\n          \n          return false;\n        }\n        \n        // Update player indicator\n        function updatePlayerIndicator() {\n          const indicator = document.getElementById('currentPlayerIndicator');\n          if (indicator) {\n            const disc = indicator.querySelector('.player-disc');\n            const name = indicator.querySelector('.player-name');\n            if (disc && name) {\n              if (gameState.currentPlayer === 1) {\n                disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-yellow-400 to-yellow-600 shadow-lg';\n                name.textContent = 'Spieler 1';\n              } else {\n                disc.className = 'player-disc w-8 h-8 rounded-full mr-3 bg-gradient-to-br from-red-500 to-red-700 shadow-lg';\n                name.textContent = 'Spieler 2';\n              }\n            }\n          }\n        }\n        \n        // Set up new game button\n        const newGameBtn = document.getElementById('newGameBtn');\n        if (newGameBtn) {\n          newGameBtn.addEventListener('click', () => {\n            // Reset game state\n            gameState.board = Array(6).fill(null).map(() => Array(7).fill(0));\n            gameState.currentPlayer = 1;\n            gameState.gameOver = false;\n            gameState.winner = null;\n            gameState.moveCount = 0;\n            \n            // Reset all cells\n            const cells = document.querySelectorAll('.game-slot');\n            cells.forEach(cell => {\n              const disc = cell.querySelector('.disc');\n              if (disc) {\n                disc.classList.remove('yellow', 'red');\n                disc.classList.add('empty');\n                disc.style.background = 'rgba(255, 255, 255, 0.1)';\n                disc.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n                disc.style.boxShadow = 'none';\n              }\n            });\n            \n            // Reset UI\n            const statusEl = document.getElementById('gameStatus');\n            if (statusEl) {\n              statusEl.textContent = 'Spiel läuft';\n              statusEl.className = 'font-semibold text-green-400';\n            }\n            \n            updatePlayerIndicator();\n            console.log('🔄 New game started');\n          });\n        }\n        \n        // Initialize UI\n        updatePlayerIndicator();\n        \n        // Make available for debugging\n        window.game = {\n          state: gameState,\n          makeMove: makeMove,\n          checkWin: checkWin\n        };\n        \n        console.log('✅ Emergency minimal Connect4 initialized successfully!');\n      }\n      \n      // SYSTEM INITIALIZATION - CDN + FALLBACK + MINIMAL\n      async function initializeConnect4System() {\n        console.log('🚀 Starting Connect4 System Initialization...');\n        \n        try {\n          // Try modular system first (CDN + Fallback)\n          const modularSuccess = await initializeModularConnect4();\n          if (modularSuccess) {\n            console.log('✅ Modular Connect4 system activated successfully!');\n            return;\n          }\n        } catch (error) {\n          console.error('❌ Modular system failed completely:', error);\n        }\n        \n        // Fallback to minimal system\n        console.log('🔄 Falling back to minimal implementation...');\n        try {\n          initializeMinimalConnect4();\n          console.log('✅ Minimal Connect4 system activated successfully!');\n        } catch (error) {\n          console.error('❌ Even minimal system failed:', error);\n          \n          // Last resort error message\n          const errorDiv = document.createElement('div');\n          errorDiv.style.cssText = 'position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #f44336; color: white; padding: 20px; border-radius: 8px; z-index: 9999; text-align: center;';\n          errorDiv.innerHTML = `\n            <h3>❌ Connect4 Initialization Failed</h3>\n            <p>Please refresh the page or contact support.</p>\n          `;\n          document.body.appendChild(errorDiv);\n        }\n      }\n      \n      // IMMEDIATE INITIALIZATION - MULTIPLE TRIGGER POINTS\n      document.addEventListener('DOMContentLoaded', () => {\n        console.log('🚨 DOM LOADED - STARTING CONNECT4 SYSTEM');\n        initializeConnect4System();\n      });\n      \n      // If DOM already loaded, run immediately\n      if (document.readyState !== 'loading') {\n        console.log('🚨 DOM ALREADY LOADED - STARTING CONNECT4 SYSTEM NOW');\n        initializeConnect4System();\n      }\n      \n      // Backup timer for very slow environments\n      setTimeout(() => {\n        const gameBoard = document.getElementById('gameBoard');\n        const cells = gameBoard ? gameBoard.querySelectorAll('.game-slot') : [];\n        \n        if (cells.length === 0) {\n          console.log('🔄 Backup timer triggered - no cells found, forcing initialization...');\n          initializeConnect4System();\n        }\n      }, 2000);\n    "],"file":"assets/connect4-DG8bBE23.js"}