class o{constructor(t){this.canvas=t,this.ctx=t.getContext("2d"),this.particles=[],this.animationFrameId=null}start(){this.animationFrameId=requestAnimationFrame(()=>this.animate())}stop(){cancelAnimationFrame(this.animationFrameId)}animate(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.particles.forEach((t,i)=>{t.update(),t.draw(this.ctx),t.isDead()&&this.particles.splice(i,1)}),this.animationFrameId=requestAnimationFrame(()=>this.animate())}addParticle(t,i,s={}){this.particles.push(new l(t,i,s))}}class l{constructor(t,i,{color:s="#fff",size:r=5,speed:a=2,angle:h=-Math.PI/2,gravity:n=.1,life:c=100}){this.x=t,this.y=i,this.color=s,this.size=r,this.vx=a*Math.cos(h),this.vy=a*Math.sin(h),this.gravity=n,this.life=c}update(){this.vy+=this.gravity,this.x+=this.vx,this.y+=this.vy,this.life--}draw(t){t.fillStyle=this.color,t.beginPath(),t.arc(this.x,this.y,this.size,0,Math.PI*2),t.fill()}isDead(){return this.life<=0}}export{o as ParticleEngine};
//# sourceMappingURL=ParticleEngine-gbcPFTkt.js.map
