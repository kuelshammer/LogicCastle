name: Comprehensive CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Quality checks - fast feedback
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint check
      run: npm run lint:check
      
    - name: Format check
      run: npm run format:check

  # Fast unit tests
  test-unit:
    name: Unit Tests (Fast)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm run test:ci-fast
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 2
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: |
          test-results.json
          test-results.xml

  # Comprehensive integration tests
  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [quality, test-unit]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run integration tests
      run: npm run test:ci-slow
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 5
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          test-results.json
          test-results.xml

  # Full test suite
  test-full:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm run test:ci
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 3
        
    - name: Upload comprehensive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: full-test-results
        path: |
          test-results.json
          test-results.xml
          
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: LogicCastle Test Results
        path: test-results.xml
        reporter: java-junit

  # Cross-platform testing
  test-cross-platform:
    name: Cross-Platform Tests
    runs-on: ${{ matrix.os }}
    needs: quality
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run fast tests
      run: npm run test:ci-fast
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 3

  # Performance regression tests
  test-performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test-unit
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance tests
      run: npm run test:performance
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 1 # Strict timeouts for performance tests
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: test-results.json

  # Security and dependency checks
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for outdated dependencies
      run: npm outdated || true

  # Build verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [quality, test-unit]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Verify build
      run: npm run serve &
      
    - name: Wait for server
      run: sleep 5
      
    - name: Test server response
      run: curl -f http://localhost:8080 || exit 1
      
    - name: Stop server
      run: pkill -f "http-server" || true

  # Notify on completion
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quality, test-unit, test-integration, test-full, security, build]
    if: always()
    steps:
    - name: Notify success
      if: needs.test-full.result == 'success'
      run: echo "✅ All tests passed! Ready for deployment."
      
    - name: Notify failure
      if: needs.test-full.result == 'failure'
      run: echo "❌ Tests failed. Check the logs for details."