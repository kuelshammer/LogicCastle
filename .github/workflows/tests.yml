name: LogicCastle Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  vitest-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Vitest tests
      run: npm run test:vitest
      env:
        CI: true
        CI_TIMEOUT_MULTIPLIER: 3
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vitest-test-results-${{ matrix.node-version }}
        path: |
          test-results-vitest.json
          test-results-vitest.xml
    
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Vitest Tests (Node ${{ matrix.node-version }})
        path: test-results-vitest.xml
        reporter: java-junit

  lint-and-typecheck:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for lint script
      id: check-lint
      run: |
        if npm run | grep -q "lint"; then
          echo "has_lint=true" >> $GITHUB_OUTPUT
        else
          echo "has_lint=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run linter (if available)
      if: steps.check-lint.outputs.has_lint == 'true'
      run: npm run lint
    
    - name: Check for typecheck script
      id: check-typecheck
      run: |
        if npm run | grep -q "typecheck"; then
          echo "has_typecheck=true" >> $GITHUB_OUTPUT
        else
          echo "has_typecheck=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run type checking (if available)
      if: steps.check-typecheck.outputs.has_typecheck == 'true'
      run: npm run typecheck