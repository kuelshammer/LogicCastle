name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g http-server puppeteer
        
    - name: Start local server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run Connect4 tests
      run: |
        node -e "
        const puppeteer = require('puppeteer');
        
        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();
          
          // Capture console logs
          page.on('console', msg => {
            console.log('PAGE LOG:', msg.text());
          });
          
          // Navigate to test page
          await page.goto('http://localhost:8080/games/connect4/tests/test-runner.html');
          
          // Wait for page to load
          await page.waitForTimeout(2000);
          
          // Run all tests
          const results = await page.evaluate(() => {
            return new Promise((resolve) => {
              const testResults = testSuite.runAllTests();
              const performanceResults = testSuite.runPerformanceTests();
              
              const passed = testResults.filter(r => r.passed).length;
              const total = testResults.length;
              
              resolve({
                tests: testResults,
                performance: performanceResults,
                summary: { passed, total, percentage: (passed / total) * 100 }
              });
            });
          });
          
          console.log('=== TEST RESULTS ===');
          console.log(\`Tests passed: \${results.summary.passed}/\${results.summary.total} (\${results.summary.percentage.toFixed(1)}%)\`);
          
          // Log failed tests
          const failedTests = results.tests.filter(t => !t.passed);
          if (failedTests.length > 0) {
            console.log('\\n=== FAILED TESTS ===');
            failedTests.forEach(test => {
              console.log(\`❌ \${test.message}\`);
            });
          }
          
          // Log performance metrics
          console.log('\\n=== PERFORMANCE METRICS ===');
          Object.entries(results.performance).forEach(([name, data]) => {
            console.log(\`⚡ \${name}: \${data.duration}ms\`);
          });
          
          await browser.close();
          
          // Exit with error code if tests failed
          if (results.summary.percentage < 100) {
            process.exit(1);
          }
        })();
        "
        
    - name: Run basic functionality tests
      run: |
        node -e "
        const puppeteer = require('puppeteer');
        
        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();
          
          // Test main landing page
          await page.goto('http://localhost:8080/index.html');
          
          const title = await page.title();
          console.log('Landing page title:', title);
          
          // Check if Connect4 link works
          await page.goto('http://localhost:8080/games/connect4/index.html');
          
          const connect4Title = await page.title();
          console.log('Connect4 page title:', connect4Title);
          
          // Verify game elements are present
          const gameBoard = await page.\$('#gameBoard');
          const newGameBtn = await page.\$('#newGameBtn');
          
          if (!gameBoard) throw new Error('Game board not found');
          if (!newGameBtn) throw new Error('New game button not found');
          
          console.log('✅ Basic functionality tests passed');
          
          await browser.close();
        })();
        "

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install ESLint
      run: npm install -g eslint
      
    - name: Lint JavaScript files
      run: |
        echo "Running ESLint on JavaScript files..."
        find . -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" | head -10
        
        # Create basic ESLint config if not exists
        if [ ! -f .eslintrc.js ]; then
          echo "module.exports = {
            env: { browser: true, es2021: true },
            extends: ['eslint:recommended'],
            parserOptions: { ecmaVersion: 12, sourceType: 'module' },
            rules: {
              'no-unused-vars': 'warn',
              'no-console': 'off',
              'semi': ['error', 'always']
            }
          };" > .eslintrc.js
        fi
        
        # Run ESLint on specific game files
        eslint games/connect4/js/*.js || echo "ESLint found issues (non-blocking for now)"

  accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install accessibility tools
      run: |
        npm install -g http-server @axe-core/cli
        
    - name: Start local server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run accessibility tests
      run: |
        # Test main page
        npx @axe-core/cli http://localhost:8080/index.html || echo "Accessibility issues found (non-blocking for now)"
        
        # Test Connect4 page
        npx @axe-core/cli http://localhost:8080/games/connect4/index.html || echo "Accessibility issues found (non-blocking for now)"

  performance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Lighthouse
      run: npm install -g lighthouse http-server
      
    - name: Start local server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run Lighthouse performance tests
      run: |
        lighthouse http://localhost:8080/index.html --output json --output-path ./lighthouse-main.json --quiet || echo "Lighthouse completed with warnings"
        lighthouse http://localhost:8080/games/connect4/index.html --output json --output-path ./lighthouse-connect4.json --quiet || echo "Lighthouse completed with warnings"
        
        # Extract key metrics
        echo "=== PERFORMANCE METRICS ==="
        if [ -f lighthouse-main.json ]; then
          node -e "
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('./lighthouse-main.json'));
            const metrics = report.lhr.audits;
            console.log('Main Page:');
            console.log('- Performance Score:', report.lhr.categories.performance.score * 100);
            console.log('- First Contentful Paint:', metrics['first-contentful-paint'].displayValue);
            console.log('- Largest Contentful Paint:', metrics['largest-contentful-paint'].displayValue);
          " || echo "Could not parse lighthouse results"
        fi

  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        
    - name: Create deployment summary
      run: |
        echo "🚀 Deployment completed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "📊 Test Results:" >> $GITHUB_STEP_SUMMARY
        echo "- All tests passed ✅" >> $GITHUB_STEP_SUMMARY
        echo "- Code quality checks completed ✅" >> $GITHUB_STEP_SUMMARY
        echo "🌐 Live site: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY