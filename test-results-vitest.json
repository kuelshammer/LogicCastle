{"numTotalTestSuites":99,"numPassedTestSuites":95,"numFailedTestSuites":4,"numPendingTestSuites":0,"numTotalTests":199,"numPassedTests":195,"numFailedTests":2,"numPendingTests":2,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1750747013067,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should handle strategic analysis integration","status":"passed","title":"should handle strategic analysis integration","duration":21.79620799999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should handle multiple consecutive moves without corruption","status":"passed","title":"should handle multiple consecutive moves without corruption","duration":7.662040999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should apply even/odd strategy with DOM feedback","status":"passed","title":"should apply even/odd strategy with DOM feedback","duration":2.87600000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should detect Zugzwang situations with UI integration","status":"passed","title":"should detect Zugzwang situations with UI integration","duration":3.8191249999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should analyze fork opportunities with DOM updates","status":"passed","title":"should analyze fork opportunities with DOM updates","duration":1.4439160000000584,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should fallback to safe random with DOM state","status":"passed","title":"should fallback to safe random with DOM state","duration":1.5706670000000713,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should maintain performance under complex board states","status":"passed","title":"should maintain performance under complex board states","duration":5.44662500000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should maintain move determinism for identical states","status":"passed","title":"should maintain move determinism for identical states","duration":1.3550420000000258,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should show differences between random vs strategic bots","status":"passed","title":"should show differences between random vs strategic bots","duration":1.2537909999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should show defensive vs offensive preferences","status":"passed","title":"should show defensive vs offensive preferences","duration":1.9637499999998909,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should prevent state corruption during analysis","status":"passed","title":"should prevent state corruption during analysis","duration":0.9060420000000704,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should handle cross-bot performance in complex positions","status":"passed","title":"should handle cross-bot performance in complex positions","duration":3.364582999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should handle random fallback behavior with DOM","status":"passed","title":"should handle random fallback behavior with DOM","duration":0.9887919999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should maintain multiple move sequence consistency","status":"passed","title":"should maintain multiple move sequence consistency","duration":3.628832999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should perform well with helper analysis integration","status":"passed","title":"should perform well with helper analysis integration","duration":1.1817500000000791,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should handle state isolation across multiple calls","status":"passed","title":"should handle state isolation across multiple calls","duration":1.2462500000000318,"failureMessages":[],"meta":{}}],"startTime":1750747014376,"endTime":1750747014437.2463,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ai-strategy-dom-tests.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Matrix Demo Tests"],"fullName":"Bot Matrix Demo Tests Demo: 50-Game Bot Matrix with \"Verlierer beginnt\" Logic","status":"passed","title":"Demo: 50-Game Bot Matrix with \"Verlierer beginnt\" Logic","duration":46.416499999999985,"failureMessages":[],"meta":{}}],"startTime":1750747015058,"endTime":1750747015104.4165,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-matrix-demo.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should complete 100 games without errors (Easy vs Medium)","status":"passed","title":"should complete 100 games without errors (Easy vs Medium)","duration":98.02862500000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should complete 100 games without errors (Medium vs Hard)","status":"passed","title":"should complete 100 games without errors (Medium vs Hard)","duration":19.072416999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should show skill differential (Hard vs Easy)","status":"passed","title":"should show skill differential (Hard vs Easy)","duration":26.04491699999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Implementation Validation"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Implementation Validation all bots should follow 4-stage decision process","status":"passed","title":"all bots should follow 4-stage decision process","duration":6.784457999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Implementation Validation"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Implementation Validation no bot should make illegal moves in extended play","status":"passed","title":"no bot should make illegal moves in extended play","duration":4.131750000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Performance Metrics"],"fullName":"Bot Performance Validation - 100 Game Series Performance Metrics game completion rate should be 100%","status":"passed","title":"game completion rate should be 100%","duration":26.74708300000009,"failureMessages":[],"meta":{}}],"startTime":1750747013792,"endTime":1750747013973.747,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-performance-100-series.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should beat Smart Random Bot majority of time","status":"passed","title":"Enhanced Smart Bot should beat Smart Random Bot majority of time","duration":26.42583300000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should dominate Easy Bot","status":"passed","title":"Enhanced Smart Bot should dominate Easy Bot","duration":8.24087499999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Smart Random Bot should beat Easy Bot","status":"passed","title":"Smart Random Bot should beat Easy Bot","duration":2.6889169999999467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should have higher strategic move ratio","status":"failed","title":"Enhanced Smart Bot should have higher strategic move ratio","duration":8.52541599999995,"failureMessages":["AssertionError: expected 0.64 to be greater than or equal to 0.672\n    at /Users/max/LogicCastle/tests/vitest/bot-strength-comparison.vitest.js:600:48\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests All bots should prefer strategic opening moves","status":"passed","title":"All bots should prefer strategic opening moves","duration":1.2654159999999592,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Bots should handle complex board states without crashing","status":"passed","title":"Bots should handle complex board states without crashing","duration":2.619209000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Bot strength hierarchy should be maintained","status":"passed","title":"Bot strength hierarchy should be maintained","duration":1.6901659999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests 1000-Game Bot Matrix Analysis with \"Verlierer beginnt\" Logic","status":"skipped","title":"1000-Game Bot Matrix Analysis with \"Verlierer beginnt\" Logic","failureMessages":[],"meta":{}}],"startTime":1750747014828,"endTime":1750747014879.6902,"status":"failed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-strength-comparison.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should run complete tournament and establish rankings","status":"passed","title":"should run complete tournament and establish rankings","duration":25.012249999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should validate Enhanced Smart Bot performance metrics","status":"failed","title":"should validate Enhanced Smart Bot performance metrics","duration":25.646207999999945,"failureMessages":["AssertionError: expected 0 to be greater than 30\n    at /Users/max/LogicCastle/tests/vitest/bot-tournament.vitest.js:407:57\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/max/LogicCastle/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"],"meta":{}},{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should demonstrate strategic improvement over time","status":"passed","title":"should demonstrate strategic improvement over time","duration":5.791333000000009,"failureMessages":[],"meta":{}}],"startTime":1750747014361,"endTime":1750747014417.7913,"status":"failed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-tournament.vitest.js"},{"assertionResults":[{"ancestorTitles":["Comprehensive 5x5 Bot Matrix - 100 Game Series"],"fullName":"Comprehensive 5x5 Bot Matrix - 100 Game Series should run complete 5x5 matrix and generate performance table","status":"passed","title":"should run complete 5x5 matrix and generate performance table","duration":441.3314590000001,"failureMessages":[],"meta":{}}],"startTime":1750747013788,"endTime":1750747014229.3315,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/comprehensive-bot-matrix-5x5.vitest.js"},{"assertionResults":[{"ancestorTitles":["Debug Bot Matrix"],"fullName":"Debug Bot Matrix should count all games correctly","status":"passed","title":"should count all games correctly","duration":13.380292000000054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Bot Matrix"],"fullName":"Debug Bot Matrix should run small matrix without errors","status":"passed","title":"should run small matrix without errors","duration":1.4012500000000045,"failureMessages":[],"meta":{}}],"startTime":1750747015376,"endTime":1750747015391.4014,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/debug-bot-matrix.vitest.js"},{"assertionResults":[{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should register and resolve simple services","status":"passed","title":"should register and resolve simple services","duration":121.46416699999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should support singleton services","status":"passed","title":"should support singleton services","duration":5.981834000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should handle factory functions","status":"passed","title":"should handle factory functions","duration":2.09375,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should inject dependencies correctly","status":"passed","title":"should inject dependencies correctly","duration":5.246000000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should throw error for unregistered services","status":"passed","title":"should throw error for unregistered services","duration":1.6775829999999132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should support child containers","status":"passed","title":"should support child containers","duration":1.302332999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should validate objects against interfaces","status":"passed","title":"should validate objects against interfaces","duration":1.078875000000039,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should create interface proxies for runtime validation","status":"passed","title":"should create interface proxies for runtime validation","duration":14.714042000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should validate known service interfaces","status":"passed","title":"should validate known service interfaces","duration":1.179540999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should configure for testing environment","status":"passed","title":"should configure for testing environment","duration":13.039875000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should create bots with different difficulties","status":"passed","title":"should create bots with different difficulties","duration":2.2076250000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should handle configuration errors gracefully","status":"passed","title":"should handle configuration errors gracefully","duration":0.8022499999999582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should not reconfigure when already configured","status":"passed","title":"should not reconfigure when already configured","duration":1.4079579999998941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should reset configuration properly","status":"passed","title":"should reset configuration properly","duration":2.719708999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should create functional game instances","status":"passed","title":"should create functional game instances","duration":10.534374999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should create game with UI when DOM element provided","status":"passed","title":"should create game with UI when DOM element provided","duration":0.9177919999999631,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should validate interfaces when requested","status":"passed","title":"should validate interfaces when requested","duration":5.592374999999947,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Integration with Legacy Code"],"fullName":"Dependency Injection System Integration with Legacy Code should maintain backward compatibility","status":"passed","title":"should maintain backward compatibility","duration":0.795833000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Integration with Legacy Code"],"fullName":"Dependency Injection System Integration with Legacy Code should support asynchronous service resolution","status":"passed","title":"should support asynchronous service resolution","duration":16.467333999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should handle circular dependencies gracefully","status":"passed","title":"should handle circular dependencies gracefully","duration":1.6299159999999802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should handle malformed service registrations","status":"passed","title":"should handle malformed service registrations","duration":4.676707999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should clear all services properly","status":"passed","title":"should clear all services properly","duration":1.7697089999999207,"failureMessages":[],"meta":{}}],"startTime":1750747013785,"endTime":1750747014007.7698,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/dependency-injection.vitest.js"},{"assertionResults":[{"ancestorTitles":["Expert Bot Integration Tests","UI Mode Mapping"],"fullName":"Expert Bot Integration Tests UI Mode Mapping Expert mode should map to monte-carlo difficulty","status":"passed","title":"Expert mode should map to monte-carlo difficulty","duration":13.439624999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","UI Mode Mapping"],"fullName":"Expert Bot Integration Tests UI Mode Mapping Expert should use enhanced Monte Carlo configuration","status":"passed","title":"Expert should use enhanced Monte Carlo configuration","duration":1.2839999999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Monte Carlo bot should make strategic moves","status":"passed","title":"Monte Carlo bot should make strategic moves","duration":1.8620840000000385,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Expert bot should show center preference in opening","status":"passed","title":"Expert bot should show center preference in opening","duration":0.9986250000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Expert bot should handle complex positions","status":"passed","title":"Expert bot should handle complex positions","duration":1.1114590000000248,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Bot Hierarchy Validation"],"fullName":"Expert Bot Integration Tests Bot Hierarchy Validation Bot difficulty progression should be logical","status":"passed","title":"Bot difficulty progression should be logical","duration":0.8175000000000523,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Bot Hierarchy Validation"],"fullName":"Expert Bot Integration Tests Bot Hierarchy Validation Expert should be the highest difficulty available in UI","status":"passed","title":"Expert should be the highest difficulty available in UI","duration":1.0925830000000474,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Monte Carlo Implementation Access"],"fullName":"Expert Bot Integration Tests Monte Carlo Implementation Access Monte Carlo should use enhanced simulation count","status":"passed","title":"Monte Carlo should use enhanced simulation count","duration":0.8481669999999895,"failureMessages":[],"meta":{}}],"startTime":1750747015326,"endTime":1750747015347.8481,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/expert-bot-quick-test.vitest.js"},{"assertionResults":[{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should outperform Defensive bot","status":"passed","title":"Monte Carlo should outperform Defensive bot","duration":21.04779099999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should outperform Enhanced Smart bot","status":"passed","title":"Monte Carlo should outperform Enhanced Smart bot","duration":1.7027500000000373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should dominate Smart Random bot","status":"passed","title":"Monte Carlo should dominate Smart Random bot","duration":1.6049580000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Expert Mode Validation"],"fullName":"Expert vs Strategic Bots Performance Tests Expert Mode Validation Expert should be strongest available bot in UI hierarchy","status":"passed","title":"Expert should be strongest available bot in UI hierarchy","duration":4.963457999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Expert Mode Validation"],"fullName":"Expert vs Strategic Bots Performance Tests Expert Mode Validation Monte Carlo should show consistent performance advantage","status":"passed","title":"Monte Carlo should show consistent performance advantage","duration":7.199624999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Strategic Depth Comparison"],"fullName":"Expert vs Strategic Bots Performance Tests Strategic Depth Comparison Monte Carlo should show better opening play","status":"passed","title":"Monte Carlo should show better opening play","duration":2.8738329999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Strategic Depth Comparison"],"fullName":"Expert vs Strategic Bots Performance Tests Strategic Depth Comparison Monte Carlo should handle complex positions better","status":"passed","title":"Monte Carlo should handle complex positions better","duration":1.679540999999972,"failureMessages":[],"meta":{}}],"startTime":1750747013792,"endTime":1750747013836.6794,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/expert-vs-strategic-quick.vitest.js"},{"assertionResults":[{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x _ x _ pattern (user example)","status":"skipped","title":"should detect _ x _ x _ pattern (user example)","failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x _ x pattern","status":"passed","title":"should detect _ x _ x pattern","duration":22.74187500000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect x _ x _ pattern","status":"passed","title":"should detect x _ x _ pattern","duration":1.2422500000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x x _ pattern","status":"passed","title":"should detect _ x x _ pattern","duration":2.165875000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Counter-Move Calculation"],"fullName":"Fork Detection Core Logic Fork Counter-Move Calculation should calculate correct counter moves for _ x _ x pattern","status":"passed","title":"should calculate correct counter moves for _ x _ x pattern","duration":2.353999999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Counter-Move Calculation"],"fullName":"Fork Detection Core Logic Fork Counter-Move Calculation should prioritize center positions in counter moves","status":"passed","title":"should prioritize center positions in counter moves","duration":0.9716250000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Critical Fork Defense"],"fullName":"Fork Detection Core Logic Critical Fork Defense should identify opponent forks as critical threats","status":"passed","title":"should identify opponent forks as critical threats","duration":10.610374999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Critical Fork Defense"],"fullName":"Fork Detection Core Logic Critical Fork Defense should provide specific columns for counter-moves","status":"passed","title":"should provide specific columns for counter-moves","duration":5.597499999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Opportunity Detection"],"fullName":"Fork Detection Core Logic Fork Opportunity Detection should find opportunities to create our own forks","status":"passed","title":"should find opportunities to create our own forks","duration":4.303332999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should not detect forks when opponent pieces block pattern","status":"passed","title":"should not detect forks when opponent pieces block pattern","duration":1.0960420000000113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should handle empty board gracefully","status":"passed","title":"should handle empty board gracefully","duration":1.1147080000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should handle full board gracefully","status":"passed","title":"should handle full board gracefully","duration":1.9358749999998963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Real Game Scenario Testing"],"fullName":"Fork Detection Core Logic Real Game Scenario Testing should solve the user reported problem: _ _ x x x _ _","status":"passed","title":"should solve the user reported problem: _ _ x x x _ _","duration":0.7076249999998936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Real Game Scenario Testing"],"fullName":"Fork Detection Core Logic Real Game Scenario Testing should recognize when player X can create winning fork","status":"passed","title":"should recognize when player X can create winning fork","duration":0.622333000000026,"failureMessages":[],"meta":{}}],"startTime":1750747014954,"endTime":1750747015014.7075,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/fork-detection.vitest.js"},{"assertionResults":[{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should use 1000 simulations instead of 100","status":"passed","title":"should use 1000 simulations instead of 100","duration":18.280584000000033,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should have time-boxing enabled","status":"passed","title":"should have time-boxing enabled","duration":1.1747500000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should complete thinking within time limit","status":"passed","title":"should complete thinking within time limit","duration":23.741458999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should adjust simulations based on game phase","status":"passed","title":"should adjust simulations based on game phase","duration":1.6771250000000464,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should use more simulations in mid-game","status":"passed","title":"should use more simulations in mid-game","duration":2.1639999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should respect minimum simulations","status":"passed","title":"should respect minimum simulations","duration":2.6347500000000537,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should respect maximum simulations","status":"passed","title":"should respect maximum simulations","duration":0.847541000000092,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","UCB1 Selection Strategy"],"fullName":"Enhanced Monte Carlo Bot Tests UCB1 Selection Strategy should explore unvisited columns first","status":"passed","title":"should explore unvisited columns first","duration":0.72687499999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","UCB1 Selection Strategy"],"fullName":"Enhanced Monte Carlo Bot Tests UCB1 Selection Strategy should balance exploitation and exploration","status":"passed","title":"should balance exploitation and exploration","duration":0.9712910000000647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Confidence Weighting"],"fullName":"Enhanced Monte Carlo Bot Tests Confidence Weighting should apply confidence bonus to well-explored columns","status":"passed","title":"should apply confidence bonus to well-explored columns","duration":0.7374999999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Strategic Strength"],"fullName":"Enhanced Monte Carlo Bot Tests Strategic Strength should prefer winning moves in tactical positions","status":"passed","title":"should prefer winning moves in tactical positions","duration":5.891499999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Strategic Strength"],"fullName":"Enhanced Monte Carlo Bot Tests Strategic Strength should avoid losing moves when possible","status":"passed","title":"should avoid losing moves when possible","duration":1.7176249999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Benchmarks"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Benchmarks should run significantly more simulations than basic bot","status":"passed","title":"should run significantly more simulations than basic bot","duration":7.544708000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Benchmarks"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Benchmarks should maintain good performance under time pressure","status":"passed","title":"should maintain good performance under time pressure","duration":6.253959000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should work as Stage 4 strategy within safe columns only","status":"passed","title":"should work as Stage 4 strategy within safe columns only","duration":5.946958999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should handle empty safe columns gracefully","status":"passed","title":"should handle empty safe columns gracefully","duration":0.5973749999999427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should handle single safe column efficiently","status":"passed","title":"should handle single safe column efficiently","duration":0.567209000000048,"failureMessages":[],"meta":{}}],"startTime":1750747014391,"endTime":1750747014473.5974,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/monte-carlo-enhanced.vitest.js"},{"assertionResults":[{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Easy bot should map to smart-random","status":"passed","title":"Easy bot should map to smart-random","duration":12.606583999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Medium bot should map to offensiv-gemischt","status":"passed","title":"Medium bot should map to offensiv-gemischt","duration":1.152249999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Strong bot should map to monte-carlo","status":"passed","title":"Strong bot should map to monte-carlo","duration":2.7217079999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Bot Strength Progression"],"fullName":"Updated Bot Mapping Tests Bot Strength Progression Should have clear win rate progression","status":"passed","title":"Should have clear win rate progression","duration":16.381958999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Bot Strength Progression"],"fullName":"Updated Bot Mapping Tests Bot Strength Progression Should have meaningful difficulty gaps","status":"passed","title":"Should have meaningful difficulty gaps","duration":2.9676670000000627,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","UI Options Validation"],"fullName":"Updated Bot Mapping Tests UI Options Validation Should have exactly 4 game modes (including 2-player)","status":"passed","title":"Should have exactly 4 game modes (including 2-player)","duration":1.0685000000000855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","UI Options Validation"],"fullName":"Updated Bot Mapping Tests UI Options Validation Should have clear bot names","status":"passed","title":"Should have clear bot names","duration":1.0647910000000138,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Easy bot should be beginner-friendly","status":"passed","title":"Easy bot should be beginner-friendly","duration":1.8102080000001024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Medium bot should provide balanced challenge","status":"passed","title":"Medium bot should provide balanced challenge","duration":0.89162500000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Strong bot should be challenging for experienced players","status":"passed","title":"Strong bot should be challenging for experienced players","duration":0.774915999999962,"failureMessages":[],"meta":{}}],"startTime":1750747014985,"endTime":1750747015028.775,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/new-bot-mapping.vitest.js"},{"assertionResults":[{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should perform basic calculations","status":"passed","title":"should perform basic calculations","duration":13.241167000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should work with DOM elements","status":"passed","title":"should work with DOM elements","duration":1.6354160000000206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should handle async operations","status":"passed","title":"should handle async operations","duration":14.638584000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should provide performance timing","status":"passed","title":"should provide performance timing","duration":5.4787919999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle array operations","status":"passed","title":"should handle array operations","duration":1.543707999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle object operations","status":"passed","title":"should handle object operations","duration":3.052500000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle deep equality","status":"passed","title":"should handle deep equality","duration":0.9379999999999882,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling Tests"],"fullName":"Error Handling Tests should catch thrown errors","status":"passed","title":"should catch thrown errors","duration":1.41195799999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling Tests"],"fullName":"Error Handling Tests should handle function calls that should not throw","status":"passed","title":"should handle function calls that should not throw","duration":4.777290999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate board operations","status":"passed","title":"should simulate board operations","duration":0.943834000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate win detection logic","status":"passed","title":"should simulate win detection logic","duration":0.6904169999999681,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate valid moves checking","status":"passed","title":"should simulate valid moves checking","duration":0.7872919999999795,"failureMessages":[],"meta":{}}],"startTime":1750747014493,"endTime":1750747014542.7874,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/simple-backend.vitest.js"},{"assertionResults":[{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Each strategic bot type uses distinct implementation","status":"passed","title":"Each strategic bot type uses distinct implementation","duration":21.150792000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation getBestMove routes to specific strategy methods","status":"passed","title":"getBestMove routes to specific strategy methods","duration":3.0340419999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Strategic bots show different move preferences","status":"passed","title":"Strategic bots show different move preferences","duration":4.911292000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Universal logic fallback works for unknown bot types","status":"passed","title":"Universal logic fallback works for unknown bot types","duration":0.9805840000000217,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Impact Assessment"],"fullName":"Performance Impact Assessment Strategic routing does not significantly impact performance","status":"passed","title":"Strategic routing does not significantly impact performance","duration":1.9305420000000026,"failureMessages":[],"meta":{}}],"startTime":1750747014938,"endTime":1750747014969.9307,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/strategic-bot-fix-validation.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-easy to offensiv-gemischt (Rank #4)","status":"passed","title":"should map vs-bot-easy to offensiv-gemischt (Rank #4)","duration":18.499582999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-medium to enhanced-smart (Rank #2)","status":"passed","title":"should map vs-bot-medium to enhanced-smart (Rank #2)","duration":1.197917000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-strong to defensive (Rank #1)","status":"passed","title":"should map vs-bot-strong to defensive (Rank #1)","duration":4.2188339999999585,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should maintain legacy vs-bot-smart compatibility","status":"passed","title":"should maintain legacy vs-bot-smart compatibility","duration":1.8550409999999715,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should default to easy for unknown modes","status":"passed","title":"should default to easy for unknown modes","duration":0.9188750000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","AI Mode Detection"],"fullName":"UI Bot Mapping Logic AI Mode Detection should correctly identify AI modes","status":"passed","title":"should correctly identify AI modes","duration":4.2686669999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Player Name Configuration"],"fullName":"UI Bot Mapping Logic Player Name Configuration should set correct player names for bot modes","status":"passed","title":"should set correct player names for bot modes","duration":0.8671250000000441,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Player Name Configuration"],"fullName":"UI Bot Mapping Logic Player Name Configuration should return default name for non-bot modes","status":"passed","title":"should return default name for non-bot modes","duration":0.6868329999999787,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Strength Hierarchy Validation"],"fullName":"UI Bot Mapping Logic Bot Strength Hierarchy Validation should implement correct strength ordering based on scientific analysis","status":"passed","title":"should implement correct strength ordering based on scientific analysis","duration":1.2316250000000082,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Strength Hierarchy Validation"],"fullName":"UI Bot Mapping Logic Bot Strength Hierarchy Validation should provide meaningful difficulty progression","status":"passed","title":"should provide meaningful difficulty progression","duration":2.3829580000000306,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Performance Validation Documentation"],"fullName":"UI Bot Mapping Logic Performance Validation Documentation should document that bot selection is scientifically validated","status":"passed","title":"should document that bot selection is scientifically validated","duration":2.446124999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Performance Validation Documentation"],"fullName":"UI Bot Mapping Logic Performance Validation Documentation should validate available bot modes match HTML select options","status":"passed","title":"should validate available bot modes match HTML select options","duration":1.283457999999996,"failureMessages":[],"meta":{}}],"startTime":1750747015009,"endTime":1750747015054.2834,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-bot-mapping-simple.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Bot Mode Validation","Bot Mode Detection"],"fullName":"UI Bot Mode Validation Bot Mode Detection should correctly identify AI modes","status":"passed","title":"should correctly identify AI modes","duration":1.0827919999999835,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-easy to offensiv-gemischt (Rank #4)","status":"passed","title":"should map vs-bot-easy to offensiv-gemischt (Rank #4)","duration":0.15874999999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-medium to enhanced-smart (Rank #2)","status":"passed","title":"should map vs-bot-medium to enhanced-smart (Rank #2)","duration":0.17308300000001964,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-strong to defensive (Rank #1)","status":"passed","title":"should map vs-bot-strong to defensive (Rank #1)","duration":0.07129200000002811,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should maintain legacy vs-bot-smart compatibility","status":"passed","title":"should maintain legacy vs-bot-smart compatibility","duration":0.10837500000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Strength Hierarchy"],"fullName":"UI Bot Mode Validation Bot Strength Hierarchy should implement correct strength ordering","status":"passed","title":"should implement correct strength ordering","duration":0.0987920000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Strength Hierarchy"],"fullName":"UI Bot Mode Validation Bot Strength Hierarchy should use scientifically validated bot rankings","status":"passed","title":"should use scientifically validated bot rankings","duration":0.09641599999997652,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Player Name Configuration"],"fullName":"UI Bot Mode Validation Player Name Configuration should set correct player names for bot modes","status":"passed","title":"should set correct player names for bot modes","duration":0.1382920000000354,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Player Name Configuration"],"fullName":"UI Bot Mode Validation Player Name Configuration should reset player names for two-player mode","status":"passed","title":"should reset player names for two-player mode","duration":0.18491599999998698,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","AI Move Generation"],"fullName":"UI Bot Mode Validation AI Move Generation should generate valid moves for all bot difficulties","status":"passed","title":"should generate valid moves for all bot difficulties","duration":0.16579200000001038,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","AI Move Generation"],"fullName":"UI Bot Mode Validation AI Move Generation should handle empty board scenarios","status":"passed","title":"should handle empty board scenarios","duration":0.058708000000024185,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Legacy Compatibility"],"fullName":"UI Bot Mode Validation Legacy Compatibility should maintain backward compatibility with existing modes","status":"passed","title":"should maintain backward compatibility with existing modes","duration":0.04654099999999062,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Legacy Compatibility"],"fullName":"UI Bot Mode Validation Legacy Compatibility should handle unknown modes gracefully","status":"passed","title":"should handle unknown modes gracefully","duration":0.03279199999997218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Mode Performance Validation"],"fullName":"Bot Mode Performance Validation should validate that chosen bots are performance-tested","status":"passed","title":"should validate that chosen bots are performance-tested","duration":0.09233399999999392,"failureMessages":[],"meta":{}}],"startTime":1750747015410,"endTime":1750747015413.1658,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-bot-mode-validation.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Hints button should exist and have correct styling","status":"passed","title":"Hints button should exist and have correct styling","duration":31.290875000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Hints modal should toggle on button click","status":"passed","title":"Hints modal should toggle on button click","duration":11.13270799999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests F2 keyboard shortcut should toggle hints modal","status":"passed","title":"F2 keyboard shortcut should toggle hints modal","duration":3.430041000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests F1 keyboard shortcut should still work for help modal","status":"passed","title":"F1 keyboard shortcut should still work for help modal","duration":2.655625000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Close button should close hints modal","status":"passed","title":"Close button should close hints modal","duration":2.655249999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Click outside modal should close it","status":"passed","title":"Click outside modal should close it","duration":6.080749999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests All help checkboxes should be present in modal","status":"passed","title":"All help checkboxes should be present in modal","duration":2.1922909999999547,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Modal structure should be correct","status":"passed","title":"Modal structure should be correct","duration":3.176249999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Modal should not interfere with game functionality","status":"passed","title":"Modal should not interfere with game functionality","duration":4.869458999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Both modals should be able to coexist","status":"passed","title":"Both modals should be able to coexist","duration":3.2832499999999527,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Checkbox states should persist across modal toggles","status":"passed","title":"Checkbox states should persist across modal toggles","duration":2.8961250000000405,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Event listeners should be properly attached","status":"passed","title":"Event listeners should be properly attached","duration":1.5140829999999141,"failureMessages":[],"meta":{}}],"startTime":1750747014456,"endTime":1750747014531.5142,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-hints-modal-integration.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should initialize undo state as disabled for both players","status":"passed","title":"should initialize undo state as disabled for both players","duration":25.371666000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should bind undo checkbox elements correctly","status":"passed","title":"should bind undo checkbox elements correctly","duration":5.883167000000071,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should update undo state when Player 1 checkbox is toggled","status":"passed","title":"should update undo state when Player 1 checkbox is toggled","duration":6.933499999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should update undo state when Player 2 checkbox is toggled","status":"passed","title":"should update undo state when Player 2 checkbox is toggled","duration":4.913084000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should disable undo button when current player has undo disabled","status":"passed","title":"should disable undo button when current player has undo disabled","duration":1.9261660000000802,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should enable undo button when current player has undo enabled","status":"passed","title":"should enable undo button when current player has undo enabled","duration":6.44541700000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should prevent undo when current player has undo disabled","status":"passed","title":"should prevent undo when current player has undo disabled","duration":1.7886249999999109,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should allow undo when current player has undo enabled","status":"passed","title":"should allow undo when current player has undo enabled","duration":1.6527500000000828,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should work independently for different players","status":"passed","title":"should work independently for different players","duration":4.819749999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should persist checkbox states correctly","status":"passed","title":"should persist checkbox states correctly","duration":10.412916999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should respect undo settings during game state changes","status":"passed","title":"should respect undo settings during game state changes","duration":2.566874999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should handle AI thinking state correctly","status":"passed","title":"should handle AI thinking state correctly","duration":2.9926249999999754,"failureMessages":[],"meta":{}}],"startTime":1750747013785,"endTime":1750747013860.9927,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-undo-conditional.vitest.js"},{"assertionResults":[{"ancestorTitles":["Ultimate 5x5 Bot Matrix - 1000 Games with \"Verlierer beginnt\" Logic"],"fullName":"Ultimate 5x5 Bot Matrix - 1000 Games with \"Verlierer beginnt\" Logic should run complete 5x5 matrix with all bots and generate comprehensive analysis","status":"passed","title":"should run complete 5x5 matrix with all bots and generate comprehensive analysis","duration":2542.551708,"failureMessages":[],"meta":{}}],"startTime":1750747013784,"endTime":1750747016326.5518,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ultimate-bot-matrix-1000.vitest.js"},{"assertionResults":[{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should detect horizontal winning move","status":"passed","title":"should detect horizontal winning move","duration":28.103665999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should detect vertical winning move","status":"passed","title":"should detect vertical winning move","duration":1.9390419999999722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should return null when no winning move exists","status":"passed","title":"should return null when no winning move exists","duration":4.277042000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should block immediate opponent winning move","status":"passed","title":"should block immediate opponent winning move","duration":1.1255419999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should block dangerous fork pattern _ x _ x","status":"passed","title":"should block dangerous fork pattern _ x _ x","duration":1.3796250000000327,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should return null when no blocking needed","status":"passed","title":"should return null when no blocking needed","duration":0.87074999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 3: Safe Column Identification"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 3: Safe Column Identification should identify safe columns (no traps)","status":"passed","title":"should identify safe columns (no traps)","duration":1.0553340000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 3: Safe Column Identification"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 3: Safe Column Identification should return all moves if no safe moves exist","status":"passed","title":"should return all moves if no safe moves exist","duration":1.2375829999999723,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection easy bot should select randomly from safe columns","status":"passed","title":"easy bot should select randomly from safe columns","duration":1.1962499999999636,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection medium bot should prefer center columns","status":"passed","title":"medium bot should prefer center columns","duration":4.931874999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection should handle single safe column","status":"passed","title":"should handle single safe column","duration":0.7639589999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection should return null for empty safe columns","status":"passed","title":"should return null for empty safe columns","duration":0.6507500000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration all bot difficulties should follow 4-stage process","status":"passed","title":"all bot difficulties should follow 4-stage process","duration":2.459500000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration should prioritize winning over blocking","status":"passed","title":"should prioritize winning over blocking","duration":8.690791999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration should prioritize blocking over safe random moves","status":"passed","title":"should prioritize blocking over safe random moves","duration":0.8942909999999529,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation"],"fullName":"Bot Performance Validation should run game series between bots without errors","status":"passed","title":"should run game series between bots without errors","duration":9.500708999999915,"failureMessages":[],"meta":{}}],"startTime":1750747013793,"endTime":1750747013862.5007,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/universal-bot-logic.vitest.js"}]}