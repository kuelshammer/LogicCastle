{"numTotalTestSuites":99,"numPassedTestSuites":99,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":199,"numPassedTests":198,"numFailedTests":0,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1750928980482,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should handle strategic analysis integration","status":"passed","title":"should handle strategic analysis integration","duration":23.362124999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should handle multiple consecutive moves without corruption","status":"passed","title":"should handle multiple consecutive moves without corruption","duration":28.746582999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should apply even/odd strategy with DOM feedback","status":"passed","title":"should apply even/odd strategy with DOM feedback","duration":2.4451250000000755,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should detect Zugzwang situations with UI integration","status":"passed","title":"should detect Zugzwang situations with UI integration","duration":5.603749999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should analyze fork opportunities with DOM updates","status":"passed","title":"should analyze fork opportunities with DOM updates","duration":2.798958999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should fallback to safe random with DOM state","status":"passed","title":"should fallback to safe random with DOM state","duration":1.4544169999999212,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Enhanced Smart (DOM-dependent)"],"fullName":"AI Strategy Enhanced Smart (DOM-dependent) should maintain performance under complex board states","status":"passed","title":"should maintain performance under complex board states","duration":2.061207999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should maintain move determinism for identical states","status":"passed","title":"should maintain move determinism for identical states","duration":1.4007500000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should show differences between random vs strategic bots","status":"passed","title":"should show differences between random vs strategic bots","duration":1.9735419999999522,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should show defensive vs offensive preferences","status":"passed","title":"should show defensive vs offensive preferences","duration":9.4375,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should prevent state corruption during analysis","status":"passed","title":"should prevent state corruption during analysis","duration":1.1717499999999745,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Consistency (DOM-dependent)"],"fullName":"AI Strategy Consistency (DOM-dependent) should handle cross-bot performance in complex positions","status":"passed","title":"should handle cross-bot performance in complex positions","duration":2.7839590000000953,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should handle random fallback behavior with DOM","status":"passed","title":"should handle random fallback behavior with DOM","duration":1.0133749999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should maintain multiple move sequence consistency","status":"passed","title":"should maintain multiple move sequence consistency","duration":1.0172079999999823,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should perform well with helper analysis integration","status":"passed","title":"should perform well with helper analysis integration","duration":1.1682910000000675,"failureMessages":[],"meta":{}},{"ancestorTitles":["AI Strategy Smart Random (DOM-dependent)"],"fullName":"AI Strategy Smart Random (DOM-dependent) should handle state isolation across multiple calls","status":"passed","title":"should handle state isolation across multiple calls","duration":0.7732089999999516,"failureMessages":[],"meta":{}}],"startTime":1750928981176,"endTime":1750928981263.7732,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ai-strategy-dom-tests.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Matrix Demo Tests"],"fullName":"Bot Matrix Demo Tests Demo: 50-Game Bot Matrix with \"Verlierer beginnt\" Logic","status":"passed","title":"Demo: 50-Game Bot Matrix with \"Verlierer beginnt\" Logic","duration":25.49066700000003,"failureMessages":[],"meta":{}}],"startTime":1750928982531,"endTime":1750928982556.4907,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-matrix-demo.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should complete 100 games without errors (Easy vs Medium)","status":"passed","title":"should complete 100 games without errors (Easy vs Medium)","duration":55.877958000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should complete 100 games without errors (Medium vs Hard)","status":"passed","title":"should complete 100 games without errors (Medium vs Hard)","duration":39.157291999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Consistency"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Consistency should show skill differential (Hard vs Easy)","status":"passed","title":"should show skill differential (Hard vs Easy)","duration":17.201458000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Implementation Validation"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Implementation Validation all bots should follow 4-stage decision process","status":"passed","title":"all bots should follow 4-stage decision process","duration":5.984083000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Universal Logic Implementation Validation"],"fullName":"Bot Performance Validation - 100 Game Series Universal Logic Implementation Validation no bot should make illegal moves in extended play","status":"passed","title":"no bot should make illegal moves in extended play","duration":4.829417000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation - 100 Game Series","Performance Metrics"],"fullName":"Bot Performance Validation - 100 Game Series Performance Metrics game completion rate should be 100%","status":"passed","title":"game completion rate should be 100%","duration":22.080249999999978,"failureMessages":[],"meta":{}}],"startTime":1750928981177,"endTime":1750928981322.0803,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-performance-100-series.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should beat Smart Random Bot majority of time","status":"passed","title":"Enhanced Smart Bot should beat Smart Random Bot majority of time","duration":26.127707999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should dominate Easy Bot","status":"passed","title":"Enhanced Smart Bot should dominate Easy Bot","duration":6.687750000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Smart Random Bot should beat Easy Bot","status":"passed","title":"Smart Random Bot should beat Easy Bot","duration":1.5387910000000602,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Enhanced Smart Bot should have higher strategic move ratio","status":"passed","title":"Enhanced Smart Bot should have higher strategic move ratio","duration":3.9873750000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests All bots should prefer strategic opening moves","status":"passed","title":"All bots should prefer strategic opening moves","duration":1.0729580000000851,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Bots should handle complex board states without crashing","status":"passed","title":"Bots should handle complex board states without crashing","duration":5.073624999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests Bot strength hierarchy should be maintained","status":"passed","title":"Bot strength hierarchy should be maintained","duration":5.912625000000048,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Strength Comparison Tests"],"fullName":"Bot Strength Comparison Tests 1000-Game Bot Matrix Analysis with \"Verlierer beginnt\" Logic","status":"skipped","title":"1000-Game Bot Matrix Analysis with \"Verlierer beginnt\" Logic","failureMessages":[],"meta":{}}],"startTime":1750928982488,"endTime":1750928982538.9126,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-strength-comparison.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should run complete tournament and establish rankings","status":"passed","title":"should run complete tournament and establish rankings","duration":35.353834000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should validate Enhanced Smart Bot performance metrics","status":"passed","title":"should validate Enhanced Smart Bot performance metrics","duration":13.256250000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Tournament System"],"fullName":"Bot Tournament System should demonstrate strategic improvement over time","status":"passed","title":"should demonstrate strategic improvement over time","duration":7.606167000000028,"failureMessages":[],"meta":{}}],"startTime":1750928981912,"endTime":1750928981968.6062,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/bot-tournament.vitest.js"},{"assertionResults":[{"ancestorTitles":["Comprehensive 5x5 Bot Matrix - 100 Game Series"],"fullName":"Comprehensive 5x5 Bot Matrix - 100 Game Series should run complete 5x5 matrix and generate performance table","status":"passed","title":"should run complete 5x5 matrix and generate performance table","duration":379.168417,"failureMessages":[],"meta":{}}],"startTime":1750928981175,"endTime":1750928981554.1685,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/comprehensive-bot-matrix-5x5.vitest.js"},{"assertionResults":[{"ancestorTitles":["Debug Bot Matrix"],"fullName":"Debug Bot Matrix should count all games correctly","status":"passed","title":"should count all games correctly","duration":53.56850000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Debug Bot Matrix"],"fullName":"Debug Bot Matrix should run small matrix without errors","status":"passed","title":"should run small matrix without errors","duration":6.444208000000003,"failureMessages":[],"meta":{}}],"startTime":1750928982529,"endTime":1750928982589.444,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/debug-bot-matrix.vitest.js"},{"assertionResults":[{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should register and resolve simple services","status":"passed","title":"should register and resolve simple services","duration":54.162207999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should support singleton services","status":"passed","title":"should support singleton services","duration":1.3545410000000402,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should handle factory functions","status":"passed","title":"should handle factory functions","duration":19.560957999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should inject dependencies correctly","status":"passed","title":"should inject dependencies correctly","duration":1.9475419999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should throw error for unregistered services","status":"passed","title":"should throw error for unregistered services","duration":3.070666000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","ServiceContainer Core Functionality"],"fullName":"Dependency Injection System ServiceContainer Core Functionality should support child containers","status":"passed","title":"should support child containers","duration":2.4050829999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should validate objects against interfaces","status":"passed","title":"should validate objects against interfaces","duration":1.103458000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should create interface proxies for runtime validation","status":"passed","title":"should create interface proxies for runtime validation","duration":3.709707999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Interface Validation"],"fullName":"Dependency Injection System Interface Validation should validate known service interfaces","status":"passed","title":"should validate known service interfaces","duration":1.0968749999999545,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should configure for testing environment","status":"passed","title":"should configure for testing environment","duration":2.1464580000000524,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should create bots with different difficulties","status":"passed","title":"should create bots with different difficulties","duration":1.3840000000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should handle configuration errors gracefully","status":"passed","title":"should handle configuration errors gracefully","duration":0.7322500000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should not reconfigure when already configured","status":"passed","title":"should not reconfigure when already configured","duration":0.6158750000000737,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","GameFactory Configuration"],"fullName":"Dependency Injection System GameFactory Configuration should reset configuration properly","status":"passed","title":"should reset configuration properly","duration":0.6610839999999598,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should create functional game instances","status":"passed","title":"should create functional game instances","duration":4.8826669999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should create game with UI when DOM element provided","status":"passed","title":"should create game with UI when DOM element provided","duration":1.2759170000000495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Game Instance Creation"],"fullName":"Dependency Injection System Game Instance Creation should validate interfaces when requested","status":"passed","title":"should validate interfaces when requested","duration":1.090167000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Integration with Legacy Code"],"fullName":"Dependency Injection System Integration with Legacy Code should maintain backward compatibility","status":"passed","title":"should maintain backward compatibility","duration":0.7243339999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Integration with Legacy Code"],"fullName":"Dependency Injection System Integration with Legacy Code should support asynchronous service resolution","status":"passed","title":"should support asynchronous service resolution","duration":13.73395800000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should handle circular dependencies gracefully","status":"passed","title":"should handle circular dependencies gracefully","duration":2.623458000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should handle malformed service registrations","status":"passed","title":"should handle malformed service registrations","duration":0.7908329999999069,"failureMessages":[],"meta":{}},{"ancestorTitles":["Dependency Injection System","Error Handling and Edge Cases"],"fullName":"Dependency Injection System Error Handling and Edge Cases should clear all services properly","status":"passed","title":"should clear all services properly","duration":1.1846669999999904,"failureMessages":[],"meta":{}}],"startTime":1750928981170,"endTime":1750928981290.1846,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/dependency-injection.vitest.js"},{"assertionResults":[{"ancestorTitles":["Expert Bot Integration Tests","UI Mode Mapping"],"fullName":"Expert Bot Integration Tests UI Mode Mapping Expert mode should map to monte-carlo difficulty","status":"passed","title":"Expert mode should map to monte-carlo difficulty","duration":47.84333300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","UI Mode Mapping"],"fullName":"Expert Bot Integration Tests UI Mode Mapping Expert should use enhanced Monte Carlo configuration","status":"passed","title":"Expert should use enhanced Monte Carlo configuration","duration":5.212166000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Monte Carlo bot should make strategic moves","status":"passed","title":"Monte Carlo bot should make strategic moves","duration":8.577833000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Expert bot should show center preference in opening","status":"passed","title":"Expert bot should show center preference in opening","duration":1.3765419999999722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Performance Validation"],"fullName":"Expert Bot Integration Tests Performance Validation Expert bot should handle complex positions","status":"passed","title":"Expert bot should handle complex positions","duration":6.240583000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Bot Hierarchy Validation"],"fullName":"Expert Bot Integration Tests Bot Hierarchy Validation Bot difficulty progression should be logical","status":"passed","title":"Bot difficulty progression should be logical","duration":1.0167500000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Bot Hierarchy Validation"],"fullName":"Expert Bot Integration Tests Bot Hierarchy Validation Expert should be the highest difficulty available in UI","status":"passed","title":"Expert should be the highest difficulty available in UI","duration":0.8385839999999689,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert Bot Integration Tests","Monte Carlo Implementation Access"],"fullName":"Expert Bot Integration Tests Monte Carlo Implementation Access Monte Carlo should use enhanced simulation count","status":"passed","title":"Monte Carlo should use enhanced simulation count","duration":0.8285000000000764,"failureMessages":[],"meta":{}}],"startTime":1750928982533,"endTime":1750928982604.8386,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/expert-bot-quick-test.vitest.js"},{"assertionResults":[{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should outperform Defensive bot","status":"passed","title":"Monte Carlo should outperform Defensive bot","duration":21.87866699999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should outperform Enhanced Smart bot","status":"passed","title":"Monte Carlo should outperform Enhanced Smart bot","duration":2.458499999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Monte Carlo vs Strategic Bots"],"fullName":"Expert vs Strategic Bots Performance Tests Monte Carlo vs Strategic Bots Monte Carlo should dominate Smart Random bot","status":"passed","title":"Monte Carlo should dominate Smart Random bot","duration":3.779957999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Expert Mode Validation"],"fullName":"Expert vs Strategic Bots Performance Tests Expert Mode Validation Expert should be strongest available bot in UI hierarchy","status":"passed","title":"Expert should be strongest available bot in UI hierarchy","duration":6.515834000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Expert Mode Validation"],"fullName":"Expert vs Strategic Bots Performance Tests Expert Mode Validation Monte Carlo should show consistent performance advantage","status":"passed","title":"Monte Carlo should show consistent performance advantage","duration":5.86545799999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Strategic Depth Comparison"],"fullName":"Expert vs Strategic Bots Performance Tests Strategic Depth Comparison Monte Carlo should show better opening play","status":"passed","title":"Monte Carlo should show better opening play","duration":3.3772909999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Expert vs Strategic Bots Performance Tests","Strategic Depth Comparison"],"fullName":"Expert vs Strategic Bots Performance Tests Strategic Depth Comparison Monte Carlo should handle complex positions better","status":"passed","title":"Monte Carlo should handle complex positions better","duration":2.2948749999999336,"failureMessages":[],"meta":{}}],"startTime":1750928982515,"endTime":1750928982561.295,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/expert-vs-strategic-quick.vitest.js"},{"assertionResults":[{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x _ x _ pattern (user example)","status":"passed","title":"should detect _ x _ x _ pattern (user example)","duration":14.812625000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x _ x pattern","status":"passed","title":"should detect _ x _ x pattern","duration":1.339790999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect x _ x _ pattern","status":"passed","title":"should detect x _ x _ pattern","duration":1.320916000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Classic Fork Pattern Detection"],"fullName":"Fork Detection Core Logic Classic Fork Pattern Detection should detect _ x x _ pattern","status":"passed","title":"should detect _ x x _ pattern","duration":1.120708000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Counter-Move Calculation"],"fullName":"Fork Detection Core Logic Fork Counter-Move Calculation should calculate correct counter moves for _ x _ x pattern","status":"passed","title":"should calculate correct counter moves for _ x _ x pattern","duration":2.489791999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Counter-Move Calculation"],"fullName":"Fork Detection Core Logic Fork Counter-Move Calculation should prioritize center positions in counter moves","status":"passed","title":"should prioritize center positions in counter moves","duration":0.9310839999999416,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Critical Fork Defense"],"fullName":"Fork Detection Core Logic Critical Fork Defense should identify opponent forks as critical threats","status":"passed","title":"should identify opponent forks as critical threats","duration":4.564291999999909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Critical Fork Defense"],"fullName":"Fork Detection Core Logic Critical Fork Defense should provide specific columns for counter-moves","status":"passed","title":"should provide specific columns for counter-moves","duration":4.882791999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Fork Opportunity Detection"],"fullName":"Fork Detection Core Logic Fork Opportunity Detection should find opportunities to create our own forks","status":"passed","title":"should find opportunities to create our own forks","duration":7.955999999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should not detect forks when opponent pieces block pattern","status":"passed","title":"should not detect forks when opponent pieces block pattern","duration":1.5785409999999729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should handle empty board gracefully","status":"passed","title":"should handle empty board gracefully","duration":0.705665999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Edge Cases and Validation"],"fullName":"Fork Detection Core Logic Edge Cases and Validation should handle full board gracefully","status":"passed","title":"should handle full board gracefully","duration":0.6931250000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Real Game Scenario Testing"],"fullName":"Fork Detection Core Logic Real Game Scenario Testing should solve the user reported problem: _ _ x x x _ _","status":"passed","title":"should solve the user reported problem: _ _ x x x _ _","duration":0.6171669999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fork Detection Core Logic","Real Game Scenario Testing"],"fullName":"Fork Detection Core Logic Real Game Scenario Testing should recognize when player X can create winning fork","status":"passed","title":"should recognize when player X can create winning fork","duration":0.5940840000000662,"failureMessages":[],"meta":{}}],"startTime":1750928981901,"endTime":1750928981948.594,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/fork-detection.vitest.js"},{"assertionResults":[{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should use 1000 simulations instead of 100","status":"passed","title":"should use 1000 simulations instead of 100","duration":20.587999999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should have time-boxing enabled","status":"passed","title":"should have time-boxing enabled","duration":1.3098750000000337,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Improvements"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Improvements should complete thinking within time limit","status":"passed","title":"should complete thinking within time limit","duration":28.50070800000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should adjust simulations based on game phase","status":"passed","title":"should adjust simulations based on game phase","duration":4.562290999999959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should use more simulations in mid-game","status":"passed","title":"should use more simulations in mid-game","duration":2.51724999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should respect minimum simulations","status":"passed","title":"should respect minimum simulations","duration":35.84224999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Adaptive Simulation Counts"],"fullName":"Enhanced Monte Carlo Bot Tests Adaptive Simulation Counts should respect maximum simulations","status":"passed","title":"should respect maximum simulations","duration":0.9885000000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","UCB1 Selection Strategy"],"fullName":"Enhanced Monte Carlo Bot Tests UCB1 Selection Strategy should explore unvisited columns first","status":"passed","title":"should explore unvisited columns first","duration":6.951667000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","UCB1 Selection Strategy"],"fullName":"Enhanced Monte Carlo Bot Tests UCB1 Selection Strategy should balance exploitation and exploration","status":"passed","title":"should balance exploitation and exploration","duration":1.4423329999999623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Confidence Weighting"],"fullName":"Enhanced Monte Carlo Bot Tests Confidence Weighting should apply confidence bonus to well-explored columns","status":"passed","title":"should apply confidence bonus to well-explored columns","duration":0.8733330000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Strategic Strength"],"fullName":"Enhanced Monte Carlo Bot Tests Strategic Strength should prefer winning moves in tactical positions","status":"passed","title":"should prefer winning moves in tactical positions","duration":10.019874999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Strategic Strength"],"fullName":"Enhanced Monte Carlo Bot Tests Strategic Strength should avoid losing moves when possible","status":"passed","title":"should avoid losing moves when possible","duration":4.75487499999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Benchmarks"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Benchmarks should run significantly more simulations than basic bot","status":"passed","title":"should run significantly more simulations than basic bot","duration":8.086125000000038,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Performance Benchmarks"],"fullName":"Enhanced Monte Carlo Bot Tests Performance Benchmarks should maintain good performance under time pressure","status":"passed","title":"should maintain good performance under time pressure","duration":15.044166999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should work as Stage 4 strategy within safe columns only","status":"passed","title":"should work as Stage 4 strategy within safe columns only","duration":7.7100410000000466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should handle empty safe columns gracefully","status":"passed","title":"should handle empty safe columns gracefully","duration":2.970542000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Enhanced Monte Carlo Bot Tests","Integration with Universal 4-Stage Logic"],"fullName":"Enhanced Monte Carlo Bot Tests Integration with Universal 4-Stage Logic should handle single safe column efficiently","status":"passed","title":"should handle single safe column efficiently","duration":0.6667090000000826,"failureMessages":[],"meta":{}}],"startTime":1750928981169,"endTime":1750928981326.6667,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/monte-carlo-enhanced.vitest.js"},{"assertionResults":[{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Easy bot should map to smart-random","status":"passed","title":"Easy bot should map to smart-random","duration":17.15895899999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Medium bot should map to offensiv-gemischt","status":"passed","title":"Medium bot should map to offensiv-gemischt","duration":1.1801660000000993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","3-Tier Bot Progression"],"fullName":"Updated Bot Mapping Tests 3-Tier Bot Progression Strong bot should map to monte-carlo","status":"passed","title":"Strong bot should map to monte-carlo","duration":1.145667000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Bot Strength Progression"],"fullName":"Updated Bot Mapping Tests Bot Strength Progression Should have clear win rate progression","status":"passed","title":"Should have clear win rate progression","duration":1.3286659999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Bot Strength Progression"],"fullName":"Updated Bot Mapping Tests Bot Strength Progression Should have meaningful difficulty gaps","status":"passed","title":"Should have meaningful difficulty gaps","duration":2.743000000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","UI Options Validation"],"fullName":"Updated Bot Mapping Tests UI Options Validation Should have exactly 4 game modes (including 2-player)","status":"passed","title":"Should have exactly 4 game modes (including 2-player)","duration":0.8042919999999185,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","UI Options Validation"],"fullName":"Updated Bot Mapping Tests UI Options Validation Should have clear bot names","status":"passed","title":"Should have clear bot names","duration":0.8906670000000076,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Easy bot should be beginner-friendly","status":"passed","title":"Easy bot should be beginner-friendly","duration":0.71774999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Medium bot should provide balanced challenge","status":"passed","title":"Medium bot should provide balanced challenge","duration":0.9212499999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Updated Bot Mapping Tests","Expected Performance Ranges"],"fullName":"Updated Bot Mapping Tests Expected Performance Ranges Strong bot should be challenging for experienced players","status":"passed","title":"Strong bot should be challenging for experienced players","duration":5.575584000000049,"failureMessages":[],"meta":{}}],"startTime":1750928981894,"endTime":1750928981927.5757,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/new-bot-mapping.vitest.js"},{"assertionResults":[{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should perform basic calculations","status":"passed","title":"should perform basic calculations","duration":15.59862499999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should work with DOM elements","status":"passed","title":"should work with DOM elements","duration":2.763500000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should handle async operations","status":"passed","title":"should handle async operations","duration":18.568958000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Simple Math Tests (Vitest Demo)"],"fullName":"Simple Math Tests (Vitest Demo) should provide performance timing","status":"passed","title":"should provide performance timing","duration":2.7355420000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle array operations","status":"passed","title":"should handle array operations","duration":2.3898340000000644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle object operations","status":"passed","title":"should handle object operations","duration":2.9885830000000624,"failureMessages":[],"meta":{}},{"ancestorTitles":["Array and Object Tests"],"fullName":"Array and Object Tests should handle deep equality","status":"passed","title":"should handle deep equality","duration":0.9612089999999398,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling Tests"],"fullName":"Error Handling Tests should catch thrown errors","status":"passed","title":"should catch thrown errors","duration":1.0350409999999783,"failureMessages":[],"meta":{}},{"ancestorTitles":["Error Handling Tests"],"fullName":"Error Handling Tests should handle function calls that should not throw","status":"passed","title":"should handle function calls that should not throw","duration":0.96287499999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate board operations","status":"passed","title":"should simulate board operations","duration":2.0396670000000086,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate win detection logic","status":"passed","title":"should simulate win detection logic","duration":0.7541670000000522,"failureMessages":[],"meta":{}},{"ancestorTitles":["Game Logic Simulation (without actual classes)"],"fullName":"Game Logic Simulation (without actual classes) should simulate valid moves checking","status":"passed","title":"should simulate valid moves checking","duration":6.925041999999962,"failureMessages":[],"meta":{}}],"startTime":1750928981888,"endTime":1750928981945.925,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/simple-backend.vitest.js"},{"assertionResults":[{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Each strategic bot type uses distinct implementation","status":"passed","title":"Each strategic bot type uses distinct implementation","duration":65.51966600000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation getBestMove routes to specific strategy methods","status":"passed","title":"getBestMove routes to specific strategy methods","duration":1.4645419999999376,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Strategic bots show different move preferences","status":"passed","title":"Strategic bots show different move preferences","duration":8.16112499999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Strategic Bot Fix Validation"],"fullName":"Strategic Bot Fix Validation Universal logic fallback works for unknown bot types","status":"passed","title":"Universal logic fallback works for unknown bot types","duration":1.22199999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Performance Impact Assessment"],"fullName":"Performance Impact Assessment Strategic routing does not significantly impact performance","status":"passed","title":"Strategic routing does not significantly impact performance","duration":4.006457999999952,"failureMessages":[],"meta":{}}],"startTime":1750928982065,"endTime":1750928982146.0063,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/strategic-bot-fix-validation.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-easy to offensiv-gemischt (Rank #4)","status":"passed","title":"should map vs-bot-easy to offensiv-gemischt (Rank #4)","duration":34.686500000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-medium to enhanced-smart (Rank #2)","status":"passed","title":"should map vs-bot-medium to enhanced-smart (Rank #2)","duration":1.409249999999929,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should map vs-bot-strong to defensive (Rank #1)","status":"passed","title":"should map vs-bot-strong to defensive (Rank #1)","duration":1.2724580000000287,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should maintain legacy vs-bot-smart compatibility","status":"passed","title":"should maintain legacy vs-bot-smart compatibility","duration":1.1418340000000171,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Difficulty Mapping"],"fullName":"UI Bot Mapping Logic Bot Difficulty Mapping should default to easy for unknown modes","status":"passed","title":"should default to easy for unknown modes","duration":19.279833000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","AI Mode Detection"],"fullName":"UI Bot Mapping Logic AI Mode Detection should correctly identify AI modes","status":"passed","title":"should correctly identify AI modes","duration":1.2179579999999532,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Player Name Configuration"],"fullName":"UI Bot Mapping Logic Player Name Configuration should set correct player names for bot modes","status":"passed","title":"should set correct player names for bot modes","duration":0.9508749999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Player Name Configuration"],"fullName":"UI Bot Mapping Logic Player Name Configuration should return default name for non-bot modes","status":"passed","title":"should return default name for non-bot modes","duration":0.7696250000000191,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Strength Hierarchy Validation"],"fullName":"UI Bot Mapping Logic Bot Strength Hierarchy Validation should implement correct strength ordering based on scientific analysis","status":"passed","title":"should implement correct strength ordering based on scientific analysis","duration":2.187000000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Bot Strength Hierarchy Validation"],"fullName":"UI Bot Mapping Logic Bot Strength Hierarchy Validation should provide meaningful difficulty progression","status":"passed","title":"should provide meaningful difficulty progression","duration":5.045540999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Performance Validation Documentation"],"fullName":"UI Bot Mapping Logic Performance Validation Documentation should document that bot selection is scientifically validated","status":"passed","title":"should document that bot selection is scientifically validated","duration":1.3349170000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mapping Logic","Performance Validation Documentation"],"fullName":"UI Bot Mapping Logic Performance Validation Documentation should validate available bot modes match HTML select options","status":"passed","title":"should validate available bot modes match HTML select options","duration":0.791417000000024,"failureMessages":[],"meta":{}}],"startTime":1750928982532,"endTime":1750928982605.7915,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-bot-mapping-simple.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Bot Mode Validation","Bot Mode Detection"],"fullName":"UI Bot Mode Validation Bot Mode Detection should correctly identify AI modes","status":"passed","title":"should correctly identify AI modes","duration":1.7635419999999726,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-easy to offensiv-gemischt (Rank #4)","status":"passed","title":"should map vs-bot-easy to offensiv-gemischt (Rank #4)","duration":0.4012920000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-medium to enhanced-smart (Rank #2)","status":"passed","title":"should map vs-bot-medium to enhanced-smart (Rank #2)","duration":0.4437080000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should map vs-bot-strong to defensive (Rank #1)","status":"passed","title":"should map vs-bot-strong to defensive (Rank #1)","duration":0.22287499999998772,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Difficulty Mapping"],"fullName":"UI Bot Mode Validation Bot Difficulty Mapping should maintain legacy vs-bot-smart compatibility","status":"passed","title":"should maintain legacy vs-bot-smart compatibility","duration":0.36370899999997164,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Strength Hierarchy"],"fullName":"UI Bot Mode Validation Bot Strength Hierarchy should implement correct strength ordering","status":"passed","title":"should implement correct strength ordering","duration":0.38966699999997445,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Bot Strength Hierarchy"],"fullName":"UI Bot Mode Validation Bot Strength Hierarchy should use scientifically validated bot rankings","status":"passed","title":"should use scientifically validated bot rankings","duration":0.2606660000000147,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Player Name Configuration"],"fullName":"UI Bot Mode Validation Player Name Configuration should set correct player names for bot modes","status":"passed","title":"should set correct player names for bot modes","duration":0.3675829999999678,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Player Name Configuration"],"fullName":"UI Bot Mode Validation Player Name Configuration should reset player names for two-player mode","status":"passed","title":"should reset player names for two-player mode","duration":0.25,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","AI Move Generation"],"fullName":"UI Bot Mode Validation AI Move Generation should generate valid moves for all bot difficulties","status":"passed","title":"should generate valid moves for all bot difficulties","duration":0.5190839999999639,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","AI Move Generation"],"fullName":"UI Bot Mode Validation AI Move Generation should handle empty board scenarios","status":"passed","title":"should handle empty board scenarios","duration":0.07991600000002563,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Legacy Compatibility"],"fullName":"UI Bot Mode Validation Legacy Compatibility should maintain backward compatibility with existing modes","status":"passed","title":"should maintain backward compatibility with existing modes","duration":0.05712499999998499,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Bot Mode Validation","Legacy Compatibility"],"fullName":"UI Bot Mode Validation Legacy Compatibility should handle unknown modes gracefully","status":"passed","title":"should handle unknown modes gracefully","duration":0.03695799999997007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Mode Performance Validation"],"fullName":"Bot Mode Performance Validation should validate that chosen bots are performance-tested","status":"passed","title":"should validate that chosen bots are performance-tested","duration":0.109375,"failureMessages":[],"meta":{}}],"startTime":1750928982687,"endTime":1750928982693.1094,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-bot-mode-validation.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Hints button should exist and have correct styling","status":"passed","title":"Hints button should exist and have correct styling","duration":26.520375000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Hints modal should toggle on button click","status":"passed","title":"Hints modal should toggle on button click","duration":51.037958,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests F2 keyboard shortcut should toggle hints modal","status":"passed","title":"F2 keyboard shortcut should toggle hints modal","duration":16.13479200000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests F1 keyboard shortcut should still work for help modal","status":"passed","title":"F1 keyboard shortcut should still work for help modal","duration":9.989709000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Close button should close hints modal","status":"passed","title":"Close button should close hints modal","duration":2.6518330000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Click outside modal should close it","status":"passed","title":"Click outside modal should close it","duration":2.313333000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests All help checkboxes should be present in modal","status":"passed","title":"All help checkboxes should be present in modal","duration":3.255209000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Modal structure should be correct","status":"passed","title":"Modal structure should be correct","duration":5.402083999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Modal should not interfere with game functionality","status":"passed","title":"Modal should not interfere with game functionality","duration":2.3843749999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Both modals should be able to coexist","status":"passed","title":"Both modals should be able to coexist","duration":4.742624999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Checkbox states should persist across modal toggles","status":"passed","title":"Checkbox states should persist across modal toggles","duration":4.291249999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Hints Modal Integration Tests"],"fullName":"UI Hints Modal Integration Tests Event listeners should be properly attached","status":"passed","title":"Event listeners should be properly attached","duration":1.5625,"failureMessages":[],"meta":{}}],"startTime":1750928981158,"endTime":1750928981288.5625,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-hints-modal-integration.vitest.js"},{"assertionResults":[{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should initialize undo state as disabled for both players","status":"passed","title":"should initialize undo state as disabled for both players","duration":27.225665999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should bind undo checkbox elements correctly","status":"passed","title":"should bind undo checkbox elements correctly","duration":3.2690000000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should update undo state when Player 1 checkbox is toggled","status":"passed","title":"should update undo state when Player 1 checkbox is toggled","duration":14.274000000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should update undo state when Player 2 checkbox is toggled","status":"passed","title":"should update undo state when Player 2 checkbox is toggled","duration":5.364749999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should disable undo button when current player has undo disabled","status":"passed","title":"should disable undo button when current player has undo disabled","duration":5.9040410000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should enable undo button when current player has undo enabled","status":"passed","title":"should enable undo button when current player has undo enabled","duration":2.5230830000000424,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should prevent undo when current player has undo disabled","status":"passed","title":"should prevent undo when current player has undo disabled","duration":2.591709000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should allow undo when current player has undo enabled","status":"passed","title":"should allow undo when current player has undo enabled","duration":6.260083000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should work independently for different players","status":"passed","title":"should work independently for different players","duration":4.103666999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should persist checkbox states correctly","status":"passed","title":"should persist checkbox states correctly","duration":8.450458000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should respect undo settings during game state changes","status":"passed","title":"should respect undo settings during game state changes","duration":1.5631670000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["UI Undo Conditional (Vitest Integration)"],"fullName":"UI Undo Conditional (Vitest Integration) should handle AI thinking state correctly","status":"passed","title":"should handle AI thinking state correctly","duration":4.8597089999999525,"failureMessages":[],"meta":{}}],"startTime":1750928981893,"endTime":1750928981979.8596,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ui-undo-conditional.vitest.js"},{"assertionResults":[{"ancestorTitles":["Bot Matrix Tests"],"fullName":"Bot Matrix Tests should run a 2x2 matrix with easy and smart-random bots","status":"passed","title":"should run a 2x2 matrix with easy and smart-random bots","duration":59.008375,"failureMessages":[],"meta":{}}],"startTime":1750928981199,"endTime":1750928981258.0083,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/ultimate-bot-matrix-1000.vitest.js"},{"assertionResults":[{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should detect horizontal winning move","status":"passed","title":"should detect horizontal winning move","duration":24.031166999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should detect vertical winning move","status":"passed","title":"should detect vertical winning move","duration":2.1014999999999873,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 1: Direct Win Detection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 1: Direct Win Detection should return null when no winning move exists","status":"passed","title":"should return null when no winning move exists","duration":6.301333999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should block immediate opponent winning move","status":"passed","title":"should block immediate opponent winning move","duration":2.730083000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should block dangerous fork pattern _ x _ x","status":"passed","title":"should block dangerous fork pattern _ x _ x","duration":1.404916999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern)"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 2: Comprehensive Blocking (includes _ x _ x _ pattern) should return null when no blocking needed","status":"passed","title":"should return null when no blocking needed","duration":4.114749999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 3: Safe Column Identification"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 3: Safe Column Identification should identify safe columns (no traps)","status":"passed","title":"should identify safe columns (no traps)","duration":2.3274999999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 3: Safe Column Identification"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 3: Safe Column Identification should return all moves if no safe moves exist","status":"passed","title":"should return all moves if no safe moves exist","duration":1.2287089999999807,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection easy bot should select randomly from safe columns","status":"passed","title":"easy bot should select randomly from safe columns","duration":1.0605000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection medium bot should prefer center columns","status":"passed","title":"medium bot should prefer center columns","duration":0.8169169999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection should handle single safe column","status":"passed","title":"should handle single safe column","duration":0.7512080000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","STAGE 4: Bot-Specific Selection"],"fullName":"Universal Bot Logic (4-Stage System) STAGE 4: Bot-Specific Selection should return null for empty safe columns","status":"passed","title":"should return null for empty safe columns","duration":6.778290999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration all bot difficulties should follow 4-stage process","status":"passed","title":"all bot difficulties should follow 4-stage process","duration":1.25750000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration should prioritize winning over blocking","status":"passed","title":"should prioritize winning over blocking","duration":4.021000000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["Universal Bot Logic (4-Stage System)","Universal Bot Logic Integration"],"fullName":"Universal Bot Logic (4-Stage System) Universal Bot Logic Integration should prioritize blocking over safe random moves","status":"passed","title":"should prioritize blocking over safe random moves","duration":0.7537090000000717,"failureMessages":[],"meta":{}},{"ancestorTitles":["Bot Performance Validation"],"fullName":"Bot Performance Validation should run game series between bots without errors","status":"passed","title":"should run game series between bots without errors","duration":12.981625000000008,"failureMessages":[],"meta":{}}],"startTime":1750928981911,"endTime":1750928981983.9817,"status":"passed","message":"","name":"/Users/max/LogicCastle/tests/vitest/universal-bot-logic.vitest.js"}]}